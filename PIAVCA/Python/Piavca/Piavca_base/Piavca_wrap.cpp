/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_DIRECTORS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC)
#   if (__SUNPRO_CC <= 0x560)
#     define SWIGTEMPLATEDISAMBIGUATOR template
#   else
#     define SWIGTEMPLATEDISAMBIGUATOR 
#   endif
# else
#   define SWIGTEMPLATEDISAMBIGUATOR 
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif


/* Python.h has to appear first */
#include <Python.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "3"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store inforomation on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (l1 - f1) - (l2 - f2);
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13




/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif
/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif


/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif


/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);
    PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_Format(PyExc_RuntimeError, mesg);
  }
}



#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(ptr, type, flags)
#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         PySwigClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char*) name, obj);
  Py_DECREF(obj);                            
}

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, int min, int max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register int l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), min, l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), max, l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* PySwigClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
} PySwigClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  PySwigClientData *data = (PySwigClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  PySwigClientData *data = desc ? (PySwigClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME PySwigClientData * 
PySwigClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    PySwigClientData *data = (PySwigClientData *)malloc(sizeof(PySwigClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    return data;
  }
}

SWIGRUNTIME void 
PySwigClientData_Del(PySwigClientData* data)
{
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== PySwigObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
} PySwigObject;

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_format(const char* fmt, PySwigObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, PySwigObject_long(v)) == 0) {
      PyObject *ofmt = PyString_FromString(fmt);
      if (ofmt) {
	res = PyString_Format(ofmt,args);
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  return PySwigObject_format("%o",v);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  return PySwigObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
PySwigObject_repr(PySwigObject *v)
#else
PySwigObject_repr(PySwigObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *hex = PySwigObject_hex(v);    
  PyObject *repr = PyString_FromFormat("<Swig Object of type '%s' at 0x%s>", name, PyString_AsString(hex));
  Py_DECREF(hex);
  if (v->next) {
#ifdef METH_NOARGS
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next);
#else
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next, args);
#endif
    PyString_ConcatAndDel(&repr,nrep);
  }
  return repr;  
}

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
#ifdef METH_NOARGS
  PyObject *repr = PySwigObject_repr(v);
#else
  PyObject *repr = PySwigObject_repr(v, NULL);
#endif
  if (repr) {
    fputs(PyString_AsString(repr), fp);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);

SWIGRUNTIME PyTypeObject*
PySwigObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigObject_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_type())
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
PySwigObject_dealloc(PyObject *v)
{
  PySwigObject *sobj = (PySwigObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own) {
    swig_type_info *ty = sobj->ty;
    PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporal object to carry the destroy operation */
	PyObject *tmp = PySwigObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } else {
      const char *name = SWIG_TypePrettyName(ty);
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", name);
#endif
    }
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
PySwigObject_append(PyObject* v, PyObject* next)
{
  PySwigObject *sobj = (PySwigObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!PySwigObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
PySwigObject_next(PyObject* v)
#else
PySwigObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_disown(PyObject *v)
#else
PySwigObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_acquire(PyObject *v)
#else
PySwigObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
PySwigObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      PySwigObject *sobj = (PySwigObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v);
	} else {
	  PySwigObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v,args);
	} else {
	  PySwigObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
PySwigObject_getattr(PySwigObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
_PySwigObject_type(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02020000
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */ 
#elif PY_VERSION_HEX >= 0x02000000
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject pyswigobject_type;  
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */
	(char *)"PySwigObject",		    /* tp_name */
	sizeof(PySwigObject),		    /* tp_basicsize */
	0,			            /* tp_itemsize */
	(destructor)PySwigObject_dealloc,   /* tp_dealloc */
	(printfunc)PySwigObject_print,	    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
	(getattrfunc)PySwigObject_getattr,  /* tp_getattr */ 
#else
	(getattrfunc)0,			    /* tp_getattr */ 
#endif
	(setattrfunc)0,			    /* tp_setattr */ 
	(cmpfunc)PySwigObject_compare,	    /* tp_compare */ 
	(reprfunc)PySwigObject_repr,	    /* tp_repr */    
	&PySwigObject_as_number,	    /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)PySwigObject_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigobject_doc, 	            /* tp_doc */        
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	swigobject_methods,		    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0,	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigobject_type = tmp;
    pyswigobject_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigobject_type;
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own)
{
  PySwigObject *sobj = PyObject_NEW(PySwigObject, PySwigObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->ty->name);
  } else {
    return PyString_FromString(v->ty->name);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);

SWIGRUNTIME PyTypeObject*
PySwigPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigPacked_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == _PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

SWIGRUNTIME void
PySwigPacked_dealloc(PyObject *v)
{
  if (PySwigPacked_Check(v)) {
    PySwigPacked *sobj = (PySwigPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
_PySwigPacked_type(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject pyswigpacked_type;
  static int type_init = 0;  
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */	
	(char *)"PySwigPacked",		    /* tp_name */	
	sizeof(PySwigPacked),		    /* tp_basicsize */	
	0,				    /* tp_itemsize */	
	(destructor)PySwigPacked_dealloc,   /* tp_dealloc */	
	(printfunc)PySwigPacked_print,	    /* tp_print */   	
	(getattrfunc)0,			    /* tp_getattr */ 	
	(setattrfunc)0,			    /* tp_setattr */ 	
	(cmpfunc)PySwigPacked_compare,	    /* tp_compare */ 	
	(reprfunc)PySwigPacked_repr,	    /* tp_repr */    	
	0,	                            /* tp_as_number */	
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */	
	(hashfunc)0,			    /* tp_hash */	
	(ternaryfunc)0,			    /* tp_call */	
	(reprfunc)PySwigPacked_str,	    /* tp_str */	
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigpacked_doc, 	            /* tp_doc */
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	0,		                    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0, 	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigpacked_type = tmp;
    pyswigpacked_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigpacked_type;
}

SWIGRUNTIME PyObject *
PySwigPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  PySwigPacked *sobj = PyObject_NEW(PySwigPacked, PySwigPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (PySwigPacked_Check(obj)) {
    PySwigPacked *sobj = (PySwigPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
  return PyString_FromString("this");
}

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  static PyObject *SWIG_STATIC_POINTER(swig_this) = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

SWIGRUNTIME PySwigObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  if (PySwigObject_Check(pyobj)) {
    return (PySwigObject *) pyobj;
  } else {
    PyObject *obj = 0;
#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
    if (PyInstance_Check(pyobj)) {
      obj = _PyInstance_Lookup(pyobj, SWIG_This());      
    } else {
      PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
      } else {
#ifdef PyWeakref_CheckProxy
	if (PyWeakref_CheckProxy(pyobj)) {
	  PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	  return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
	}
#endif
	obj = PyObject_GetAttr(pyobj,SWIG_This());
	if (obj) {
	  Py_DECREF(obj);
	} else {
	  if (PyErr_Occurred()) PyErr_Clear();
	  return 0;
	}
      }
    }
#else
    obj = PyObject_GetAttr(pyobj,SWIG_This());
    if (obj) {
      Py_DECREF(obj);
    } else {
      if (PyErr_Occurred()) PyErr_Clear();
      return 0;
    }
#endif
    if (obj && !PySwigObject_Check(obj)) {
      /* a PyObject is called 'this', try to get the 'real this'
	 PySwigObject from it */ 
      return SWIG_Python_GetSwigThis(obj);
    }
    return (PySwigObject *)obj;
  }
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own) {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  if (!obj) return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr) *ptr = 0;
    return SWIG_OK;
  } else {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    while (sobj) {
      void *vptr = sobj->ptr;
      if (ty) {
	swig_type_info *to = sobj->ty;
	if (to == ty) {
	  /* no type cast needed */
	  if (ptr) *ptr = vptr;
	  break;
	} else {
	  swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
	  if (!tc) {
	    sobj = (PySwigObject *)sobj->next;
	  } else {
	    if (ptr) *ptr = SWIG_TypeCast(tc,vptr);
	    break;
	  }
	}
      } else {
	if (ptr) *ptr = vptr;
	break;
      }
    }
    if (sobj) {
      if (own) *own = sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
	sobj->own = 0;
      }
      return SWIG_OK;
    } else {
      int res = SWIG_ERROR;
      if (flags & SWIG_POINTER_IMPLICIT_CONV) {
	PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
	if (data && !data->implicitconv) {
	  PyObject *klass = data->klass;
	  if (klass) {
	    PyObject *impconv;
	    data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
	    impconv = SWIG_Python_CallFunctor(klass, obj);
	    data->implicitconv = 0;
	    if (PyErr_Occurred()) {
	      PyErr_Clear();
	      impconv = 0;
	    }
	    if (impconv) {
	      PySwigObject *iobj = SWIG_Python_GetSwigThis(impconv);
	      if (iobj) {
		void *vptr;
		res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
		if (SWIG_IsOK(res)) {
		  if (ptr) {
		    *ptr = vptr;
		    /* transfer the ownership to 'ptr' */
		    iobj->own = 0;
		    res = SWIG_AddCast(res);
		    res = SWIG_AddNewMask(res);
		  } else {
		    res = SWIG_AddCast(res);		    
		  }
		}
	      }
	      Py_DECREF(impconv);
	    }
	  }
	}
      }
      return res;
    }
  }
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc) {
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
      if (!desc) return SWIG_ERROR;
    }
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (!tc) return SWIG_ERROR;
      *ptr = SWIG_TypeCast(tc,vptr);
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = PySwigPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, whitout calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(PySwigClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    PySwigObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      PySwigObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  if (!ptr) {
    return SWIG_Py_Void();
  } else {
    int own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
    PyObject *robj = PySwigObject_New(ptr, type, own);
    PySwigClientData *clientdata = type ? (PySwigClientData *)(type->clientdata) : 0;
    if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
      PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
      if (inst) {
	Py_DECREF(robj);
	robj = inst;
      }
    }
    return robj;
  }
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? PySwigPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
SWIG_Python_DestroyModule(void *vptr)
{
  swig_module_info *swig_module = (swig_module_info *) vptr;
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      PySwigClientData *data = (PySwigClientData *) ty->clientdata;
      if (data) PySwigClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = PyString_FromString(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  PySwigObject *v = (PySwigObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}


#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 

/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * director.swg
 *
 * This file contains support for director classes that proxy
 * method calls from C++ to Python extensions.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#ifdef __cplusplus

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>


/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swift
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be usefull for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/* 
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR
#include <map>

namespace Swig {
  class Director;
  SWIGINTERN std::map<void*,Director*>& get_rtdir_map() {
    static std::map<void*,Director*> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void*,Director*>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(Arg) Swig::get_rtdir(static_cast<void*>(Arg))
# define SWIG_DIRECTOR_RGTR(Arg1, Arg2) Swig::set_rtdir(static_cast<void*>(Arg1), Arg2)

#else

# define SWIG_DIRECTOR_CAST(Arg) dynamic_cast<Swig::Director*>(Arg)
# define SWIG_DIRECTOR_RGTR(Arg1, Arg2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {  

  /* memory handler */
  struct GCItem 
  {
    virtual ~GCItem() = 0;

    virtual int get_own() const
    {
      return 0;
    }
  };

  GCItem::~GCItem()
  {
  }

  struct GCItem_var
  {
    GCItem_var(GCItem *item = 0) : _item(item)
    {
    }

    GCItem_var& operator=(GCItem *item)
    {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() 
    {
      delete _item;
    }
    
    GCItem * operator->() const
    {
      return _item;
    }
    
  private:
    GCItem *_item;
  };
  
  struct GCItem_Object : GCItem
  {
    GCItem_Object(int own) : _own(own)
    {
    }
    
    virtual ~GCItem_Object() 
    {
    }

    int get_own() const
    {
      return _own;
    }
    
  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem
  {
    GCItem_T(Type *ptr) : _ptr(ptr)
    {
    }
    
    virtual ~GCItem_T() 
    {
      delete _ptr;
    }
    
  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem
  {
    GCArray_T(Type *ptr) : _ptr(ptr)
    {
    }
    
    virtual ~GCArray_T() 
    {
      delete[] _ptr;
    }
    
  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char* hdr ="", const char* msg ="") 
      : swig_msg(hdr)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
      if (strlen(msg)) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, getMessage());
      } else {
        SWIG_Python_AddErrorMsg(getMessage());
      }
      SWIG_PYTHON_THREAD_END_BLOCK; 
    }

    const char *getMessage() const
    { 
      return swig_msg.c_str(); 
    }

    static void raise(PyObject *error, const char *msg) 
    {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) 
    {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* unknown exception handler  */
  class UnknownExceptionHandler 
  {
#ifdef SWIG_DIRECTOR_UEH
    static void handler()  {
      try {
        throw;
      } catch (DirectorException& e) {
        std::cerr << "Swig Director exception caught:" << std::endl
                  << e.getMessage() << std::endl;
      } catch (std::exception& e) {
        std::cerr << "std::exception caught: "<< e.what() << std::endl;
      } catch (...) {
        std::cerr << "Unknown exception caught." << std::endl;
      }
      
      std::cerr << std::endl
                << "Python interpreter traceback:" << std::endl;
      PyErr_Print();
      std::cerr << std::endl;
      
      std::cerr << "This exception was caught by the SWIG unexpected exception handler." << std::endl
                << "Try using %feature(\"director:except\") to avoid reaching this point." << std::endl
                << std::endl
                << "Exception is being re-thrown, program will like abort/terminate." << std::endl;
      throw;
    }

  public:
    
    std::unexpected_handler old;
    UnknownExceptionHandler(std::unexpected_handler nh = handler)
    {
      old = std::set_unexpected(nh);
    }

    ~UnknownExceptionHandler()
    {
      std::set_unexpected(old);
    }
#endif
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public Swig::DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char* msg="") 
      : Swig::DirectorException(error, "Swig director type mismatch", msg)
    {
    }

    DirectorTypeMismatchException(const char* msg="") 
      : Swig::DirectorException(PyExc_TypeError, "Swig director type mismatch", msg)
    {
    }

    static void raise(PyObject *error, const char *msg)
    {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg)
    {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public Swig::DirectorException {
  public:
    DirectorMethodException(const char* msg = "") 
      : DirectorException(PyExc_RuntimeError, "Swig director method error", msg)
    {
    }    

    static void raise(const char *msg)
    {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public Swig::DirectorException
  {
  public:
    DirectorPureVirtualException(const char* msg = "") 
      : DirectorException(PyExc_RuntimeError, "Swig director pure virtual method called", msg)
    { 
    }

    static void raise(const char *msg) 
    {
      throw DirectorPureVirtualException(msg);
    }
  };


#if defined(SWIG_PYTHON_THREADS)
/*  __THREAD__ is the old macro to activate some thread support */
# if !defined(__THREAD__)
#   define __THREAD__ 1
# endif
#endif

/* simple thread abstraction for pthreads on win32 */
#ifdef __THREAD__
# define __PTHREAD__
# if defined(_WIN32) || defined(__WIN32__)
#  define pthread_mutex_lock EnterCriticalSection
#  define pthread_mutex_unlock LeaveCriticalSection
#  define pthread_mutex_t CRITICAL_SECTION
#  define SWIG_MUTEX_INIT(var) var
# else
#  include <pthread.h>
#  define SWIG_MUTEX_INIT(var) var = PTHREAD_MUTEX_INITIALIZER 
# endif
#endif

#ifdef  __PTHREAD__
  struct Guard
  {
    pthread_mutex_t *_mutex;
    
    Guard(pthread_mutex_t &mutex) : _mutex(&mutex)
    {
      pthread_mutex_lock(_mutex);
    }
    
    ~Guard()
    {
      pthread_mutex_unlock(_mutex);
    }
  };
# define SWIG_GUARD(mutex) Guard _guard(mutex)
#else
# define SWIG_GUARD(mutex) 
#endif

  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject* swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const { 
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
        Py_DECREF(swig_self); 
        SWIG_PYTHON_THREAD_END_BLOCK; 
      }
    }

  public:
    /* wrap a python object, optionally taking ownership */
    Director(PyObject* self) : swig_self(self), swig_disown_flag(false) {
      swig_incref();
    }


    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref(); 
    }


    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const { 
      return swig_self; 
    }

    /* acquire ownership of the wrapped python object (the sense of "disown"
     * is from python) */
    void swig_disown() const { 
      if (!swig_disown_flag) { 
        swig_disown_flag=true;
        swig_incref(); 
      } 
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const { 
      if (swig_disown_flag) {
        Py_INCREF(swig_self); 
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char* /* name */) const {
      return true;
    }
    
    virtual void swig_set_inner(const char* /* name */, bool /* val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void*, GCItem_var> ownership_map;
    mutable ownership_map owner;
#ifdef __PTHREAD__
    static pthread_mutex_t swig_mutex_own;
#endif

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr)  const
    {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }
    
    template <typename Type>
    void swig_acquire_ownership(Type *vptr)  const
    {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const
    {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        owner[vptr] = new GCItem_Object(own);
      }
    }
    
    int swig_release_ownership(void *vptr) const
    {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        ownership_map::iterator iter = owner.find(vptr);
        if (iter != owner.end()) {
          own = iter->second->get_own();
          owner.erase(iter);
        }
      }
      return own;
    }
  };

#ifdef __PTHREAD__
  pthread_mutex_t SWIG_MUTEX_INIT(Director::swig_mutex_own);
#endif
}

#endif /* __cplusplus */


#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_Piavca__Avatar swig_types[0]
#define SWIGTYPE_p_Piavca__AvatarImp swig_types[1]
#define SWIGTYPE_p_Piavca__AvatarMotionQueue swig_types[2]
#define SWIGTYPE_p_Piavca__AvatarPosture swig_types[3]
#define SWIGTYPE_p_Piavca__AvatarPostureBlend swig_types[4]
#define SWIGTYPE_p_Piavca__AvatarTargetStruct swig_types[5]
#define SWIGTYPE_p_Piavca__AvatarTimeCallback swig_types[6]
#define SWIGTYPE_p_Piavca__BlendBetween swig_types[7]
#define SWIGTYPE_p_Piavca__Bound swig_types[8]
#define SWIGTYPE_p_Piavca__ChangeMotionLength swig_types[9]
#define SWIGTYPE_p_Piavca__ChoiceMotion swig_types[10]
#define SWIGTYPE_p_Piavca__ChoiceMotionWithDefault swig_types[11]
#define SWIGTYPE_p_Piavca__Core swig_types[12]
#define SWIGTYPE_p_Piavca__CurrentValueMotion swig_types[13]
#define SWIGTYPE_p_Piavca__DiadicGazeMotion swig_types[14]
#define SWIGTYPE_p_Piavca__KeyframeMotion swig_types[15]
#define SWIGTYPE_p_Piavca__LinearTransition swig_types[16]
#define SWIGTYPE_p_Piavca__LookAtMotion swig_types[17]
#define SWIGTYPE_p_Piavca__LookAtToFacial swig_types[18]
#define SWIGTYPE_p_Piavca__LoopMotion swig_types[19]
#define SWIGTYPE_p_Piavca__MaskedMotion swig_types[20]
#define SWIGTYPE_p_Piavca__Motion swig_types[21]
#define SWIGTYPE_p_Piavca__MotionAdder swig_types[22]
#define SWIGTYPE_p_Piavca__MotionFilter swig_types[23]
#define SWIGTYPE_p_Piavca__MotionImp swig_types[24]
#define SWIGTYPE_p_Piavca__MotionMask swig_types[25]
#define SWIGTYPE_p_Piavca__MotionParser swig_types[26]
#define SWIGTYPE_p_Piavca__MotionPosture swig_types[27]
#define SWIGTYPE_p_Piavca__MotionSaver swig_types[28]
#define SWIGTYPE_p_Piavca__MotionTransition swig_types[29]
#define SWIGTYPE_p_Piavca__MultiMotionCombiner swig_types[30]
#define SWIGTYPE_p_Piavca__Object swig_types[31]
#define SWIGTYPE_p_Piavca__ObjectTargetStruct swig_types[32]
#define SWIGTYPE_p_Piavca__OverrideMotion swig_types[33]
#define SWIGTYPE_p_Piavca__PointAt swig_types[34]
#define SWIGTYPE_p_Piavca__PostureBlend swig_types[35]
#define SWIGTYPE_p_Piavca__Proxemics swig_types[36]
#define SWIGTYPE_p_Piavca__Quat swig_types[37]
#define SWIGTYPE_p_Piavca__RandomChoiceMotion swig_types[38]
#define SWIGTYPE_p_Piavca__RandomGazeMotion swig_types[39]
#define SWIGTYPE_p_Piavca__RandomTimingsMotion swig_types[40]
#define SWIGTYPE_p_Piavca__Reposition swig_types[41]
#define SWIGTYPE_p_Piavca__ScaleMotion swig_types[42]
#define SWIGTYPE_p_Piavca__ScaleMotionRoot swig_types[43]
#define SWIGTYPE_p_Piavca__ScaleMotionSpeed swig_types[44]
#define SWIGTYPE_p_Piavca__Sequence swig_types[45]
#define SWIGTYPE_p_Piavca__SequentialChoiceMotion swig_types[46]
#define SWIGTYPE_p_Piavca__SmoothLoop swig_types[47]
#define SWIGTYPE_p_Piavca__SmoothSequence swig_types[48]
#define SWIGTYPE_p_Piavca__SmoothTransition swig_types[49]
#define SWIGTYPE_p_Piavca__SubMotion swig_types[50]
#define SWIGTYPE_p_Piavca__Subtract swig_types[51]
#define SWIGTYPE_p_Piavca__TimeCallback swig_types[52]
#define SWIGTYPE_p_Piavca__TimeOffset swig_types[53]
#define SWIGTYPE_p_Piavca__TimeWarp swig_types[54]
#define SWIGTYPE_p_Piavca__TransitionFunction swig_types[55]
#define SWIGTYPE_p_Piavca__TwoMotionCombiner swig_types[56]
#define SWIGTYPE_p_Piavca__Vec swig_types[57]
#define SWIGTYPE_p_Piavca__ZeroMotion swig_types[58]
#define SWIGTYPE_p_Piavca__flagStruct swig_types[59]
#define SWIGTYPE_p_Piavca__queueElement swig_types[60]
#define SWIGTYPE_p_allocator_type swig_types[61]
#define SWIGTYPE_p_char swig_types[62]
#define SWIGTYPE_p_difference_type swig_types[63]
#define SWIGTYPE_p_float swig_types[64]
#define SWIGTYPE_p_int swig_types[65]
#define SWIGTYPE_p_p_Piavca__MotionParser swig_types[66]
#define SWIGTYPE_p_p_PyObject swig_types[67]
#define SWIGTYPE_p_size_type swig_types[68]
#define SWIGTYPE_p_std__fstream swig_types[69]
#define SWIGTYPE_p_std__ifstream swig_types[70]
#define SWIGTYPE_p_std__invalid_argument swig_types[71]
#define SWIGTYPE_p_std__istringstream swig_types[72]
#define SWIGTYPE_p_std__listTstd__string_t swig_types[73]
#define SWIGTYPE_p_std__ofstream swig_types[74]
#define SWIGTYPE_p_std__ostream swig_types[75]
#define SWIGTYPE_p_std__ostringstream swig_types[76]
#define SWIGTYPE_p_std__string swig_types[77]
#define SWIGTYPE_p_std__stringstream swig_types[78]
#define SWIGTYPE_p_std__type_info swig_types[79]
#define SWIGTYPE_p_std__vectorTPiavca__AvatarTargetStruct_std__allocatorTPiavca__AvatarTargetStruct_t_t swig_types[80]
#define SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t swig_types[81]
#define SWIGTYPE_p_std__vectorTPiavca__ObjectTargetStruct_std__allocatorTPiavca__ObjectTargetStruct_t_t swig_types[82]
#define SWIGTYPE_p_std__vectorTfloat_std__allocatorTfloat_t_t swig_types[83]
#define SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t swig_types[84]
#define SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t__allocator_type swig_types[85]
#define SWIGTYPE_p_std__vectorTstd__pairTint_Piavca__Quat_t_std__allocatorTstd__pairTint_Piavca__Quat_t_t_t swig_types[86]
#define SWIGTYPE_p_std__vectorTstd__pairTstd__string_int_t_std__allocatorTstd__pairTstd__string_int_t_t_t swig_types[87]
#define SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t swig_types[88]
#define SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t__allocator_type swig_types[89]
#define SWIGTYPE_p_std__wstring swig_types[90]
#define SWIGTYPE_p_swig__PySwigIterator swig_types[91]
#define SWIGTYPE_p_value_type swig_types[92]
static swig_type_info *swig_types[94];
static swig_module_info swig_module = {swig_types, 93, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _Piavca_base.so
  ------------------------------------------------*/
#define SWIG_init    init_Piavca_base

#define SWIG_name    "_Piavca_base"

#define SWIGVERSION 0x010330 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class PyObject_ptr {
  protected:
    PyObject *_obj;

  public:
    PyObject_ptr() :_obj(0)
    {
    }

    PyObject_ptr(const PyObject_ptr& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    PyObject_ptr(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) Py_XINCREF(_obj);
    }
    
    PyObject_ptr & operator=(const PyObject_ptr& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~PyObject_ptr() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct PyObject_var : PyObject_ptr {
    PyObject_var(PyObject* obj = 0) : PyObject_ptr(obj, false) { }
    
    PyObject_var & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}



#define NO_PIAVCA_DLL

#include "PiavcaAPI/Piavca.h"
#include "PiavcaCal3dImp/PiavcaCal3dCore.h"
//#include "PyTimeCallback.h"
//#include "PyMotion.h"

#include <sstream>

//#include "PiavcaDllImports.h"


Piavca::Avatar *GetAvatarPointer(long l)
{
	Piavca::Avatar *a = (Piavca::Avatar *) l;
	return a;
};
Piavca::Core *GetPiavcaCorePointer(long l)
{
	return (Piavca::Core *) l;
};

using namespace Piavca;

Quat PyQuat_AsQuat(PyObject *obj)
{
	Quat retVal, *res;
	if ((SWIG_ConvertPtr(obj,(void **) &res, SWIGTYPE_p_Piavca__Quat, 1 | 0 )) != -1)
	{
		retVal =  *res;
	}
	return retVal;
}

Vec PyVec_AsVec(PyObject *obj)
{
	Vec retVal, *res;
	if ((SWIG_ConvertPtr(obj,(void **) &res, SWIGTYPE_p_Piavca__Vec, 1 | 0 )) != -1)
	{
		retVal =  *res;
	}
	return retVal;
}

Bound PyBound_AsBound(PyObject *obj)
{
	Bound retVal, *res;
	if ((SWIG_ConvertPtr(obj,(void **) &res, SWIGTYPE_p_Piavca__Bound, 1 | 0 )) != -1)
	{
		retVal =  *res;
	}
	return retVal;
}

//PyObject *GetPythonJointIterator(JointIterator joint)
//{
//    JointIterator *jointptr = new JointIterator((JointIterator &) joint);
//	PyObject *pythonJoint = SWIG_NewPointerObj((void *) jointptr, SWIGTYPE_p_JointIterator, 1);
//	return pythonJoint;
//};


#include <string>


#include <iostream>


#include <stdexcept>


  
#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  define SWIG_STD_NOASSIGN_STL
#  define SWIG_STD_NOINSERT_TEMPLATE_STL
#  define SWIG_STD_NOITERATOR_TRAITS_STL
#endif

#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif




#include <string>
#include <stdexcept>

  
namespace swig {
  struct stop_iteration {
  };

  struct PySwigIterator {
  private:
    PyObject_ptr _seq;

  protected:
    PySwigIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~PySwigIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual PySwigIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual PySwigIterator *decr(size_t n = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const PySwigIterator &x) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const PySwigIterator &x) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual PySwigIterator *copy() const = 0;

    PyObject *next()
    {
      PyObject *obj = value();
      incr();
      return obj;
    }

    PyObject *previous()
    {
      decr();
      return value();
    }

    PySwigIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const PySwigIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const PySwigIterator& x) const
    {
      return ! operator==(x);
    }
      
    PySwigIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    PySwigIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    PySwigIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    PySwigIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const PySwigIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::PySwigIterator *");
	init = 1;
      }	
      return desc;
    }    
  };
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
  return SWIG_From_long  (static_cast< long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  return res;
}


#include <stdexcept>


#include <algorithm>


#include <vector>


namespace swig {  
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };  
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> 
  struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }    
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }    
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category> 
  struct traits_as { };
 
  template <class Type, class Category> 
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_NewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      Type *p;
      int res = (SWIG_ConvertPtr(obj, (void**)&p, type_info<Type>(), 0) == SWIG_OK) ? SWIG_OLDOBJ : 0;
      if (SWIG_IsOK(res)) {
	if (val) *val = p;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	// Uninitialized return value, no Type() constructor required.
	static Type *v_def = (Type*) malloc(sizeof(Type));
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	memset(v_def,0,sizeof(Type));
	return *v_def;
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	return 0;
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj, bool te = false) {
    return traits_as<Type, typename traits<Type>::category>::as(obj, te);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


#include <functional>

namespace std {
  template <>
  struct less <PyObject *>: public binary_function<PyObject *, PyObject *, bool>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_Compare(v, w) < 0;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::PyObject_ptr>: public binary_function<swig::PyObject_ptr, swig::PyObject_ptr, bool>
  {
    bool
    operator()(const swig::PyObject_ptr& v, const swig::PyObject_ptr& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::PyObject_var>: public binary_function<swig::PyObject_var, swig::PyObject_var, bool>
  {
    bool
    operator()(const swig::PyObject_var& v, const swig::PyObject_var& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  inline size_t
  check_index(ptrdiff_t i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    
    throw std::out_of_range("index out of range");
  }

  inline size_t
  slice_index(ptrdiff_t i, size_t size) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size) {
	return (size_t) (i + size);
      } else {
	throw std::out_of_range("index out of range");
      }
    } else {
      return ( (size_t) i < size ) ? ((size_t) i) : size;
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j) {
    typename Sequence::size_type size = self->size();
    typename Sequence::size_type ii = swig::check_index(i, size);
    typename Sequence::size_type jj = swig::slice_index(j, size);

    if (jj > ii) {
      typename Sequence::const_iterator vb = self->begin();
      typename Sequence::const_iterator ve = self->begin();
      std::advance(vb,ii);
      std::advance(ve,jj);
      return new Sequence(vb, ve);
    } else {
      return new Sequence();
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, const InputSeq& v) {
    typename Sequence::size_type size = self->size();
    typename Sequence::size_type ii = swig::check_index(i, size, true);
    typename Sequence::size_type jj = swig::slice_index(j, size);
    if (jj < ii) jj = ii;
    size_t ssize = jj - ii;
    if (ssize <= v.size()) {
      typename Sequence::iterator sb = self->begin();
      typename InputSeq::const_iterator vmid = v.begin();
      std::advance(sb,ii);
      std::advance(vmid, jj - ii);
      self->insert(std::copy(v.begin(), vmid, sb), vmid, v.end());
    } else {
      typename Sequence::iterator sb = self->begin();
      typename Sequence::iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      self->erase(sb,se);
      self->insert(sb, v.begin(), v.end());
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j) {
    typename Sequence::size_type size = self->size();
    typename Sequence::size_type ii = swig::check_index(i, size, true);
    typename Sequence::size_type jj = swig::slice_index(j, size);
    if (jj > ii) {
      typename Sequence::iterator sb = self->begin();
      typename Sequence::iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      self->erase(sb,se);
    }
  }
}


#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std  {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };
#endif  

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }

} 
#endif


namespace swig {
  template<typename OutIterator>
  class PySwigIterator_T :  public PySwigIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef PySwigIterator_T<out_iterator> self_type;

    PySwigIterator_T(out_iterator curr, PyObject *seq)
      : PySwigIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const PySwigIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const PySwigIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class PySwigIteratorOpen_T :  public PySwigIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef PySwigIterator_T<out_iterator>  base;
    typedef PySwigIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    PySwigIteratorOpen_T(out_iterator curr, PyObject *seq)
      : PySwigIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    PySwigIterator *copy() const
    {
      return new self_type(*this);
    }

    PySwigIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

    PySwigIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class PySwigIteratorClosed_T :  public PySwigIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef PySwigIterator_T<out_iterator>  base;    
    typedef PySwigIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    PySwigIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : PySwigIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    PySwigIterator *copy() const
    {
      return new self_type(*this);
    }

    PySwigIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

    PySwigIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }

  private:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIter>
  inline PySwigIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new PySwigIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline PySwigIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new PySwigIteratorOpen_T<OutIter>(current, seq);
  }
}


namespace swig
{
  template <class T>
  struct PySequence_Ref
  {
    PySequence_Ref(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::PyObject_var item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item, true);
      } catch (std::exception& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", _index);
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    PySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    int _index;
  };

  template <class T>
  struct PySequence_ArrowProxy
  {
    PySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct PySequence_InputIterator
  {
    typedef PySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;

    PySequence_InputIterator()
    {
    }

    PySequence_InputIterator(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    PySequence_ArrowProxy<T>
    operator->() const {
      return PySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  template <class T>
  struct PySequence_Cont
  {
    typedef PySequence_Ref<T> reference;
    typedef const PySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;
    typedef int size_type;
    typedef const pointer const_pointer;
    typedef PySequence_InputIterator<T, reference> iterator;
    typedef PySequence_InputIterator<T, const_reference> const_iterator;

    PySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~PySequence_Cont()
    {
      if (_seq) Py_DECREF(_seq);
    }

    size_type size() const
    {
      return PySequence_Size(_seq);
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check(bool set_err = true) const
    {
      int s = size();
      for (int i = 0; i < s; ++i) {
	swig::PyObject_var item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item)) {
	  if (set_err) {
	    char msg[1024];
	    sprintf(msg, "in sequence element %d", i);
	    SWIG_Error(SWIG_RuntimeError, msg);
	  }
	  return false;
	}
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
  if (PyString_Check(obj)) {
    char *cstr; Py_ssize_t len;
    PyString_AsStringAndSize(obj, &cstr, &len);
    if (cptr)  {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
	*cptr = PyString_AsString(obj);
      }
    }
    if (psize) *psize = len + 1;
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERN int
SWIG_AsVal_std_string (PyObject * obj, std::string *val)
{
  std::string* v = (std::string *) 0;
  int res = SWIG_AsPtr_std_string (obj, &v);
  if (!SWIG_IsOK(res)) return res;
  if (v) {
    if (val) *val = *v;
    if (SWIG_IsNewObj(res)) {
      delete v;
      res = SWIG_DelNewMask(res);
    }
    return res;
  }
  return SWIG_ERROR;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_NewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  if (s.size()) {
    return SWIG_FromCharPtrAndSize(s.data(), s.size());
  } else {
    return SWIG_FromCharPtrAndSize(s.c_str(), 0);
  }
}


namespace swig {
  template <> struct traits<std::string > {
    typedef value_category category;
    static const char* type_name() { return"std::string"; }
  };  
  template <>  struct traits_asval<std::string > {   
    typedef std::string value_type;
    static int asval(PyObject *obj, value_type *val) { 
      return SWIG_AsVal_std_string (obj, val);
    }
  };
  template <>  struct traits_from<std::string > {
    typedef std::string value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_std_string  (val);
    }
  };
}


namespace swig {
  template <class PySeq, class Seq>
  inline void
  assign(const PySeq& pyseq, Seq* seq) {
#ifdef SWIG_STD_NOASSIGN_STL
    typedef typename PySeq::value_type value_type;
    typename PySeq::const_iterator it = pyseq.begin();
    for (;it != pyseq.end(); ++it) {
      seq->insert(seq->end(),(value_type)(*it));
    }
#else
    seq->assign(pyseq.begin(), pyseq.end());
#endif
  }

  template <class Seq, class T = typename Seq::value_type >
  struct traits_asptr_stdseq {
    typedef Seq sequence;
    typedef T value_type;

    static int asptr(PyObject *obj, sequence **seq) {
      if (PySequence_Check(obj)) {
	try {
	  PySequence_Cont<value_type> pyseq(obj);
	  if (seq) {
	    sequence *pseq = new sequence();
	    assign(pyseq, pseq);
	    *seq = pseq;
	    return SWIG_NEWOBJ;
	  } else {
	    return pyseq.check() ? SWIG_OK : SWIG_ERROR;
	  }
	} catch (std::exception& e) {
	  if (seq) {
	    if (!PyErr_Occurred()) {
	      PyErr_SetString(PyExc_TypeError, e.what());
	    }
	  }
	  return SWIG_ERROR;
	}
      } else {
	sequence *p;
	if (SWIG_ConvertPtr(obj,(void**)&p,
			    swig::type_info<sequence>(),0) == SWIG_OK) {
	  if (seq) *seq = p;
	  return SWIG_OLDOBJ;
	}
      }
      return SWIG_ERROR;
    }
  };

  template <class Seq, class T = typename Seq::value_type >
  struct traits_from_stdseq {
    typedef Seq sequence;
    typedef T value_type;
    typedef typename Seq::size_type size_type;
    typedef typename sequence::const_iterator const_iterator;

    static PyObject *from(const sequence& seq) {






      size_type size = seq.size();
      if (size <= (size_type)INT_MAX) {
	PyObject *obj = PyTuple_New((int)size);
	int i = 0;
	for (const_iterator it = seq.begin();
	     it != seq.end(); ++it, ++i) {
	  PyTuple_SetItem(obj,i,swig::from<value_type>(*it));
	}
	return obj;
      } else {
	PyErr_SetString(PyExc_OverflowError,"sequence size not valid in python");
	return NULL;
      }
    }
  };
}


  namespace swig {
    template <class T>
    struct traits_asptr<std::vector<T> >  {
      static int asptr(PyObject *obj, std::vector<T> **vec) {
	return traits_asptr_stdseq<std::vector<T> >::asptr(obj, vec);
      }
    };
    
    template <class T>
    struct traits_from<std::vector<T> > {
      static PyObject *from(const std::vector<T>& vec) {
	return traits_from_stdseq<std::vector<T> >::from(vec);
      }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<std::string, std::allocator<std::string > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "std::string" "," "std::allocator<std::string >" " >";
	  }
	};
      }
    
SWIGINTERN swig::PySwigIterator *std_vector_Sl_std_string_Sg__iterator(std::vector<std::string > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_std_string_Sg____nonzero__(std::vector<std::string > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector<std::string >::size_type std_vector_Sl_std_string_Sg____len__(std::vector<std::string > const *self){
      return self->size();
    }

SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}

SWIGINTERN std::vector<std::string >::value_type std_vector_Sl_std_string_Sg__pop(std::vector<std::string > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<std::string,std::allocator<std::string > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector<std::string,std::allocator<std::string > > *std_vector_Sl_std_string_Sg____getslice__(std::vector<std::string > *self,std::vector<std::string >::difference_type i,std::vector<std::string >::difference_type j){
      return swig::getslice(self, i, j);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____setslice__(std::vector<std::string > *self,std::vector<std::string >::difference_type i,std::vector<std::string >::difference_type j,std::vector<std::string,std::allocator<std::string > > const &v){
      swig::setslice(self, i, j, v);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____delslice__(std::vector<std::string > *self,std::vector<std::string >::difference_type i,std::vector<std::string >::difference_type j){
      swig::delslice(self, i, j);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____delitem__(std::vector<std::string > *self,std::vector<std::string >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector<std::string >::value_type const &std_vector_Sl_std_string_Sg____getitem__(std::vector<std::string > const *self,std::vector<std::string >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____setitem__(std::vector<std::string > *self,std::vector<std::string >::difference_type i,std::vector<std::string >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_std_string_Sg__append(std::vector<std::string > *self,std::vector<std::string >::value_type const &x){
      self->push_back(x);
    }

#include <limits.h>
#ifndef LLONG_MIN
# define LLONG_MIN	LONG_LONG_MIN
#endif
#ifndef LLONG_MAX
# define LLONG_MAX	LONG_LONG_MAX
#endif
#ifndef ULLONG_MAX
# define ULLONG_MAX	ULONG_LONG_MAX
#endif


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


namespace swig {
  template <> struct traits<int > {
    typedef value_category category;
    static const char* type_name() { return"int"; }
  };  
  template <>  struct traits_asval<int > {   
    typedef int value_type;
    static int asval(PyObject *obj, value_type *val) { 
      return SWIG_AsVal_int (obj, val);
    }
  };
  template <>  struct traits_from<int > {
    typedef int value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_int  (val);
    }
  };
}


      namespace swig {
	template <>  struct traits<std::vector<int, std::allocator<int > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "int" "," "std::allocator<int >" " >";
	  }
	};
      }
    
SWIGINTERN swig::PySwigIterator *std_vector_Sl_int_Sg__iterator(std::vector<int > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_int_Sg____nonzero__(std::vector<int > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector<int >::size_type std_vector_Sl_int_Sg____len__(std::vector<int > const *self){
      return self->size();
    }
SWIGINTERN std::vector<int >::value_type std_vector_Sl_int_Sg__pop(std::vector<int > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<int,std::allocator<int > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector<int,std::allocator<int > > *std_vector_Sl_int_Sg____getslice__(std::vector<int > *self,std::vector<int >::difference_type i,std::vector<int >::difference_type j){
      return swig::getslice(self, i, j);
    }
SWIGINTERN void std_vector_Sl_int_Sg____setslice__(std::vector<int > *self,std::vector<int >::difference_type i,std::vector<int >::difference_type j,std::vector<int,std::allocator<int > > const &v){
      swig::setslice(self, i, j, v);
    }
SWIGINTERN void std_vector_Sl_int_Sg____delslice__(std::vector<int > *self,std::vector<int >::difference_type i,std::vector<int >::difference_type j){
      swig::delslice(self, i, j);
    }
SWIGINTERN void std_vector_Sl_int_Sg____delitem__(std::vector<int > *self,std::vector<int >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector<int >::value_type const &std_vector_Sl_int_Sg____getitem__(std::vector<int > const *self,std::vector<int >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_int_Sg____setitem__(std::vector<int > *self,std::vector<int >::difference_type i,std::vector<int >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_int_Sg__append(std::vector<int > *self,std::vector<int >::value_type const &x){
      self->push_back(x);
    }

SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < -FLT_MAX || v > FLT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}

SWIGINTERN PyObject *Piavca_Vec___getitem__(Piavca::Vec *self,PyObject *args){	
		int i;
		//if(!PyArg_ParseTuple(args, "i", &i))
		//	return NULL;
		i = (int) PyInt_AsLong(args);
		return Py_BuildValue("d", (*self)[i]);
	}
SWIGINTERN PyObject *Piavca_Vec___setitem__(Piavca::Vec *self,PyObject *arg1,PyObject *arg2){
		int i;
		float f;
		//if(!PyArg_ParseTuple(args, "if", &i, &f))
		//	return NULL;
		i = (int) PyInt_AsLong(arg1);
		f = (float) PyFloat_AsDouble(arg2);

		(*self)[i] = f;
	
		Py_INCREF(Py_None);
		return Py_None;
	}
SWIGINTERN PyObject *Piavca_Vec___repr__(Piavca::Vec *self){
		std::ostringstream os;
		os << (*self);
		return Py_BuildValue("s", os.str().c_str());
	}
SWIGINTERN PyObject *Piavca_Quat___getitem__(Piavca::Quat *self,PyObject *args){	
		int i;
		//if(!PyArg_ParseTuple(args, "i", &i))
		//	return NULL;
		i = (int) PyInt_AsLong(args);
		return Py_BuildValue("d", (*self)[i]);
	}
SWIGINTERN PyObject *Piavca_Quat___setitem__(Piavca::Quat *self,PyObject *arg1,PyObject *arg2){
		int i;
		float f;
		//if(!PyArg_ParseTuple(arg1, "i", &i))
		//	return NULL;
		i = (int) PyInt_AsLong(arg1);
		f = (float) PyFloat_AsDouble(arg2);
		(*self)[i] = f;
	
		Py_INCREF(Py_None);
		return Py_None;
	}
SWIGINTERN PyObject *Piavca_Quat___repr__(Piavca::Quat *self){
		std::ostringstream os;
		os << (*self);
		return Py_BuildValue("s", os.str().c_str());
	}




SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  if (obj == Py_True) {
    if (val) *val = true;
    return SWIG_OK;
  } else if (obj == Py_False) {
    if (val) *val = false;
    return SWIG_OK;
  } else {
    long v = 0;
    int res = SWIG_AddCast(SWIG_AsVal_long (obj, val ? &v : 0));
    if (SWIG_IsOK(res) && val) *val = v ? true : false;
    return res;
  }
}

SWIGINTERN bool Piavca_Avatar_setFacialExpressionWeight__SWIG_2(Piavca::Avatar *self,char const *name,float weight){
		int exprId = Piavca::Core::getCore()->getExpressionId((name));
		if(exprId < 0)
			Piavca::Error(tstring("Unknown facial expression") + (name));
		return self->setFacialExpressionWeight(exprId, weight);
	}
SWIGINTERN float Piavca_Avatar_getFacialExpressionWeight__SWIG_1(Piavca::Avatar *self,char const *name){
		return self->getFacialExpressionWeight(
			Piavca::Core::getCore()->getExpressionId((name)));
	}
SWIGINTERN void Piavca_Avatar_setJointOrientation__SWIG_4(Piavca::Avatar *self,char const *jointName,Piavca::Quat const &val,char const *worldCoord="JOINTLOCAL_COORD"){
		if(std::string(worldCoord) == "LOCAL_COORD")
			self->setJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				val, Piavca::LOCAL_COORD);
		if(std::string(worldCoord) == "JOINTLOCAL_COORD")
			self->setJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				val, Piavca::JOINTLOCAL_COORD);
		if(std::string(worldCoord) == "WORLD_COORD")
			self->setJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				val, Piavca::LOCAL_COORD);
	}
SWIGINTERN Piavca::Quat Piavca_Avatar_getJointOrientation__SWIG_2(Piavca::Avatar *self,char const *jointName,char const *worldCoord="JOINTLOCAL_COORD"){
		if(std::string(worldCoord) == "LOCAL_COORD")
			return self->getJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::LOCAL_COORD);
		if(std::string(worldCoord) == "JOINTLOCAL_COORD")
			return self->getJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::JOINTLOCAL_COORD);
		if(std::string(worldCoord) == "WORLD_COORD")
			return self->getJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::LOCAL_COORD);
	}
SWIGINTERN Piavca::Vec Piavca_Avatar_getJointBasePosition__SWIG_2(Piavca::Avatar *self,char const *jointName,char const *worldCoord="LOCAL_COORD"){
		if(std::string(worldCoord) == "LOCAL_COORD")
			return self->getJointBasePosition(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::LOCAL_COORD);
		if(std::string(worldCoord) == "JOINTLOCAL_COORD")
			return self->getJointBasePosition(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::JOINTLOCAL_COORD);
		if(std::string(worldCoord) == "WORLD_COORD")
			return self->getJointBasePosition(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::LOCAL_COORD);
	}
SWIGINTERN void Piavca_Avatar_play_motion__SWIG_0(Piavca::Avatar *self,Piavca::Motion *m){
		Piavca::AvatarMotionQueue::getQueue(self, m->isFacial())->enqueueMotion("", m);
  
	}
SWIGINTERN void Piavca_Avatar_play_motion__SWIG_1(Piavca::Avatar *self,char const *motionName){
		Motion *m = Piavca::Core::getCore()->getMotion((motionName));
		Piavca::AvatarMotionQueue::getQueue(self, m->isFacial())->enqueueMotion
				((motionName), m);
	}
SWIGINTERN void Piavca_Avatar_add_background_motion__SWIG_0(Piavca::Avatar *self,Piavca::Motion *m){
		Piavca::AvatarMotionQueue::getQueue(self, m->isFacial())->addBackgroundMotion("", m);
  
	}
SWIGINTERN void Piavca_Avatar_add_background_motion__SWIG_1(Piavca::Avatar *self,char const *motionName){
		Motion *m = Piavca::Core::getCore()->getMotion((motionName));
		Piavca::AvatarMotionQueue::getQueue(self, m->isFacial())->addBackgroundMotion
				((motionName), m);
  
	}
SWIGINTERN void Piavca_Avatar_interrupt_motion(Piavca::Avatar *self){
		Piavca::AvatarMotionQueue::getQueue(self)->interrupt();
  
	}
SWIGINTERN void Piavca_Avatar_stop_motion(Piavca::Avatar *self,char const *motionName){
		Piavca::AvatarMotionQueue::getQueue(self)->removeMotion(motionName);
		Piavca::AvatarMotionQueue::getQueue(self)->removeBackgroundMotion(motionName);
	}
SWIGINTERN void Piavca_Avatar_reposition_relative(Piavca::Avatar *self,Piavca::Vec const &pos){
		if(Piavca::AvatarMotionQueue::hasQueue(self))
		{
			Piavca::AvatarMotionQueue::getQueue(self)->repositionRelative(pos);
		}
		else
		{
			self->setRootPosition(pos - self->getRootPosition());
		}
	}
SWIGINTERN void Piavca_Avatar_reposition_absolute(Piavca::Avatar *self,Piavca::Vec const &pos){
		if(Piavca::AvatarMotionQueue::hasQueue(self))
		{
			Piavca::AvatarMotionQueue::getQueue(self)->repositionAbsolute(pos);
		}
		else
		{
			self->setRootPosition(pos);
		}
	}


/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "Piavca_wrap.h"

SwigDirector_TimeCallback::SwigDirector_TimeCallback(PyObject *self, Piavca::tstring _name): Piavca::TimeCallback(_name), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::TimeCallback *)this, this); 
}




SwigDirector_TimeCallback::~SwigDirector_TimeCallback() {
}

void SwigDirector_TimeCallback::init(Piavca::Core *core) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(core), SWIGTYPE_p_Piavca__Core,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeCallback.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "init";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"init", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TimeCallback::timeStep(Piavca::Core *core, float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(core), SWIGTYPE_p_Piavca__Core,  0 );
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeCallback.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "timeStep";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"timeStep", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


SwigDirector_AvatarTimeCallback::SwigDirector_AvatarTimeCallback(PyObject *self, Piavca::tstring _name): Piavca::AvatarTimeCallback(_name), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::AvatarTimeCallback *)this, this); 
}




SwigDirector_AvatarTimeCallback::~SwigDirector_AvatarTimeCallback() {
}

void SwigDirector_AvatarTimeCallback::init(Piavca::Avatar *avatar) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(avatar), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarTimeCallback.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "init";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"init", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_AvatarTimeCallback::timeStep(Piavca::Avatar *avatar, float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(avatar), SWIGTYPE_p_Piavca__Avatar,  0 );
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarTimeCallback.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "timeStep";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"timeStep", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


SwigDirector_Motion::SwigDirector_Motion(PyObject *self): Piavca::Motion(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::Motion *)this, this); 
}




SwigDirector_Motion::SwigDirector_Motion(PyObject *self, Piavca::Motion const &mot): Piavca::Motion(mot), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::Motion *)this, this); 
}




SwigDirector_Motion::~SwigDirector_Motion() {
}

Piavca::Motion *SwigDirector_Motion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_Motion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_Motion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Motion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Motion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Motion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_Motion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_Motion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_Motion::setStartTime(float t) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(t));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Motion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Motion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_Motion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_Motion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_Motion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_Motion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_Motion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_Motion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_Motion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_Motion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_Motion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_Motion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_Motion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_Motion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_Motion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Motion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_KeyframeMotion::SwigDirector_KeyframeMotion(PyObject *self, Piavca::tstring fileName, int flags, Piavca::Motion *basePosture): Piavca::KeyframeMotion(fileName, flags, basePosture), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::KeyframeMotion *)this, this); 
}




SwigDirector_KeyframeMotion::SwigDirector_KeyframeMotion(PyObject *self, bool _facial): Piavca::KeyframeMotion(_facial), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::KeyframeMotion *)this, this); 
}




SwigDirector_KeyframeMotion::SwigDirector_KeyframeMotion(PyObject *self, Piavca::MotionImp *_imp): Piavca::KeyframeMotion(_imp), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::KeyframeMotion *)this, this); 
}




SwigDirector_KeyframeMotion::SwigDirector_KeyframeMotion(PyObject *self, Piavca::KeyframeMotion const &mot): Piavca::KeyframeMotion(mot), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::KeyframeMotion *)this, this); 
}




SwigDirector_KeyframeMotion::SwigDirector_KeyframeMotion(PyObject *self, Piavca::Motion &mot): Piavca::KeyframeMotion(mot), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::KeyframeMotion *)this, this); 
}




SwigDirector_KeyframeMotion::~SwigDirector_KeyframeMotion() {
}

Piavca::Motion *SwigDirector_KeyframeMotion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_KeyframeMotion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_KeyframeMotion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_KeyframeMotion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_KeyframeMotion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_KeyframeMotion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_KeyframeMotion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_KeyframeMotion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_KeyframeMotion::setStartTime(float t) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(t));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_KeyframeMotion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_KeyframeMotion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_KeyframeMotion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_KeyframeMotion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_KeyframeMotion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_KeyframeMotion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_KeyframeMotion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_KeyframeMotion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_KeyframeMotion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_KeyframeMotion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_KeyframeMotion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_KeyframeMotion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_KeyframeMotion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_KeyframeMotion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_KeyframeMotion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


void SwigDirector_KeyframeMotion::setFacial(bool _facial) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_bool(static_cast< bool >(_facial));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call KeyframeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "setFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setFacial", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


SwigDirector_MotionFilter::SwigDirector_MotionFilter(PyObject *self): Piavca::MotionFilter(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MotionFilter *)this, this); 
}




SwigDirector_MotionFilter::SwigDirector_MotionFilter(PyObject *self, Piavca::Motion *mot): Piavca::MotionFilter(mot), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MotionFilter *)this, this); 
}




SwigDirector_MotionFilter::SwigDirector_MotionFilter(PyObject *self, Piavca::MotionFilter const &mf): Piavca::MotionFilter(mf), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MotionFilter *)this, this); 
}




SwigDirector_MotionFilter::~SwigDirector_MotionFilter() {
}

Piavca::Motion *SwigDirector_MotionFilter::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_MotionFilter::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_MotionFilter::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionFilter::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionFilter::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionFilter::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_MotionFilter::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_MotionFilter::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_MotionFilter::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionFilter::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionFilter::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_MotionFilter::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_MotionFilter::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_MotionFilter::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_MotionFilter::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_MotionFilter::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_MotionFilter::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MotionFilter::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MotionFilter::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_MotionFilter::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_MotionFilter::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_MotionFilter::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_MotionFilter::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_MotionFilter::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionFilter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_TwoMotionCombiner::SwigDirector_TwoMotionCombiner(PyObject *self): Piavca::TwoMotionCombiner(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::TwoMotionCombiner *)this, this); 
}




SwigDirector_TwoMotionCombiner::SwigDirector_TwoMotionCombiner(PyObject *self, Piavca::Motion *m1, Piavca::Motion *m2): Piavca::TwoMotionCombiner(m1, m2), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::TwoMotionCombiner *)this, this); 
}




SwigDirector_TwoMotionCombiner::SwigDirector_TwoMotionCombiner(PyObject *self, Piavca::TwoMotionCombiner const &tmc): Piavca::TwoMotionCombiner(tmc), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::TwoMotionCombiner *)this, this); 
}




SwigDirector_TwoMotionCombiner::~SwigDirector_TwoMotionCombiner() {
}

Piavca::Motion *SwigDirector_TwoMotionCombiner::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_TwoMotionCombiner::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_TwoMotionCombiner::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TwoMotionCombiner::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TwoMotionCombiner::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TwoMotionCombiner::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_TwoMotionCombiner::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_TwoMotionCombiner::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_TwoMotionCombiner::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TwoMotionCombiner::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TwoMotionCombiner::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_TwoMotionCombiner::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_TwoMotionCombiner::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_TwoMotionCombiner::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_TwoMotionCombiner::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_TwoMotionCombiner::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_TwoMotionCombiner::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_TwoMotionCombiner::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_TwoMotionCombiner::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_TwoMotionCombiner::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_TwoMotionCombiner::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_TwoMotionCombiner::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_TwoMotionCombiner::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_TwoMotionCombiner::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TwoMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_MultiMotionCombiner::SwigDirector_MultiMotionCombiner(PyObject *self, Piavca::MotionVec const &mv): Piavca::MultiMotionCombiner(mv), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MultiMotionCombiner *)this, this); 
}




SwigDirector_MultiMotionCombiner::SwigDirector_MultiMotionCombiner(PyObject *self): Piavca::MultiMotionCombiner(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MultiMotionCombiner *)this, this); 
}




SwigDirector_MultiMotionCombiner::SwigDirector_MultiMotionCombiner(PyObject *self, Piavca::MultiMotionCombiner const &rl): Piavca::MultiMotionCombiner(rl), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MultiMotionCombiner *)this, this); 
}




SwigDirector_MultiMotionCombiner::~SwigDirector_MultiMotionCombiner() {
}

Piavca::Motion *SwigDirector_MultiMotionCombiner::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_MultiMotionCombiner::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_MultiMotionCombiner::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MultiMotionCombiner::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MultiMotionCombiner::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MultiMotionCombiner::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_MultiMotionCombiner::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_MultiMotionCombiner::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_MultiMotionCombiner::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MultiMotionCombiner::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MultiMotionCombiner::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_MultiMotionCombiner::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_MultiMotionCombiner::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_MultiMotionCombiner::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_MultiMotionCombiner::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_MultiMotionCombiner::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_MultiMotionCombiner::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MultiMotionCombiner::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MultiMotionCombiner::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_MultiMotionCombiner::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_MultiMotionCombiner::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_MultiMotionCombiner::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_MultiMotionCombiner::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_MultiMotionCombiner::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


void SwigDirector_MultiMotionCombiner::addMotion(Piavca::Motion *mot) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(mot), SWIGTYPE_p_Piavca__Motion,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "addMotion";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"addMotion", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_MultiMotionCombiner::loaded(Piavca::Avatar *av) {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MultiMotionCombiner.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 25;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"loaded", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


SwigDirector_MaskedMotion::SwigDirector_MaskedMotion(PyObject *self): Piavca::MaskedMotion(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MaskedMotion *)this, this); 
}




SwigDirector_MaskedMotion::SwigDirector_MaskedMotion(PyObject *self, Piavca::Motion *_mot, Piavca::MotionMask const &_mask): Piavca::MaskedMotion(_mot, _mask), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MaskedMotion *)this, this); 
}




SwigDirector_MaskedMotion::SwigDirector_MaskedMotion(PyObject *self, Piavca::MaskedMotion const &mm): Piavca::MaskedMotion(mm), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MaskedMotion *)this, this); 
}




SwigDirector_MaskedMotion::~SwigDirector_MaskedMotion() {
}

Piavca::Motion *SwigDirector_MaskedMotion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_MaskedMotion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_MaskedMotion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MaskedMotion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MaskedMotion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MaskedMotion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_MaskedMotion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_MaskedMotion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_MaskedMotion::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MaskedMotion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MaskedMotion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_MaskedMotion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_MaskedMotion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_MaskedMotion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_MaskedMotion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_MaskedMotion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_MaskedMotion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MaskedMotion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MaskedMotion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_MaskedMotion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_MaskedMotion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_MaskedMotion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_MaskedMotion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_MaskedMotion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MaskedMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_ScaleMotion::SwigDirector_ScaleMotion(PyObject *self, Piavca::Motion *m, float scale): Piavca::ScaleMotion(m, scale), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ScaleMotion *)this, this); 
}




SwigDirector_ScaleMotion::SwigDirector_ScaleMotion(PyObject *self, Piavca::ScaleMotion const &sm): Piavca::ScaleMotion(sm), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ScaleMotion *)this, this); 
}




SwigDirector_ScaleMotion::~SwigDirector_ScaleMotion() {
}

Piavca::Motion *SwigDirector_ScaleMotion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_ScaleMotion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_ScaleMotion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_ScaleMotion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_ScaleMotion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_ScaleMotion::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_ScaleMotion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_ScaleMotion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_ScaleMotion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_ScaleMotion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_ScaleMotion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_ScaleMotion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ScaleMotion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ScaleMotion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_ScaleMotion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_ScaleMotion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_ScaleMotion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_ScaleMotion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_ScaleMotion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_ScaleMotionSpeed::SwigDirector_ScaleMotionSpeed(PyObject *self, Piavca::Motion *m, float scale): Piavca::ScaleMotionSpeed(m, scale), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ScaleMotionSpeed *)this, this); 
}




SwigDirector_ScaleMotionSpeed::SwigDirector_ScaleMotionSpeed(PyObject *self, Piavca::ScaleMotionSpeed const &sm): Piavca::ScaleMotionSpeed(sm), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ScaleMotionSpeed *)this, this); 
}




SwigDirector_ScaleMotionSpeed::~SwigDirector_ScaleMotionSpeed() {
}

Piavca::Motion *SwigDirector_ScaleMotionSpeed::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_ScaleMotionSpeed::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_ScaleMotionSpeed::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotionSpeed::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotionSpeed::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotionSpeed::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_ScaleMotionSpeed::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_ScaleMotionSpeed::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_ScaleMotionSpeed::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotionSpeed::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotionSpeed::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_ScaleMotionSpeed::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_ScaleMotionSpeed::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_ScaleMotionSpeed::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_ScaleMotionSpeed::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_ScaleMotionSpeed::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_ScaleMotionSpeed::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ScaleMotionSpeed::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ScaleMotionSpeed::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_ScaleMotionSpeed::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_ScaleMotionSpeed::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_ScaleMotionSpeed::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_ScaleMotionSpeed::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_ScaleMotionSpeed::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionSpeed.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_ChangeMotionLength::SwigDirector_ChangeMotionLength(PyObject *self, Piavca::Motion *mot, float len): Piavca::ChangeMotionLength(mot, len), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ChangeMotionLength *)this, this); 
}




SwigDirector_ChangeMotionLength::SwigDirector_ChangeMotionLength(PyObject *self, Piavca::ChangeMotionLength const &cml): Piavca::ChangeMotionLength(cml), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ChangeMotionLength *)this, this); 
}




SwigDirector_ChangeMotionLength::~SwigDirector_ChangeMotionLength() {
}

Piavca::Motion *SwigDirector_ChangeMotionLength::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_ChangeMotionLength::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_ChangeMotionLength::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ChangeMotionLength::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ChangeMotionLength::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ChangeMotionLength::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_ChangeMotionLength::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_ChangeMotionLength::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_ChangeMotionLength::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ChangeMotionLength::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ChangeMotionLength::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_ChangeMotionLength::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_ChangeMotionLength::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_ChangeMotionLength::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_ChangeMotionLength::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_ChangeMotionLength::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_ChangeMotionLength::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ChangeMotionLength::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ChangeMotionLength::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_ChangeMotionLength::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_ChangeMotionLength::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_ChangeMotionLength::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_ChangeMotionLength::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_ChangeMotionLength::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


void SwigDirector_ChangeMotionLength::setMotion(Piavca::Motion *mot) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(mot), SWIGTYPE_p_Piavca__Motion,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChangeMotionLength.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "setMotion";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setMotion", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


SwigDirector_ScaleMotionRoot::SwigDirector_ScaleMotionRoot(PyObject *self, Piavca::Motion *m, float scale): Piavca::ScaleMotionRoot(m, scale), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ScaleMotionRoot *)this, this); 
}




SwigDirector_ScaleMotionRoot::SwigDirector_ScaleMotionRoot(PyObject *self, Piavca::ScaleMotionRoot const &sm): Piavca::ScaleMotionRoot(sm), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ScaleMotionRoot *)this, this); 
}




SwigDirector_ScaleMotionRoot::~SwigDirector_ScaleMotionRoot() {
}

Piavca::Motion *SwigDirector_ScaleMotionRoot::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_ScaleMotionRoot::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_ScaleMotionRoot::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotionRoot::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotionRoot::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotionRoot::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_ScaleMotionRoot::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_ScaleMotionRoot::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_ScaleMotionRoot::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotionRoot::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ScaleMotionRoot::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_ScaleMotionRoot::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_ScaleMotionRoot::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_ScaleMotionRoot::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_ScaleMotionRoot::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_ScaleMotionRoot::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_ScaleMotionRoot::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ScaleMotionRoot::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ScaleMotionRoot::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_ScaleMotionRoot::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_ScaleMotionRoot::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_ScaleMotionRoot::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_ScaleMotionRoot::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_ScaleMotionRoot::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ScaleMotionRoot.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_TimeOffset::SwigDirector_TimeOffset(PyObject *self, Piavca::Motion *mot, float offs): Piavca::TimeOffset(mot, offs), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::TimeOffset *)this, this); 
}




SwigDirector_TimeOffset::SwigDirector_TimeOffset(PyObject *self, Piavca::TimeOffset const &to): Piavca::TimeOffset(to), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::TimeOffset *)this, this); 
}




SwigDirector_TimeOffset::~SwigDirector_TimeOffset() {
}

Piavca::Motion *SwigDirector_TimeOffset::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_TimeOffset::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_TimeOffset::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TimeOffset::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TimeOffset::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TimeOffset::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_TimeOffset::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_TimeOffset::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_TimeOffset::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TimeOffset::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TimeOffset::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_TimeOffset::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_TimeOffset::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_TimeOffset::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_TimeOffset::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_TimeOffset::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_TimeOffset::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_TimeOffset::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_TimeOffset::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_TimeOffset::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_TimeOffset::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_TimeOffset::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_TimeOffset::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_TimeOffset::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeOffset.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_Sequence::SwigDirector_Sequence(PyObject *self, Piavca::Motion *mot1, Piavca::Motion *mot2): Piavca::Sequence(mot1, mot2), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::Sequence *)this, this); 
}




SwigDirector_Sequence::SwigDirector_Sequence(PyObject *self, Piavca::Sequence const &sb): Piavca::Sequence(sb), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::Sequence *)this, this); 
}




SwigDirector_Sequence::~SwigDirector_Sequence() {
}

Piavca::Motion *SwigDirector_Sequence::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_Sequence::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_Sequence::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Sequence::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Sequence::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Sequence::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_Sequence::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_Sequence::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_Sequence::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Sequence::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Sequence::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_Sequence::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_Sequence::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_Sequence::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_Sequence::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_Sequence::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_Sequence::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_Sequence::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_Sequence::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_Sequence::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_Sequence::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_Sequence::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_Sequence::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_Sequence::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Sequence.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_MotionPosture::SwigDirector_MotionPosture(PyObject *self, Piavca::Motion *m, bool _facial): Piavca::MotionPosture(m, _facial), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MotionPosture *)this, this); 
}




SwigDirector_MotionPosture::SwigDirector_MotionPosture(PyObject *self, Piavca::MotionPosture const &m): Piavca::MotionPosture(m), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MotionPosture *)this, this); 
}




SwigDirector_MotionPosture::~SwigDirector_MotionPosture() {
}

Piavca::Motion *SwigDirector_MotionPosture::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_MotionPosture::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_MotionPosture::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionPosture::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionPosture::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionPosture::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_MotionPosture::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_MotionPosture::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_MotionPosture::setStartTime(float t) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(t));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionPosture::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionPosture::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_MotionPosture::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_MotionPosture::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_MotionPosture::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_MotionPosture::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_MotionPosture::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_MotionPosture::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MotionPosture::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MotionPosture::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_MotionPosture::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_MotionPosture::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_MotionPosture::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_MotionPosture::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_MotionPosture::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


void SwigDirector_MotionPosture::setFacial(bool _facial) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_bool(static_cast< bool >(_facial));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "setFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setFacial", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


SwigDirector_AvatarPosture::SwigDirector_AvatarPosture(PyObject *self, bool _facial): Piavca::AvatarPosture(_facial), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::AvatarPosture *)this, this); 
}




SwigDirector_AvatarPosture::SwigDirector_AvatarPosture(PyObject *self, Piavca::AvatarPosture const &m): Piavca::AvatarPosture(m), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::AvatarPosture *)this, this); 
}




SwigDirector_AvatarPosture::~SwigDirector_AvatarPosture() {
}

Piavca::Motion *SwigDirector_AvatarPosture::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_AvatarPosture::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_AvatarPosture::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_AvatarPosture::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_AvatarPosture::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_AvatarPosture::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_AvatarPosture::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_AvatarPosture::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_AvatarPosture::setStartTime(float t) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(t));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_AvatarPosture::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_AvatarPosture::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_AvatarPosture::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_AvatarPosture::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_AvatarPosture::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_AvatarPosture::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_AvatarPosture::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_AvatarPosture::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_AvatarPosture::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_AvatarPosture::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_AvatarPosture::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_AvatarPosture::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_AvatarPosture::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_AvatarPosture::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_AvatarPosture::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


void SwigDirector_AvatarPosture::setFacial(bool _facial) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_bool(static_cast< bool >(_facial));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call AvatarPosture.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "setFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setFacial", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


SwigDirector_PostureBlend::SwigDirector_PostureBlend(PyObject *self, Piavca::Motion *mot, float interval): Piavca::PostureBlend(mot, interval), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::PostureBlend *)this, this); 
}




SwigDirector_PostureBlend::SwigDirector_PostureBlend(PyObject *self, Piavca::PostureBlend const &pb): Piavca::PostureBlend(pb), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::PostureBlend *)this, this); 
}




SwigDirector_PostureBlend::~SwigDirector_PostureBlend() {
}

Piavca::Motion *SwigDirector_PostureBlend::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_PostureBlend::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_PostureBlend::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_PostureBlend::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_PostureBlend::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_PostureBlend::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_PostureBlend::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_PostureBlend::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_PostureBlend::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_PostureBlend::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_PostureBlend::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_PostureBlend::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_PostureBlend::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_PostureBlend::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_PostureBlend::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_PostureBlend::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_PostureBlend::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_PostureBlend::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_PostureBlend::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_PostureBlend::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_PostureBlend::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_PostureBlend::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_PostureBlend::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_PostureBlend::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


void SwigDirector_PostureBlend::reblend(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "reblend";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"reblend", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_PostureBlend::setMotion(Piavca::Motion *mot) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(mot), SWIGTYPE_p_Piavca__Motion,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 25;
  const char * const swig_method_name = "setMotion";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setMotion", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_PostureBlend::getMotion() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PostureBlend.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 26;
  const char * const swig_method_name = "getMotion";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotion", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


SwigDirector_Reposition::SwigDirector_Reposition(PyObject *self, Piavca::Motion *m, Piavca::Vec pos, Piavca::Quat ori): Piavca::Reposition(m, pos, ori), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::Reposition *)this, this); 
}




SwigDirector_Reposition::SwigDirector_Reposition(PyObject *self, Piavca::Reposition const &r): Piavca::Reposition(r), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::Reposition *)this, this); 
}




SwigDirector_Reposition::~SwigDirector_Reposition() {
}

Piavca::Motion *SwigDirector_Reposition::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_Reposition::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_Reposition::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Reposition::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Reposition::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Reposition::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_Reposition::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_Reposition::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_Reposition::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Reposition::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Reposition::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_Reposition::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_Reposition::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_Reposition::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_Reposition::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_Reposition::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_Reposition::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_Reposition::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_Reposition::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_Reposition::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_Reposition::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_Reposition::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_Reposition::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_Reposition::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


void SwigDirector_Reposition::setMaintainY(bool b) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_bool(static_cast< bool >(b));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Reposition.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "setMaintainY";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setMaintainY", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


SwigDirector_LoopMotion::SwigDirector_LoopMotion(PyObject *self, Piavca::Motion *mot, float _endTime): Piavca::LoopMotion(mot, _endTime), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::LoopMotion *)this, this); 
}




SwigDirector_LoopMotion::SwigDirector_LoopMotion(PyObject *self, Piavca::LoopMotion const &l): Piavca::LoopMotion(l), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::LoopMotion *)this, this); 
}




SwigDirector_LoopMotion::~SwigDirector_LoopMotion() {
}

Piavca::Motion *SwigDirector_LoopMotion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_LoopMotion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_LoopMotion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_LoopMotion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_LoopMotion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_LoopMotion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_LoopMotion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_LoopMotion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_LoopMotion::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_LoopMotion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_LoopMotion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_LoopMotion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_LoopMotion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_LoopMotion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_LoopMotion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_LoopMotion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_LoopMotion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_LoopMotion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_LoopMotion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_LoopMotion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_LoopMotion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_LoopMotion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_LoopMotion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_LoopMotion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LoopMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_RandomTimingsMotion::SwigDirector_RandomTimingsMotion(PyObject *self, Piavca::Motion *mot, float min, float max): Piavca::RandomTimingsMotion(mot, min, max), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::RandomTimingsMotion *)this, this); 
}




SwigDirector_RandomTimingsMotion::SwigDirector_RandomTimingsMotion(PyObject *self, Piavca::RandomTimingsMotion const &rtm): Piavca::RandomTimingsMotion(rtm), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::RandomTimingsMotion *)this, this); 
}




SwigDirector_RandomTimingsMotion::~SwigDirector_RandomTimingsMotion() {
}

Piavca::Motion *SwigDirector_RandomTimingsMotion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_RandomTimingsMotion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_RandomTimingsMotion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_RandomTimingsMotion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_RandomTimingsMotion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_RandomTimingsMotion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_RandomTimingsMotion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_RandomTimingsMotion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_RandomTimingsMotion::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_RandomTimingsMotion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_RandomTimingsMotion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_RandomTimingsMotion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_RandomTimingsMotion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_RandomTimingsMotion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_RandomTimingsMotion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_RandomTimingsMotion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_RandomTimingsMotion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_RandomTimingsMotion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_RandomTimingsMotion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_RandomTimingsMotion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_RandomTimingsMotion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_RandomTimingsMotion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_RandomTimingsMotion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_RandomTimingsMotion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


void SwigDirector_RandomTimingsMotion::setTimingParams(float minTimeScale, float maxTimeScale) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(minTimeScale));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(maxTimeScale));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomTimingsMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "setTimingParams";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setTimingParams", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


SwigDirector_BlendBetween::SwigDirector_BlendBetween(PyObject *self, Piavca::Motion *m1, Piavca::Motion *m2, float _blend): Piavca::BlendBetween(m1, m2, _blend), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::BlendBetween *)this, this); 
}




SwigDirector_BlendBetween::SwigDirector_BlendBetween(PyObject *self, Piavca::BlendBetween const &b): Piavca::BlendBetween(b), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::BlendBetween *)this, this); 
}




SwigDirector_BlendBetween::~SwigDirector_BlendBetween() {
}

Piavca::Motion *SwigDirector_BlendBetween::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_BlendBetween::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_BlendBetween::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_BlendBetween::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_BlendBetween::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_BlendBetween::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_BlendBetween::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_BlendBetween::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_BlendBetween::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_BlendBetween::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_BlendBetween::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_BlendBetween::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_BlendBetween::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_BlendBetween::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_BlendBetween::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_BlendBetween::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_BlendBetween::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_BlendBetween::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_BlendBetween::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_BlendBetween::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_BlendBetween::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_BlendBetween::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_BlendBetween::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_BlendBetween::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BlendBetween.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_MotionAdder::SwigDirector_MotionAdder(PyObject *self): Piavca::MotionAdder(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MotionAdder *)this, this); 
}




SwigDirector_MotionAdder::SwigDirector_MotionAdder(PyObject *self, Piavca::MotionVec const &mv): Piavca::MotionAdder(mv), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MotionAdder *)this, this); 
}




SwigDirector_MotionAdder::SwigDirector_MotionAdder(PyObject *self, Piavca::MotionAdder const &ma): Piavca::MotionAdder(ma), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MotionAdder *)this, this); 
}




SwigDirector_MotionAdder::~SwigDirector_MotionAdder() {
}

Piavca::Motion *SwigDirector_MotionAdder::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_MotionAdder::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_MotionAdder::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionAdder::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionAdder::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionAdder::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_MotionAdder::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_MotionAdder::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_MotionAdder::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionAdder::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionAdder::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_MotionAdder::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_MotionAdder::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_MotionAdder::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_MotionAdder::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_MotionAdder::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_MotionAdder::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MotionAdder::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MotionAdder::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_MotionAdder::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_MotionAdder::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_MotionAdder::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_MotionAdder::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_MotionAdder::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


void SwigDirector_MotionAdder::addMotion(Piavca::Motion *mot) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(mot), SWIGTYPE_p_Piavca__Motion,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "addMotion";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"addMotion", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_MotionAdder::loaded(Piavca::Avatar *av) {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionAdder.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 25;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"loaded", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


SwigDirector_Subtract::SwigDirector_Subtract(PyObject *self, Piavca::Motion *m1, Piavca::Motion *m2): Piavca::Subtract(m1, m2), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::Subtract *)this, this); 
}




SwigDirector_Subtract::SwigDirector_Subtract(PyObject *self, Piavca::Subtract const &su): Piavca::Subtract(su), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::Subtract *)this, this); 
}




SwigDirector_Subtract::~SwigDirector_Subtract() {
}

Piavca::Motion *SwigDirector_Subtract::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_Subtract::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_Subtract::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Subtract::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Subtract::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Subtract::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_Subtract::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_Subtract::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_Subtract::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Subtract::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_Subtract::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_Subtract::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_Subtract::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_Subtract::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_Subtract::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_Subtract::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_Subtract::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_Subtract::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_Subtract::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_Subtract::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_Subtract::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_Subtract::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_Subtract::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_Subtract::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Subtract.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_ChoiceMotion::SwigDirector_ChoiceMotion(PyObject *self): Piavca::ChoiceMotion(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ChoiceMotion *)this, this); 
}




SwigDirector_ChoiceMotion::SwigDirector_ChoiceMotion(PyObject *self, Piavca::MotionVec const &mpv): Piavca::ChoiceMotion(mpv), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ChoiceMotion *)this, this); 
}




SwigDirector_ChoiceMotion::SwigDirector_ChoiceMotion(PyObject *self, Piavca::ChoiceMotion const &cl): Piavca::ChoiceMotion(cl), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ChoiceMotion *)this, this); 
}




SwigDirector_ChoiceMotion::~SwigDirector_ChoiceMotion() {
}

Piavca::Motion *SwigDirector_ChoiceMotion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_ChoiceMotion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_ChoiceMotion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ChoiceMotion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ChoiceMotion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ChoiceMotion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_ChoiceMotion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_ChoiceMotion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_ChoiceMotion::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ChoiceMotion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ChoiceMotion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_ChoiceMotion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_ChoiceMotion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_ChoiceMotion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_ChoiceMotion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_ChoiceMotion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_ChoiceMotion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ChoiceMotion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ChoiceMotion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_ChoiceMotion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_ChoiceMotion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_ChoiceMotion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_ChoiceMotion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_ChoiceMotion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


void SwigDirector_ChoiceMotion::addMotion(Piavca::Motion *mot) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(mot), SWIGTYPE_p_Piavca__Motion,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "addMotion";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"addMotion", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


int SwigDirector_ChoiceMotion::makeChoice() {
  int c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ChoiceMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 25;
  const char * const swig_method_name = "makeChoice";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "makeChoice", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


SwigDirector_PointAt::SwigDirector_PointAt(PyObject *self): Piavca::PointAt(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::PointAt *)this, this); 
}




SwigDirector_PointAt::SwigDirector_PointAt(PyObject *self, int joint, Piavca::Vec const &target, bool _local): Piavca::PointAt(joint, target, _local), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::PointAt *)this, this); 
}




SwigDirector_PointAt::SwigDirector_PointAt(PyObject *self, int joint, Piavca::Motion *target, int target_joint): Piavca::PointAt(joint, target, target_joint), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::PointAt *)this, this); 
}




SwigDirector_PointAt::SwigDirector_PointAt(PyObject *self, Piavca::PointAt const &pa): Piavca::PointAt(pa), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::PointAt *)this, this); 
}




SwigDirector_PointAt::~SwigDirector_PointAt() {
}

Piavca::Motion *SwigDirector_PointAt::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_PointAt::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_PointAt::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_PointAt::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_PointAt::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_PointAt::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_PointAt::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_PointAt::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_PointAt::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_PointAt::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_PointAt::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_PointAt::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_PointAt::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_PointAt::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_PointAt::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_PointAt::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_PointAt::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_PointAt::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_PointAt::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_PointAt::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_PointAt::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_PointAt::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_PointAt::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_PointAt::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call PointAt.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_LookAtMotion::SwigDirector_LookAtMotion(PyObject *self): Piavca::LookAtMotion(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::LookAtMotion *)this, this); 
}




SwigDirector_LookAtMotion::SwigDirector_LookAtMotion(PyObject *self, Piavca::Avatar *target, int joint, float _endTime, float _interval): Piavca::LookAtMotion(target, joint, _endTime, _interval), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::LookAtMotion *)this, this); 
}




SwigDirector_LookAtMotion::SwigDirector_LookAtMotion(PyObject *self, Piavca::Object *target, float _endTime, float _interval): Piavca::LookAtMotion(target, _endTime, _interval), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::LookAtMotion *)this, this); 
}




SwigDirector_LookAtMotion::SwigDirector_LookAtMotion(PyObject *self, Piavca::Vec const &target, float _endTime, bool _local, float _interval): Piavca::LookAtMotion(target, _endTime, _local, _interval), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::LookAtMotion *)this, this); 
}




SwigDirector_LookAtMotion::SwigDirector_LookAtMotion(PyObject *self, Piavca::LookAtMotion const &lam): Piavca::LookAtMotion(lam), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::LookAtMotion *)this, this); 
}




SwigDirector_LookAtMotion::~SwigDirector_LookAtMotion() {
}

Piavca::Motion *SwigDirector_LookAtMotion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_LookAtMotion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_LookAtMotion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_LookAtMotion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_LookAtMotion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_LookAtMotion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_LookAtMotion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_LookAtMotion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_LookAtMotion::setStartTime(float t) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(t));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_LookAtMotion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_LookAtMotion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_LookAtMotion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_LookAtMotion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_LookAtMotion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_LookAtMotion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_LookAtMotion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_LookAtMotion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_LookAtMotion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_LookAtMotion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_LookAtMotion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_LookAtMotion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_LookAtMotion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_LookAtMotion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_LookAtMotion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LookAtMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_RandomGazeMotion::SwigDirector_RandomGazeMotion(PyObject *self, float endTime, float interval): Piavca::RandomGazeMotion(endTime, interval), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::RandomGazeMotion *)this, this); 
}




SwigDirector_RandomGazeMotion::SwigDirector_RandomGazeMotion(PyObject *self, Piavca::RandomGazeMotion const &rg): Piavca::RandomGazeMotion(rg), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::RandomGazeMotion *)this, this); 
}




SwigDirector_RandomGazeMotion::~SwigDirector_RandomGazeMotion() {
}

Piavca::Motion *SwigDirector_RandomGazeMotion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_RandomGazeMotion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_RandomGazeMotion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_RandomGazeMotion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_RandomGazeMotion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_RandomGazeMotion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_RandomGazeMotion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_RandomGazeMotion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_RandomGazeMotion::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_RandomGazeMotion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_RandomGazeMotion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_RandomGazeMotion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_RandomGazeMotion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_RandomGazeMotion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_RandomGazeMotion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_RandomGazeMotion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_RandomGazeMotion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_RandomGazeMotion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_RandomGazeMotion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_RandomGazeMotion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_RandomGazeMotion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_RandomGazeMotion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_RandomGazeMotion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_RandomGazeMotion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


bool SwigDirector_RandomGazeMotion::lookAt(Piavca::tstring name, bool force) {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(name));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_bool(static_cast< bool >(force));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "lookAt";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"lookAt", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


void SwigDirector_RandomGazeMotion::reblend(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call RandomGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 26;
  const char * const swig_method_name = "reblend";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"reblend", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


SwigDirector_ZeroMotion::SwigDirector_ZeroMotion(PyObject *self, bool _facial): Piavca::ZeroMotion(_facial), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ZeroMotion *)this, this); 
}




SwigDirector_ZeroMotion::SwigDirector_ZeroMotion(PyObject *self, Piavca::ZeroMotion const &zm): Piavca::ZeroMotion(zm), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::ZeroMotion *)this, this); 
}




SwigDirector_ZeroMotion::~SwigDirector_ZeroMotion() {
}

Piavca::Motion *SwigDirector_ZeroMotion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_ZeroMotion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_ZeroMotion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ZeroMotion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ZeroMotion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ZeroMotion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_ZeroMotion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_ZeroMotion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_ZeroMotion::setStartTime(float t) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(t));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ZeroMotion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_ZeroMotion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_ZeroMotion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_ZeroMotion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_ZeroMotion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_ZeroMotion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_ZeroMotion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_ZeroMotion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ZeroMotion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_ZeroMotion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_ZeroMotion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_ZeroMotion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_ZeroMotion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_ZeroMotion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_ZeroMotion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call ZeroMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_MotionSaver::SwigDirector_MotionSaver(PyObject *self, Piavca::Motion *mot): Piavca::MotionSaver(mot), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MotionSaver *)this, this); 
}




SwigDirector_MotionSaver::SwigDirector_MotionSaver(PyObject *self, Piavca::MotionSaver const &to): Piavca::MotionSaver(to), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::MotionSaver *)this, this); 
}




SwigDirector_MotionSaver::~SwigDirector_MotionSaver() {
}

Piavca::Motion *SwigDirector_MotionSaver::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_MotionSaver::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_MotionSaver::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionSaver::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionSaver::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionSaver::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_MotionSaver::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_MotionSaver::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_MotionSaver::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionSaver::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_MotionSaver::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_MotionSaver::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_MotionSaver::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_MotionSaver::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_MotionSaver::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_MotionSaver::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_MotionSaver::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MotionSaver::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_MotionSaver::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_MotionSaver::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_MotionSaver::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_MotionSaver::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_MotionSaver::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_MotionSaver::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call MotionSaver.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_SubMotion::SwigDirector_SubMotion(PyObject *self): Piavca::SubMotion(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::SubMotion *)this, this); 
}




SwigDirector_SubMotion::SwigDirector_SubMotion(PyObject *self, Piavca::Motion *m, float _start, float _end): Piavca::SubMotion(m, _start, _end), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::SubMotion *)this, this); 
}




SwigDirector_SubMotion::SwigDirector_SubMotion(PyObject *self, Piavca::SubMotion const &sm): Piavca::SubMotion(sm), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::SubMotion *)this, this); 
}




SwigDirector_SubMotion::~SwigDirector_SubMotion() {
}

Piavca::Motion *SwigDirector_SubMotion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_SubMotion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_SubMotion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_SubMotion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_SubMotion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_SubMotion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_SubMotion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_SubMotion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_SubMotion::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_SubMotion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_SubMotion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_SubMotion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_SubMotion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_SubMotion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_SubMotion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_SubMotion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_SubMotion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_SubMotion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_SubMotion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_SubMotion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_SubMotion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_SubMotion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_SubMotion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_SubMotion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call SubMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_TimeWarp::SwigDirector_TimeWarp(PyObject *self, Piavca::Motion *m, Piavca::Motion *warp): Piavca::TimeWarp(m, warp), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::TimeWarp *)this, this); 
}




SwigDirector_TimeWarp::SwigDirector_TimeWarp(PyObject *self, Piavca::TimeWarp const &tw): Piavca::TimeWarp(tw), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::TimeWarp *)this, this); 
}




SwigDirector_TimeWarp::~SwigDirector_TimeWarp() {
}

Piavca::Motion *SwigDirector_TimeWarp::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_TimeWarp::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_TimeWarp::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TimeWarp::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TimeWarp::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TimeWarp::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_TimeWarp::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_TimeWarp::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_TimeWarp::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TimeWarp::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_TimeWarp::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_TimeWarp::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_TimeWarp::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_TimeWarp::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_TimeWarp::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_TimeWarp::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_TimeWarp::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_TimeWarp::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_TimeWarp::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_TimeWarp::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_TimeWarp::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_TimeWarp::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_TimeWarp::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_TimeWarp::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call TimeWarp.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


SwigDirector_DiadicGazeMotion::SwigDirector_DiadicGazeMotion(PyObject *self, Piavca::Avatar *other, float endTime, float interval): Piavca::DiadicGazeMotion(other, endTime, interval), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::DiadicGazeMotion *)this, this); 
}




SwigDirector_DiadicGazeMotion::SwigDirector_DiadicGazeMotion(PyObject *self, Piavca::DiadicGazeMotion const &dg): Piavca::DiadicGazeMotion(dg), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((Piavca::DiadicGazeMotion *)this, this); 
}




SwigDirector_DiadicGazeMotion::~SwigDirector_DiadicGazeMotion() {
}

Piavca::Motion *SwigDirector_DiadicGazeMotion::clone() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "clone";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "clone", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::tstring SwigDirector_DiadicGazeMotion::getClassName() {
  Piavca::tstring c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "getClassName";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getClassName", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::string *swig_optr = 0;
  int swig_ores = SWIG_AsPtr_std_string(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""Piavca::tstring""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (Piavca::tstring) c_result;
}


void SwigDirector_DiadicGazeMotion::create() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "create";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "create", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_DiadicGazeMotion::printInfo() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "printInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "printInfo", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_DiadicGazeMotion::load(Piavca::Avatar *av) {
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(av), SWIGTYPE_p_Piavca__Avatar,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "load";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"load", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_DiadicGazeMotion::unload() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "unload";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "unload", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


bool SwigDirector_DiadicGazeMotion::loaded() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "loaded";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "loaded", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


Piavca::Avatar *SwigDirector_DiadicGazeMotion::getAvatar() {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Avatar *c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "getAvatar";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getAvatar", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Avatar,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Avatar *""'");
  }
  c_result = reinterpret_cast< Piavca::Avatar * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Avatar *) c_result;
}


void SwigDirector_DiadicGazeMotion::setStartTime(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "setStartTime";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"setStartTime", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_DiadicGazeMotion::reset() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "reset";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "reset", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


void SwigDirector_DiadicGazeMotion::event(Piavca::tstring ev) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(ev));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "event";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"event", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > SwigDirector_DiadicGazeMotion::getEventNames() {
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "getEventNames";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getEventNames", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  std::vector<std::string,std::allocator<std::string > > *swig_optr = 0;
  int swig_ores = swig::asptr(result, &swig_optr);
  if (!SWIG_IsOK(swig_ores) || !swig_optr) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError((swig_optr ? swig_ores : SWIG_TypeError))), "in output value of type '""std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >""'");
  }
  c_result = *swig_optr;
  if (SWIG_IsNewObj(swig_ores)) delete swig_optr;
  return (std::vector<Piavca::tstring,std::allocator<Piavca::tstring > >) c_result;
}


void SwigDirector_DiadicGazeMotion::cleanRecursionState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "cleanRecursionState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "cleanRecursionState", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


Piavca::Motion *SwigDirector_DiadicGazeMotion::findSub(Piavca::tstring nm) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(nm));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "findSub";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSub", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


Piavca::Motion *SwigDirector_DiadicGazeMotion::findSubByType(type_info const &ty) {
  void *swig_argp ;
  int swig_res ;
  swig_owntype own ;
  
  Piavca::Motion *c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&ty), SWIGTYPE_p_std__type_info,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "findSubByType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"findSubByType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtrAndOwn(result, &swig_argp, SWIGTYPE_p_Piavca__Motion,  0  | SWIG_POINTER_DISOWN, &own);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Motion *""'");
  }
  c_result = reinterpret_cast< Piavca::Motion * >(swig_argp);
  swig_acquire_ownership_obj(SWIG_as_voidptr(c_result), own);
  return (Piavca::Motion *) c_result;
}


float SwigDirector_DiadicGazeMotion::getMotionLength() const {
  float c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "getMotionLength";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "getMotionLength", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


bool SwigDirector_DiadicGazeMotion::isFacial() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "isFacial";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isFacial", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_DiadicGazeMotion::isRandomAccess() {
  bool c_result;
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "isRandomAccess";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *) "isRandomAccess", NULL);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


bool SwigDirector_DiadicGazeMotion::isNull(int trackId) const {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "isNull";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"isNull", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


int SwigDirector_DiadicGazeMotion::getTrackType(int trackId) const {
  int c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char * const swig_method_name = "getTrackType";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getTrackType", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""int""'");
  }
  c_result = static_cast< int >(swig_val);
  return (int) c_result;
}


void SwigDirector_DiadicGazeMotion::preFrame(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char * const swig_method_name = "preFrame";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"preFrame", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


float SwigDirector_DiadicGazeMotion::getFloatValueAtTimeInternal(int trackId, float time) {
  float c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char * const swig_method_name = "getFloatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getFloatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  float swig_val;
  int swig_res = SWIG_AsVal_float(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""float""'");
  }
  c_result = static_cast< float >(swig_val);
  return (float) c_result;
}


Piavca::Vec SwigDirector_DiadicGazeMotion::getVecValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Vec c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char * const swig_method_name = "getVecValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getVecValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Vec""'");
  }
  c_result = *(reinterpret_cast< Piavca::Vec * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Vec * >(swig_argp);
  return (Piavca::Vec) c_result;
}


Piavca::Quat SwigDirector_DiadicGazeMotion::getQuatValueAtTimeInternal(int trackId, float time) {
  void *swig_argp ;
  int swig_res = 0 ;
  
  Piavca::Quat c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_int(static_cast< int >(trackId));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char * const swig_method_name = "getQuatValueAtTimeInternal";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"getQuatValueAtTimeInternal", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  swig_res = SWIG_ConvertPtr(result,&swig_argp,SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""Piavca::Quat""'");
  }
  c_result = *(reinterpret_cast< Piavca::Quat * >(swig_argp));
  if (SWIG_IsNewObj(swig_res)) delete reinterpret_cast< Piavca::Quat * >(swig_argp);
  return (Piavca::Quat) c_result;
}


bool SwigDirector_DiadicGazeMotion::lookAt(Piavca::tstring name, bool force) {
  bool c_result;
  swig::PyObject_var obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(name));
  swig::PyObject_var obj1;
  obj1 = SWIG_From_bool(static_cast< bool >(force));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char * const swig_method_name = "lookAt";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"lookAt", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


void SwigDirector_DiadicGazeMotion::reblend(float time) {
  swig::PyObject_var obj0;
  obj0 = SWIG_From_float(static_cast< float >(time));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call DiadicGazeMotion.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 26;
  const char * const swig_method_name = "reblend";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::PyObject_var result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::PyObject_var result = PyObject_CallMethod(swig_get_self(), (char *)"reblend", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (result == NULL) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        //std::cout << "got a director exception" << std::endl;
        PyErr_Print();
        Piavca::Error("error when calling a python director method");
      }
    }
  }
}


#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_PySwigIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PySwigIterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PySwigIterator" "', argument " "1"" of type '" "swig::PySwigIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  delete arg1;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  PyObject *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PySwigIterator_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator_value" "', argument " "1"" of type '" "swig::PySwigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  try {
    result = (PyObject *)((swig::PySwigIterator const *)arg1)->value();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  size_t arg2 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator_incr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator_incr" "', argument " "1"" of type '" "swig::PySwigIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PySwigIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::PySwigIterator *)(arg1)->incr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PySwigIterator_incr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator_incr" "', argument " "1"" of type '" "swig::PySwigIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  try {
    result = (swig::PySwigIterator *)(arg1)->incr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_incr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__PySwigIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PySwigIterator_incr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__PySwigIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PySwigIterator_incr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'PySwigIterator_incr'.\n  Possible C/C++ prototypes are:\n    incr(size_t)\n    incr()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  size_t arg2 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator_decr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator_decr" "', argument " "1"" of type '" "swig::PySwigIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PySwigIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::PySwigIterator *)(arg1)->decr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PySwigIterator_decr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator_decr" "', argument " "1"" of type '" "swig::PySwigIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  try {
    result = (swig::PySwigIterator *)(arg1)->decr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_decr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__PySwigIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PySwigIterator_decr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__PySwigIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PySwigIterator_decr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'PySwigIterator_decr'.\n  Possible C/C++ prototypes are:\n    decr(size_t)\n    decr()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  swig::PySwigIterator *arg2 = 0 ;
  ptrdiff_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator_distance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator_distance" "', argument " "1"" of type '" "swig::PySwigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__PySwigIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PySwigIterator_distance" "', argument " "2"" of type '" "swig::PySwigIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PySwigIterator_distance" "', argument " "2"" of type '" "swig::PySwigIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::PySwigIterator * >(argp2);
  try {
    result = ((swig::PySwigIterator const *)arg1)->distance((swig::PySwigIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  swig::PySwigIterator *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator_equal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator_equal" "', argument " "1"" of type '" "swig::PySwigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__PySwigIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PySwigIterator_equal" "', argument " "2"" of type '" "swig::PySwigIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PySwigIterator_equal" "', argument " "2"" of type '" "swig::PySwigIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::PySwigIterator * >(argp2);
  try {
    result = (bool)((swig::PySwigIterator const *)arg1)->equal((swig::PySwigIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PySwigIterator_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator_copy" "', argument " "1"" of type '" "swig::PySwigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  result = (swig::PySwigIterator *)((swig::PySwigIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  PyObject *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PySwigIterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator_next" "', argument " "1"" of type '" "swig::PySwigIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  PyObject *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PySwigIterator_previous",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator_previous" "', argument " "1"" of type '" "swig::PySwigIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  ptrdiff_t arg2 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator_advance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator_advance" "', argument " "1"" of type '" "swig::PySwigIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PySwigIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::PySwigIterator *)(arg1)->advance(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  swig::PySwigIterator *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator___eq__" "', argument " "1"" of type '" "swig::PySwigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__PySwigIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PySwigIterator___eq__" "', argument " "2"" of type '" "swig::PySwigIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PySwigIterator___eq__" "', argument " "2"" of type '" "swig::PySwigIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::PySwigIterator * >(argp2);
  result = (bool)((swig::PySwigIterator const *)arg1)->operator ==((swig::PySwigIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  swig::PySwigIterator *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator___ne__" "', argument " "1"" of type '" "swig::PySwigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__PySwigIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PySwigIterator___ne__" "', argument " "2"" of type '" "swig::PySwigIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PySwigIterator___ne__" "', argument " "2"" of type '" "swig::PySwigIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::PySwigIterator * >(argp2);
  result = (bool)((swig::PySwigIterator const *)arg1)->operator !=((swig::PySwigIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  ptrdiff_t arg2 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator___iadd__" "', argument " "1"" of type '" "swig::PySwigIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PySwigIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    {
      swig::PySwigIterator &_result_ref = (arg1)->operator +=(arg2);
      result = (swig::PySwigIterator *) &_result_ref;
    }
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  ptrdiff_t arg2 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator___isub__" "', argument " "1"" of type '" "swig::PySwigIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PySwigIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    {
      swig::PySwigIterator &_result_ref = (arg1)->operator -=(arg2);
      result = (swig::PySwigIterator *) &_result_ref;
    }
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  ptrdiff_t arg2 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator___add__" "', argument " "1"" of type '" "swig::PySwigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PySwigIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::PySwigIterator *)((swig::PySwigIterator const *)arg1)->operator +(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  ptrdiff_t arg2 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator___sub__" "', argument " "1"" of type '" "swig::PySwigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PySwigIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::PySwigIterator *)((swig::PySwigIterator const *)arg1)->operator -(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::PySwigIterator *arg1 = (swig::PySwigIterator *) 0 ;
  swig::PySwigIterator *arg2 = 0 ;
  ptrdiff_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PySwigIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__PySwigIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySwigIterator___sub__" "', argument " "1"" of type '" "swig::PySwigIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::PySwigIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__PySwigIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PySwigIterator___sub__" "', argument " "2"" of type '" "swig::PySwigIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PySwigIterator___sub__" "', argument " "2"" of type '" "swig::PySwigIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::PySwigIterator * >(argp2);
  result = ((swig::PySwigIterator const *)arg1)->operator -((swig::PySwigIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySwigIterator___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__PySwigIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__PySwigIterator, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PySwigIterator___sub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__PySwigIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PySwigIterator___sub____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *PySwigIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__PySwigIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vectorS_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_iterator" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = (swig::PySwigIterator *)std_vector_Sl_std_string_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS___nonzero__" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = (bool)std_vector_Sl_std_string_Sg____nonzero__((std::vector<std::string > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::size_type result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS___len__" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = std_vector_Sl_std_string_Sg____len__((std::vector<std::string > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::value_type result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_pop" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  try {
    result = std_vector_Sl_std_string_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::difference_type arg2 ;
  std::vector<std::string >::difference_type arg3 ;
  std::vector<std::string,std::allocator<std::string > > *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorS___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS___getslice__" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorS___getslice__" "', argument " "2"" of type '" "std::vector<std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<std::string >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorS___getslice__" "', argument " "3"" of type '" "std::vector<std::string >::difference_type""'");
  } 
  arg3 = static_cast< std::vector<std::string >::difference_type >(val3);
  try {
    result = (std::vector<std::string,std::allocator<std::string > > *)std_vector_Sl_std_string_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS___setslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::difference_type arg2 ;
  std::vector<std::string >::difference_type arg3 ;
  std::vector<std::string,std::allocator<std::string > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:vectorS___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS___setslice__" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorS___setslice__" "', argument " "2"" of type '" "std::vector<std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<std::string >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorS___setslice__" "', argument " "3"" of type '" "std::vector<std::string >::difference_type""'");
  } 
  arg3 = static_cast< std::vector<std::string >::difference_type >(val3);
  {
    std::vector<std::string,std::allocator<std::string > > *ptr = (std::vector<std::string,std::allocator<std::string > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorS___setslice__" "', argument " "4"" of type '" "std::vector<std::string,std::allocator<std::string > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorS___setslice__" "', argument " "4"" of type '" "std::vector<std::string,std::allocator<std::string > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_std_string_Sg____setslice__(arg1,arg2,arg3,(std::vector<std::string,std::allocator<std::string > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::difference_type arg2 ;
  std::vector<std::string >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorS___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS___delslice__" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorS___delslice__" "', argument " "2"" of type '" "std::vector<std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<std::string >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorS___delslice__" "', argument " "3"" of type '" "std::vector<std::string >::difference_type""'");
  } 
  arg3 = static_cast< std::vector<std::string >::difference_type >(val3);
  try {
    std_vector_Sl_std_string_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS___delitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorS___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS___delitem__" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorS___delitem__" "', argument " "2"" of type '" "std::vector<std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<std::string >::difference_type >(val2);
  try {
    std_vector_Sl_std_string_Sg____delitem__(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::difference_type arg2 ;
  std::vector<std::string >::value_type *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorS___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS___getitem__" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorS___getitem__" "', argument " "2"" of type '" "std::vector<std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<std::string >::difference_type >(val2);
  try {
    {
      std::vector<std::string >::value_type const &_result_ref = std_vector_Sl_std_string_Sg____getitem__((std::vector<std::string > const *)arg1,arg2);
      result = (std::vector<std::string >::value_type *) &_result_ref;
    }
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::difference_type arg2 ;
  std::vector<std::string >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorS___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS___setitem__" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorS___setitem__" "', argument " "2"" of type '" "std::vector<std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<std::string >::difference_type >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorS___setitem__" "', argument " "3"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorS___setitem__" "', argument " "3"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_std_string_Sg____setitem__(arg1,arg2,(std::string const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorS_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_append" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorS_append" "', argument " "2"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorS_append" "', argument " "2"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  std_vector_Sl_std_string_Sg__append(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorS__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_vectorS")) SWIG_fail;
  result = (std::vector<std::string > *)new std::vector<std::string >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorS__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = 0 ;
  std::vector<std::string > *result = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_vectorS",&obj0)) SWIG_fail;
  {
    std::vector<std::string,std::allocator<std::string > > *ptr = (std::vector<std::string,std::allocator<std::string > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vectorS" "', argument " "1"" of type '" "std::vector<std::string > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorS" "', argument " "1"" of type '" "std::vector<std::string > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector<std::string > *)new std::vector<std::string >((std::vector<std::string > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_empty" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = (bool)((std::vector<std::string > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::size_type result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_size" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = ((std::vector<std::string > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_clear" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorS_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_swap" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorS_swap" "', argument " "2"" of type '" "std::vector<std::string > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorS_swap" "', argument " "2"" of type '" "std::vector<std::string > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector<std::string > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  SwigValueWrapper<std::allocator<std::string > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_get_allocator" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = ((std::vector<std::string > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector<std::string >::allocator_type(static_cast< const std::vector<std::string >::allocator_type& >(result))), SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t__allocator_type, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_begin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_begin" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<std::string >::iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_begin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::const_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_begin" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = ((std::vector<std::string > const *)arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<std::string >::const_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_begin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorS_begin__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorS_begin__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorS_begin'.\n  Possible C/C++ prototypes are:\n    begin()\n    begin()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_end__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_end" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<std::string >::iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_end__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::const_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_end" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = ((std::vector<std::string > const *)arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<std::string >::const_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_end(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorS_end__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorS_end__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorS_end'.\n  Possible C/C++ prototypes are:\n    end()\n    end()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_rbegin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::reverse_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_rbegin" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<std::string >::reverse_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_rbegin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::const_reverse_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_rbegin" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = ((std::vector<std::string > const *)arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<std::string >::const_reverse_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_rbegin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorS_rbegin__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorS_rbegin__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorS_rbegin'.\n  Possible C/C++ prototypes are:\n    rbegin()\n    rbegin()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_rend__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::reverse_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_rend" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<std::string >::reverse_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_rend__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::const_reverse_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_rend" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = ((std::vector<std::string > const *)arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<std::string >::const_reverse_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_rend(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorS_rend__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorS_rend__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorS_rend'.\n  Possible C/C++ prototypes are:\n    rend()\n    rend()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorS__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string >::size_type arg1 ;
  std::vector<std::string > *result = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_vectorS",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorS" "', argument " "1"" of type '" "std::vector<std::string >::size_type""'");
  } 
  arg1 = static_cast< std::vector<std::string >::size_type >(val1);
  result = (std::vector<std::string > *)new std::vector<std::string >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_pop_back" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorS_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_resize" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorS_resize" "', argument " "2"" of type '" "std::vector<std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector<std::string >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::iterator arg2 ;
  std::vector<std::string >::iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::PySwigIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorS_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_erase" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::PySwigIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorS_erase" "', argument " "2"" of type '" "std::vector<std::string >::iterator""'");
  } else {
    swig::PySwigIterator_T<std::vector<std::string >::iterator > *iter_t = dynamic_cast<swig::PySwigIterator_T<std::vector<std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorS_erase" "', argument " "2"" of type '" "std::vector<std::string >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<std::string >::iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::iterator arg2 ;
  std::vector<std::string >::iterator arg3 ;
  std::vector<std::string >::iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::PySwigIterator *iter2 = 0 ;
  int res2 ;
  swig::PySwigIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorS_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_erase" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::PySwigIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorS_erase" "', argument " "2"" of type '" "std::vector<std::string >::iterator""'");
  } else {
    swig::PySwigIterator_T<std::vector<std::string >::iterator > *iter_t = dynamic_cast<swig::PySwigIterator_T<std::vector<std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorS_erase" "', argument " "2"" of type '" "std::vector<std::string >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::PySwigIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorS_erase" "', argument " "3"" of type '" "std::vector<std::string >::iterator""'");
  } else {
    swig::PySwigIterator_T<std::vector<std::string >::iterator > *iter_t = dynamic_cast<swig::PySwigIterator_T<std::vector<std::string >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorS_erase" "', argument " "3"" of type '" "std::vector<std::string >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<std::string >::iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::PySwigIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::PySwigIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::PySwigIterator_T<std::vector<std::string >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_vectorS_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::PySwigIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::PySwigIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::PySwigIterator_T<std::vector<std::string >::iterator > *>(iter) != 0));
      if (_v) {
        swig::PySwigIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::PySwigIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::PySwigIterator_T<std::vector<std::string >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_vectorS_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorS_erase'.\n  Possible C/C++ prototypes are:\n    erase(std::vector<std::string >::iterator)\n    erase(std::vector<std::string >::iterator,std::vector<std::string >::iterator)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorS__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string >::size_type arg1 ;
  std::vector<std::string >::value_type *arg2 = 0 ;
  std::vector<std::string > *result = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_vectorS",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorS" "', argument " "1"" of type '" "std::vector<std::string >::size_type""'");
  } 
  arg1 = static_cast< std::vector<std::string >::size_type >(val1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vectorS" "', argument " "2"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorS" "', argument " "2"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (std::vector<std::string > *)new std::vector<std::string >(arg1,(std::vector<std::string >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorS(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_vectorS__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_vectorS__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_vectorS__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_vectorS__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_vectorS'.\n  Possible C/C++ prototypes are:\n    std::vector<(std::string)>()\n    std::vector<(std::string)>(std::vector<std::string > const &)\n    std::vector<(std::string)>(std::vector<std::string >::size_type)\n    std::vector<(std::string)>(std::vector<std::string >::size_type,std::vector<std::string >::value_type const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorS_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_push_back" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorS_push_back" "', argument " "2"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorS_push_back" "', argument " "2"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->push_back((std::vector<std::string >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::value_type *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_front" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  {
    std::vector<std::string >::value_type const &_result_ref = ((std::vector<std::string > const *)arg1)->front();
    result = (std::vector<std::string >::value_type *) &_result_ref;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::value_type *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_back" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  {
    std::vector<std::string >::value_type const &_result_ref = ((std::vector<std::string > const *)arg1)->back();
    result = (std::vector<std::string >::value_type *) &_result_ref;
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::size_type arg2 ;
  std::vector<std::string >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorS_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_assign" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorS_assign" "', argument " "2"" of type '" "std::vector<std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector<std::string >::size_type >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorS_assign" "', argument " "3"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorS_assign" "', argument " "3"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->assign(arg2,(std::vector<std::string >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::size_type arg2 ;
  std::vector<std::string >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorS_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_resize" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorS_resize" "', argument " "2"" of type '" "std::vector<std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector<std::string >::size_type >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorS_resize" "', argument " "3"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorS_resize" "', argument " "3"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->resize(arg2,(std::vector<std::string >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorS_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorS_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorS_resize'.\n  Possible C/C++ prototypes are:\n    resize(std::vector<std::string >::size_type)\n    resize(std::vector<std::string >::size_type,std::vector<std::string >::value_type const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::iterator arg2 ;
  std::vector<std::string >::value_type *arg3 = 0 ;
  std::vector<std::string >::iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::PySwigIterator *iter2 = 0 ;
  int res2 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorS_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_insert" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::PySwigIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorS_insert" "', argument " "2"" of type '" "std::vector<std::string >::iterator""'");
  } else {
    swig::PySwigIterator_T<std::vector<std::string >::iterator > *iter_t = dynamic_cast<swig::PySwigIterator_T<std::vector<std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorS_insert" "', argument " "2"" of type '" "std::vector<std::string >::iterator""'");
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorS_insert" "', argument " "3"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorS_insert" "', argument " "3"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  result = (arg1)->insert(arg2,(std::vector<std::string >::value_type const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<std::string >::iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::iterator arg2 ;
  std::vector<std::string >::size_type arg3 ;
  std::vector<std::string >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::PySwigIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:vectorS_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_insert" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::PySwigIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorS_insert" "', argument " "2"" of type '" "std::vector<std::string >::iterator""'");
  } else {
    swig::PySwigIterator_T<std::vector<std::string >::iterator > *iter_t = dynamic_cast<swig::PySwigIterator_T<std::vector<std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorS_insert" "', argument " "2"" of type '" "std::vector<std::string >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorS_insert" "', argument " "3"" of type '" "std::vector<std::string >::size_type""'");
  } 
  arg3 = static_cast< std::vector<std::string >::size_type >(val3);
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorS_insert" "', argument " "4"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorS_insert" "', argument " "4"" of type '" "std::vector<std::string >::value_type const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->insert(arg2,arg3,(std::vector<std::string >::value_type const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::PySwigIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::PySwigIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::PySwigIterator_T<std::vector<std::string >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_vectorS_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator<std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::PySwigIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::PySwigIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::PySwigIterator_T<std::vector<std::string >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_vectorS_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorS_insert'.\n  Possible C/C++ prototypes are:\n    insert(std::vector<std::string >::iterator,std::vector<std::string >::value_type const &)\n    insert(std::vector<std::string >::iterator,std::vector<std::string >::size_type,std::vector<std::string >::value_type const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorS_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_reserve" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorS_reserve" "', argument " "2"" of type '" "std::vector<std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector<std::string >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorS_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  std::vector<std::string >::size_type result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorS_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorS_capacity" "', argument " "1"" of type '" "std::vector<std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  result = ((std::vector<std::string > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_vectorS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<std::string > *arg1 = (std::vector<std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_vectorS",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorS" "', argument " "1"" of type '" "std::vector<std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *vectorS_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorTstd__string_std__allocatorTstd__string_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vectorI_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  swig::PySwigIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_iterator" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = (swig::PySwigIterator *)std_vector_Sl_int_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__PySwigIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI___nonzero__" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = (bool)std_vector_Sl_int_Sg____nonzero__((std::vector<int > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::size_type result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI___len__" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = std_vector_Sl_int_Sg____len__((std::vector<int > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::value_type result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_pop" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  try {
    result = (std::vector<int >::value_type)std_vector_Sl_int_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::difference_type arg2 ;
  std::vector<int >::difference_type arg3 ;
  std::vector<int,std::allocator<int > > *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorI___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI___getslice__" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI___getslice__" "', argument " "2"" of type '" "std::vector<int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorI___getslice__" "', argument " "3"" of type '" "std::vector<int >::difference_type""'");
  } 
  arg3 = static_cast< std::vector<int >::difference_type >(val3);
  try {
    result = (std::vector<int,std::allocator<int > > *)std_vector_Sl_int_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI___setslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::difference_type arg2 ;
  std::vector<int >::difference_type arg3 ;
  std::vector<int,std::allocator<int > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:vectorI___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI___setslice__" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI___setslice__" "', argument " "2"" of type '" "std::vector<int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorI___setslice__" "', argument " "3"" of type '" "std::vector<int >::difference_type""'");
  } 
  arg3 = static_cast< std::vector<int >::difference_type >(val3);
  {
    std::vector<int,std::allocator<int > > *ptr = (std::vector<int,std::allocator<int > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vectorI___setslice__" "', argument " "4"" of type '" "std::vector<int,std::allocator<int > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorI___setslice__" "', argument " "4"" of type '" "std::vector<int,std::allocator<int > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_int_Sg____setslice__(arg1,arg2,arg3,(std::vector<int,std::allocator<int > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::difference_type arg2 ;
  std::vector<int >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorI___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI___delslice__" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI___delslice__" "', argument " "2"" of type '" "std::vector<int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorI___delslice__" "', argument " "3"" of type '" "std::vector<int >::difference_type""'");
  } 
  arg3 = static_cast< std::vector<int >::difference_type >(val3);
  try {
    std_vector_Sl_int_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI___delitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorI___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI___delitem__" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI___delitem__" "', argument " "2"" of type '" "std::vector<int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<int >::difference_type >(val2);
  try {
    std_vector_Sl_int_Sg____delitem__(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::difference_type arg2 ;
  std::vector<int >::value_type *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorI___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI___getitem__" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI___getitem__" "', argument " "2"" of type '" "std::vector<int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<int >::difference_type >(val2);
  try {
    {
      std::vector<int >::value_type const &_result_ref = std_vector_Sl_int_Sg____getitem__((std::vector<int > const *)arg1,arg2);
      result = (std::vector<int >::value_type *) &_result_ref;
    }
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_From_int(static_cast< int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::difference_type arg2 ;
  std::vector<int >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector<int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorI___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI___setitem__" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI___setitem__" "', argument " "2"" of type '" "std::vector<int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector<int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorI___setitem__" "', argument " "3"" of type '" "std::vector<int >::value_type""'");
  } 
  temp3 = static_cast< std::vector<int >::value_type >(val3);
  arg3 = &temp3;
  try {
    std_vector_Sl_int_Sg____setitem__(arg1,arg2,(int const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector<int >::value_type temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorI_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_append" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI_append" "', argument " "2"" of type '" "std::vector<int >::value_type""'");
  } 
  temp2 = static_cast< std::vector<int >::value_type >(val2);
  arg2 = &temp2;
  std_vector_Sl_int_Sg__append(arg1,(int const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorI__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_vectorI")) SWIG_fail;
  result = (std::vector<int > *)new std::vector<int >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorI__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = 0 ;
  std::vector<int > *result = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_vectorI",&obj0)) SWIG_fail;
  {
    std::vector<int,std::allocator<int > > *ptr = (std::vector<int,std::allocator<int > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vectorI" "', argument " "1"" of type '" "std::vector<int > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorI" "', argument " "1"" of type '" "std::vector<int > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector<int > *)new std::vector<int >((std::vector<int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_empty" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = (bool)((std::vector<int > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::size_type result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_size" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = ((std::vector<int > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_clear" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorI_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_swap" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorI_swap" "', argument " "2"" of type '" "std::vector<int > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorI_swap" "', argument " "2"" of type '" "std::vector<int > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector<int > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  SwigValueWrapper<std::allocator<int > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_get_allocator" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = ((std::vector<int > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector<int >::allocator_type(static_cast< const std::vector<int >::allocator_type& >(result))), SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t__allocator_type, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_begin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_begin" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<int >::iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_begin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::const_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_begin" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = ((std::vector<int > const *)arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<int >::const_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_begin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorI_begin__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorI_begin__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorI_begin'.\n  Possible C/C++ prototypes are:\n    begin()\n    begin()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_end__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_end" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<int >::iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_end__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::const_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_end" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = ((std::vector<int > const *)arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<int >::const_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_end(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorI_end__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorI_end__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorI_end'.\n  Possible C/C++ prototypes are:\n    end()\n    end()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_rbegin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::reverse_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_rbegin" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<int >::reverse_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_rbegin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::const_reverse_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_rbegin" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = ((std::vector<int > const *)arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<int >::const_reverse_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_rbegin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorI_rbegin__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorI_rbegin__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorI_rbegin'.\n  Possible C/C++ prototypes are:\n    rbegin()\n    rbegin()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_rend__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::reverse_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_rend" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<int >::reverse_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_rend__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::const_reverse_iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_rend" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = ((std::vector<int > const *)arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<int >::const_reverse_iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_rend(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorI_rend__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_vectorI_rend__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorI_rend'.\n  Possible C/C++ prototypes are:\n    rend()\n    rend()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorI__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int >::size_type arg1 ;
  std::vector<int > *result = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_vectorI",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorI" "', argument " "1"" of type '" "std::vector<int >::size_type""'");
  } 
  arg1 = static_cast< std::vector<int >::size_type >(val1);
  result = (std::vector<int > *)new std::vector<int >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_pop_back" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorI_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_resize" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI_resize" "', argument " "2"" of type '" "std::vector<int >::size_type""'");
  } 
  arg2 = static_cast< std::vector<int >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::iterator arg2 ;
  std::vector<int >::iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::PySwigIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorI_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_erase" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::PySwigIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorI_erase" "', argument " "2"" of type '" "std::vector<int >::iterator""'");
  } else {
    swig::PySwigIterator_T<std::vector<int >::iterator > *iter_t = dynamic_cast<swig::PySwigIterator_T<std::vector<int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorI_erase" "', argument " "2"" of type '" "std::vector<int >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<int >::iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::iterator arg2 ;
  std::vector<int >::iterator arg3 ;
  std::vector<int >::iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::PySwigIterator *iter2 = 0 ;
  int res2 ;
  swig::PySwigIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorI_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_erase" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::PySwigIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorI_erase" "', argument " "2"" of type '" "std::vector<int >::iterator""'");
  } else {
    swig::PySwigIterator_T<std::vector<int >::iterator > *iter_t = dynamic_cast<swig::PySwigIterator_T<std::vector<int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorI_erase" "', argument " "2"" of type '" "std::vector<int >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::PySwigIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorI_erase" "', argument " "3"" of type '" "std::vector<int >::iterator""'");
  } else {
    swig::PySwigIterator_T<std::vector<int >::iterator > *iter_t = dynamic_cast<swig::PySwigIterator_T<std::vector<int >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorI_erase" "', argument " "3"" of type '" "std::vector<int >::iterator""'");
    }
  }
  result = (arg1)->erase(arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<int >::iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::PySwigIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::PySwigIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::PySwigIterator_T<std::vector<int >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_vectorI_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::PySwigIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::PySwigIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::PySwigIterator_T<std::vector<int >::iterator > *>(iter) != 0));
      if (_v) {
        swig::PySwigIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::PySwigIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::PySwigIterator_T<std::vector<int >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_vectorI_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorI_erase'.\n  Possible C/C++ prototypes are:\n    erase(std::vector<int >::iterator)\n    erase(std::vector<int >::iterator,std::vector<int >::iterator)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorI__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int >::size_type arg1 ;
  std::vector<int >::value_type *arg2 = 0 ;
  std::vector<int > *result = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector<int >::value_type temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_vectorI",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorI" "', argument " "1"" of type '" "std::vector<int >::size_type""'");
  } 
  arg1 = static_cast< std::vector<int >::size_type >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vectorI" "', argument " "2"" of type '" "std::vector<int >::value_type""'");
  } 
  temp2 = static_cast< std::vector<int >::value_type >(val2);
  arg2 = &temp2;
  result = (std::vector<int > *)new std::vector<int >(arg1,(std::vector<int >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_vectorI(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_vectorI__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_vectorI__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_vectorI__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_vectorI__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_vectorI'.\n  Possible C/C++ prototypes are:\n    std::vector<(int)>()\n    std::vector<(int)>(std::vector<int > const &)\n    std::vector<(int)>(std::vector<int >::size_type)\n    std::vector<(int)>(std::vector<int >::size_type,std::vector<int >::value_type const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector<int >::value_type temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorI_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_push_back" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI_push_back" "', argument " "2"" of type '" "std::vector<int >::value_type""'");
  } 
  temp2 = static_cast< std::vector<int >::value_type >(val2);
  arg2 = &temp2;
  (arg1)->push_back((std::vector<int >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::value_type *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_front" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  {
    std::vector<int >::value_type const &_result_ref = ((std::vector<int > const *)arg1)->front();
    result = (std::vector<int >::value_type *) &_result_ref;
  }
  resultobj = SWIG_From_int(static_cast< int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::value_type *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_back" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  {
    std::vector<int >::value_type const &_result_ref = ((std::vector<int > const *)arg1)->back();
    result = (std::vector<int >::value_type *) &_result_ref;
  }
  resultobj = SWIG_From_int(static_cast< int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::size_type arg2 ;
  std::vector<int >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector<int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorI_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_assign" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI_assign" "', argument " "2"" of type '" "std::vector<int >::size_type""'");
  } 
  arg2 = static_cast< std::vector<int >::size_type >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorI_assign" "', argument " "3"" of type '" "std::vector<int >::value_type""'");
  } 
  temp3 = static_cast< std::vector<int >::value_type >(val3);
  arg3 = &temp3;
  (arg1)->assign(arg2,(std::vector<int >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::size_type arg2 ;
  std::vector<int >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector<int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorI_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_resize" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI_resize" "', argument " "2"" of type '" "std::vector<int >::size_type""'");
  } 
  arg2 = static_cast< std::vector<int >::size_type >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorI_resize" "', argument " "3"" of type '" "std::vector<int >::value_type""'");
  } 
  temp3 = static_cast< std::vector<int >::value_type >(val3);
  arg3 = &temp3;
  (arg1)->resize(arg2,(std::vector<int >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_vectorI_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorI_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorI_resize'.\n  Possible C/C++ prototypes are:\n    resize(std::vector<int >::size_type)\n    resize(std::vector<int >::size_type,std::vector<int >::value_type const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::iterator arg2 ;
  std::vector<int >::value_type *arg3 = 0 ;
  std::vector<int >::iterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::PySwigIterator *iter2 = 0 ;
  int res2 ;
  std::vector<int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:vectorI_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_insert" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::PySwigIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorI_insert" "', argument " "2"" of type '" "std::vector<int >::iterator""'");
  } else {
    swig::PySwigIterator_T<std::vector<int >::iterator > *iter_t = dynamic_cast<swig::PySwigIterator_T<std::vector<int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorI_insert" "', argument " "2"" of type '" "std::vector<int >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorI_insert" "', argument " "3"" of type '" "std::vector<int >::value_type""'");
  } 
  temp3 = static_cast< std::vector<int >::value_type >(val3);
  arg3 = &temp3;
  result = (arg1)->insert(arg2,(std::vector<int >::value_type const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector<int >::iterator & >(result)),
    swig::PySwigIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::iterator arg2 ;
  std::vector<int >::size_type arg3 ;
  std::vector<int >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::PySwigIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  std::vector<int >::value_type temp4 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:vectorI_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_insert" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::PySwigIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorI_insert" "', argument " "2"" of type '" "std::vector<int >::iterator""'");
  } else {
    swig::PySwigIterator_T<std::vector<int >::iterator > *iter_t = dynamic_cast<swig::PySwigIterator_T<std::vector<int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "vectorI_insert" "', argument " "2"" of type '" "std::vector<int >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorI_insert" "', argument " "3"" of type '" "std::vector<int >::size_type""'");
  } 
  arg3 = static_cast< std::vector<int >::size_type >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vectorI_insert" "', argument " "4"" of type '" "std::vector<int >::value_type""'");
  } 
  temp4 = static_cast< std::vector<int >::value_type >(val4);
  arg4 = &temp4;
  (arg1)->insert(arg2,arg3,(std::vector<int >::value_type const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::PySwigIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::PySwigIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::PySwigIterator_T<std::vector<int >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_vectorI_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator<int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::PySwigIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::PySwigIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::PySwigIterator_T<std::vector<int >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_vectorI_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'vectorI_insert'.\n  Possible C/C++ prototypes are:\n    insert(std::vector<int >::iterator,std::vector<int >::value_type const &)\n    insert(std::vector<int >::iterator,std::vector<int >::size_type,std::vector<int >::value_type const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:vectorI_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_reserve" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorI_reserve" "', argument " "2"" of type '" "std::vector<int >::size_type""'");
  } 
  arg2 = static_cast< std::vector<int >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vectorI_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  std::vector<int >::size_type result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:vectorI_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorI_capacity" "', argument " "1"" of type '" "std::vector<int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  result = ((std::vector<int > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_vectorI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector<int > *arg1 = (std::vector<int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_vectorI",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorI" "', argument " "1"" of type '" "std::vector<int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector<int > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *vectorI_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorTint_std__allocatorTint_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GetAvatarPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  long arg1 ;
  Piavca::Avatar *result = 0 ;
  long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GetAvatarPointer",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GetAvatarPointer" "', argument " "1"" of type '" "long""'");
  } 
  arg1 = static_cast< long >(val1);
  {
    try {
      result = (Piavca::Avatar *)GetAvatarPointer(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GetPiavcaCorePointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  long arg1 ;
  Piavca::Core *result = 0 ;
  long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GetPiavcaCorePointer",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GetPiavcaCorePointer" "', argument " "1"" of type '" "long""'");
  } 
  arg1 = static_cast< long >(val1);
  {
    try {
      result = (Piavca::Core *)GetPiavcaCorePointer(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Core, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vec__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Vec")) SWIG_fail;
  {
    try {
      result = (Piavca::Vec *)new Piavca::Vec(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vec__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  Piavca::Vec *result = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_Vec",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Vec" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Vec" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Vec" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (Piavca::Vec *)new Piavca::Vec(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vec__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Vec",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Vec" "', argument " "1"" of type '" "float const [3]""'"); 
  } 
  arg1 = reinterpret_cast< float * >(argp1);
  {
    try {
      result = (Piavca::Vec *)new Piavca::Vec((float const (*))arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vec__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = 0 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Vec",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Vec" "', argument " "1"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Vec" "', argument " "1"" of type '" "Piavca::Vec const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      result = (Piavca::Vec *)new Piavca::Vec((Piavca::Vec const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Vec(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Vec__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Vec__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Vec__SWIG_3(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_Vec__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Vec'.\n  Possible C/C++ prototypes are:\n    Piavca::Vec()\n    Piavca::Vec(float,float,float)\n    Piavca::Vec(float const [3])\n    Piavca::Vec(Piavca::Vec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Vec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Vec",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Vec" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_X__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec_X",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_X" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      {
        float &_result_ref = (arg1)->X();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyFloat_FromDouble(*result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_Y__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec_Y",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_Y" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      {
        float &_result_ref = (arg1)->Y();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyFloat_FromDouble(*result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_Z__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec_Z",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_Z" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      {
        float &_result_ref = (arg1)->Z();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyFloat_FromDouble(*result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_X__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec_X",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_X" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      {
        float const &_result_ref = ((Piavca::Vec const *)arg1)->X();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_X(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vec_X__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vec_X__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vec_X'.\n  Possible C/C++ prototypes are:\n    X()\n    X()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_Y__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec_Y",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_Y" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      {
        float const &_result_ref = ((Piavca::Vec const *)arg1)->Y();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_Y(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vec_Y__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vec_Y__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vec_Y'.\n  Possible C/C++ prototypes are:\n    Y()\n    Y()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_Z__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec_Z",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_Z" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      {
        float const &_result_ref = ((Piavca::Vec const *)arg1)->Z();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_Z(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vec_Z__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Vec_Z__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vec_Z'.\n  Possible C/C++ prototypes are:\n    Z()\n    Z()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_XAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec result;
  
  if (!PyArg_ParseTuple(args,(char *)":Vec_XAxis")) SWIG_fail;
  {
    try {
      result = Piavca::Vec::XAxis(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_YAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec result;
  
  if (!PyArg_ParseTuple(args,(char *)":Vec_YAxis")) SWIG_fail;
  {
    try {
      result = Piavca::Vec::YAxis(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_ZAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec result;
  
  if (!PyArg_ParseTuple(args,(char *)":Vec_ZAxis")) SWIG_fail;
  {
    try {
      result = Piavca::Vec::ZAxis(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_mag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec_mag",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_mag" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      result = (float)((Piavca::Vec const *)arg1)->mag(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___add__" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec___add__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec___add__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->operator +((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___iadd__" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec___iadd__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec___iadd__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      {
        Piavca::Vec const &_result_ref = (arg1)->operator +=((Piavca::Vec const &)*arg2);
        result = (Piavca::Vec *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float arg2 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___add__" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec___add__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->operator +(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Vec___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vec___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Vec___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float arg2 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___iadd__" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec___iadd__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      {
        Piavca::Vec const &_result_ref = (arg1)->operator +=(arg2);
        result = (Piavca::Vec *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Vec___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vec___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vec___iadd__'.\n  Possible C/C++ prototypes are:\n    operator +=(Piavca::Vec const &)\n    operator +=(float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___sub__" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec___sub__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec___sub__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->operator -((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___isub__" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec___isub__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec___isub__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      {
        Piavca::Vec const &_result_ref = (arg1)->operator -=((Piavca::Vec const &)*arg2);
        result = (Piavca::Vec *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float arg2 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___sub__" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec___sub__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->operator -(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Vec___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vec___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Vec___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float arg2 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___isub__" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec___isub__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      {
        Piavca::Vec const &_result_ref = (arg1)->operator -=(arg2);
        result = (Piavca::Vec *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Vec___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vec___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vec___isub__'.\n  Possible C/C++ prototypes are:\n    operator -=(Piavca::Vec const &)\n    operator -=(float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___neg__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec___neg__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___neg__" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->operator -(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___mul__" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec___mul__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec___mul__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->operator *((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___imul__" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec___imul__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec___imul__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      {
        Piavca::Vec const &_result_ref = (arg1)->operator *=((Piavca::Vec const &)*arg2);
        result = (Piavca::Vec *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float arg2 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___mul__" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec___mul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->operator *(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Vec___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vec___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Vec___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float arg2 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___imul__" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec___imul__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      {
        Piavca::Vec const &_result_ref = (arg1)->operator *=(arg2);
        result = (Piavca::Vec *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Vec___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vec___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vec___imul__'.\n  Possible C/C++ prototypes are:\n    operator *=(Piavca::Vec const &)\n    operator *=(float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___div____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___div__" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec___div__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec___div__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->operator /((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___idiv____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___idiv__" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec___idiv__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec___idiv__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      {
        Piavca::Vec const &_result_ref = (arg1)->operator /=((Piavca::Vec const &)*arg2);
        result = (Piavca::Vec *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___div____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float arg2 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___div__" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec___div__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->operator /(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___div__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Vec___div____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vec___div____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Vec___idiv____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  float arg2 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___idiv__" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec___idiv__" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      {
        Piavca::Vec const &_result_ref = (arg1)->operator /=(arg2);
        result = (Piavca::Vec *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___idiv__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Vec___idiv____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Vec___idiv____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Vec___idiv__'.\n  Possible C/C++ prototypes are:\n    operator /=(Piavca::Vec const &)\n    operator /=(float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___eq__" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec___eq__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec___eq__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      result = (bool)((Piavca::Vec const *)arg1)->operator ==((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___ne__" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec___ne__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec___ne__" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      result = (bool)((Piavca::Vec const *)arg1)->operator !=((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_inverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec_inverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_inverse" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->inverse(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_invert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec_invert",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_invert" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      (arg1)->invert(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec_dot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_dot" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec_dot" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec_dot" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      result = (float)((Piavca::Vec const *)arg1)->dot((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_cross(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec_cross",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_cross" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec_cross" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec_cross" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->cross((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_crossinplace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec_crossinplace",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_crossinplace" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Vec_crossinplace" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Vec_crossinplace" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      {
        Piavca::Vec const &_result_ref = (arg1)->crossinplace((Piavca::Vec const &)*arg2);
        result = (Piavca::Vec *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_normalized(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec_normalized",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_normalized" "', argument " "1"" of type '" "Piavca::Vec const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      result = ((Piavca::Vec const *)arg1)->normalized(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec_normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec_normalize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec_normalize" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      (arg1)->normalize(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  PyObject *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___getitem__" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  arg2 = obj1;
  {
    try {
      result = (PyObject *)Piavca_Vec___getitem__(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  PyObject *arg3 = (PyObject *) 0 ;
  PyObject *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Vec___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___setitem__" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  arg2 = obj1;
  arg3 = obj2;
  {
    try {
      result = (PyObject *)Piavca_Vec___setitem__(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
  PyObject *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec___repr__" "', argument " "1"" of type '" "Piavca::Vec *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      result = (PyObject *)Piavca_Vec___repr__(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Vec_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__Vec, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_checkNaN__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:checkNaN",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__Vec,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "checkNaN" "', argument " "1"" of type '" "Piavca::Vec &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "checkNaN" "', argument " "1"" of type '" "Piavca::Vec &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      result = (bool)Piavca::checkNaN(*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Quat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Quat")) SWIG_fail;
  {
    try {
      result = (Piavca::Quat *)new Piavca::Quat(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Quat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  Piavca::Quat *result = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_Quat",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Quat" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Quat" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Quat" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Quat" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (Piavca::Quat *)new Piavca::Quat(arg1,arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Quat__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 ;
  Piavca::Quat *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Quat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Quat" "', argument " "1"" of type '" "float const [4]""'"); 
  } 
  arg1 = reinterpret_cast< float * >(argp1);
  {
    try {
      result = (Piavca::Quat *)new Piavca::Quat((float const (*))arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Quat__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Quat *result = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Quat",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Quat" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Quat" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Quat" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      result = (Piavca::Quat *)new Piavca::Quat(arg1,(Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Quat__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = 0 ;
  Piavca::Quat *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Quat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Quat" "', argument " "1"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Quat" "', argument " "1"" of type '" "Piavca::Quat const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      result = (Piavca::Quat *)new Piavca::Quat((Piavca::Quat const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Quat(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Quat__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Quat__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__Quat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Quat__SWIG_4(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Quat__SWIG_3(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_Quat__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Quat'.\n  Possible C/C++ prototypes are:\n    Piavca::Quat()\n    Piavca::Quat(float,float,float,float)\n    Piavca::Quat(float const [4])\n    Piavca::Quat(float,Piavca::Vec const &)\n    Piavca::Quat(Piavca::Quat const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Quat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Quat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Quat" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_S__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_S",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_S" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      {
        float const &_result_ref = ((Piavca::Quat const *)arg1)->S();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_I__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_I",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_I" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      {
        float const &_result_ref = ((Piavca::Quat const *)arg1)->I();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_J__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_J",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_J" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      {
        float const &_result_ref = ((Piavca::Quat const *)arg1)->J();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_K__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_K",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_K" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      {
        float const &_result_ref = ((Piavca::Quat const *)arg1)->K();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_S__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_S",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_S" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      {
        float &_result_ref = (arg1)->S();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyFloat_FromDouble(*result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_S(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Quat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Quat_S__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Quat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Quat_S__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Quat_S'.\n  Possible C/C++ prototypes are:\n    S()\n    S()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_I__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_I",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_I" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      {
        float &_result_ref = (arg1)->I();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyFloat_FromDouble(*result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_I(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Quat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Quat_I__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Quat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Quat_I__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Quat_I'.\n  Possible C/C++ prototypes are:\n    I()\n    I()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_J__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_J",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_J" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      {
        float &_result_ref = (arg1)->J();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyFloat_FromDouble(*result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_J(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Quat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Quat_J__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Quat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Quat_J__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Quat_J'.\n  Possible C/C++ prototypes are:\n    J()\n    J()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_K__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_K",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_K" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      {
        float &_result_ref = (arg1)->K();
        result = (float *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyFloat_FromDouble(*result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_K(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Quat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Quat_K__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Quat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Quat_K__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Quat_K'.\n  Possible C/C++ prototypes are:\n    K()\n    K()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_setAngleAxis__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float arg2 ;
  Piavca::Vec *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Quat_setAngleAxis",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_setAngleAxis" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quat_setAngleAxis" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Quat_setAngleAxis" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_setAngleAxis" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Vec * >(argp3);
  {
    try {
      (arg1)->setAngleAxis(arg2,(Piavca::Vec const &)*arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_setAngleAxis__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:Quat_setAngleAxis",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_setAngleAxis" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quat_setAngleAxis" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Quat_setAngleAxis" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Quat_setAngleAxis" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Quat_setAngleAxis" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      (arg1)->setAngleAxis(arg2,arg3,arg4,arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_setAngleAxis(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Quat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Vec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Quat_setAngleAxis__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Quat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Quat_setAngleAxis__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Quat_setAngleAxis'.\n  Possible C/C++ prototypes are:\n    setAngleAxis(float,Piavca::Vec const &)\n    setAngleAxis(float,float,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_getAngleAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float *arg2 = 0 ;
  Piavca::Vec *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Quat_getAngleAxis",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_getAngleAxis" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat_getAngleAxis" "', argument " "2"" of type '" "float &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_getAngleAxis" "', argument " "2"" of type '" "float &""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Quat_getAngleAxis" "', argument " "3"" of type '" "Piavca::Vec &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_getAngleAxis" "', argument " "3"" of type '" "Piavca::Vec &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Vec * >(argp3);
  {
    try {
      ((Piavca::Quat const *)arg1)->getAngleAxis(*arg2,*arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_getAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_getAngle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_getAngle" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      result = (float)((Piavca::Quat const *)arg1)->getAngle(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_getAxis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_getAxis",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_getAxis" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      result = ((Piavca::Quat const *)arg1)->getAxis(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_getEulerAngles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float *arg2 = 0 ;
  float *arg3 = 0 ;
  float *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Quat_getEulerAngles",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_getEulerAngles" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat_getEulerAngles" "', argument " "2"" of type '" "float &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_getEulerAngles" "', argument " "2"" of type '" "float &""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Quat_getEulerAngles" "', argument " "3"" of type '" "float &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_getEulerAngles" "', argument " "3"" of type '" "float &""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Quat_getEulerAngles" "', argument " "4"" of type '" "float &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_getEulerAngles" "', argument " "4"" of type '" "float &""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  {
    try {
      (arg1)->getEulerAngles(*arg2,*arg3,*arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_Xangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_Xangle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_Xangle" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      result = (float)(arg1)->Xangle(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_Yangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_Yangle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_Yangle" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      result = (float)(arg1)->Yangle(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_Zangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_Zangle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_Zangle" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      result = (float)(arg1)->Zangle(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_pointAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec *arg3 = 0 ;
  Piavca::Quat *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Quat_pointAt",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_pointAt" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat_pointAt" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_pointAt" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Quat_pointAt" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_pointAt" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Vec * >(argp3);
  {
    try {
      {
        Piavca::Quat &_result_ref = (arg1)->pointAt((Piavca::Vec const &)*arg2,(Piavca::Vec const &)*arg3);
        result = (Piavca::Quat *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Quat *arg2 = 0 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Quat___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat___mul__" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat___mul__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat___mul__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Quat * >(argp2);
  {
    try {
      result = ((Piavca::Quat const *)arg1)->operator *((Piavca::Quat const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Quat *arg2 = 0 ;
  Piavca::Quat *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Quat___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat___imul__" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat___imul__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat___imul__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Quat * >(argp2);
  {
    try {
      {
        Piavca::Quat const &_result_ref = (arg1)->operator *=((Piavca::Quat const &)*arg2);
        result = (Piavca::Quat *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat___div__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Quat *arg2 = 0 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Quat___div__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat___div__" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat___div__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat___div__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Quat * >(argp2);
  {
    try {
      result = ((Piavca::Quat const *)arg1)->operator /((Piavca::Quat const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat___idiv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Quat *arg2 = 0 ;
  Piavca::Quat *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Quat___idiv__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat___idiv__" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat___idiv__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat___idiv__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Quat * >(argp2);
  {
    try {
      {
        Piavca::Quat const &_result_ref = (arg1)->operator /=((Piavca::Quat const &)*arg2);
        result = (Piavca::Quat *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Quat *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Quat___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat___eq__" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat___eq__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat___eq__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Quat * >(argp2);
  {
    try {
      result = (bool)((Piavca::Quat const *)arg1)->operator ==((Piavca::Quat const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Quat *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Quat___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat___ne__" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat___ne__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat___ne__" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Quat * >(argp2);
  {
    try {
      result = (bool)((Piavca::Quat const *)arg1)->operator !=((Piavca::Quat const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_Scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Quat_Scale",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_Scale" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Quat_Scale" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->Scale(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_inverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_inverse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_inverse" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      result = ((Piavca::Quat const *)arg1)->inverse(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_invert(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_invert",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_invert" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      (arg1)->invert(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_normalise(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_normalise",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_normalise" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      (arg1)->normalise(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_transform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Quat_transform",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_transform" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat_transform" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_transform" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      result = ((Piavca::Quat const *)arg1)->transform((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_transformInPlace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Quat_transformInPlace",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_transformInPlace" "', argument " "1"" of type '" "Piavca::Quat const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat_transformInPlace" "', argument " "2"" of type '" "Piavca::Vec &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_transformInPlace" "', argument " "2"" of type '" "Piavca::Vec &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      ((Piavca::Quat const *)arg1)->transformInPlace(*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_spherical_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = 0 ;
  Piavca::Quat *arg2 = 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Quat_spherical_distance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_spherical_distance" "', argument " "1"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_spherical_distance" "', argument " "1"" of type '" "Piavca::Quat const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Quat_spherical_distance" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_spherical_distance" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Quat * >(argp2);
  {
    try {
      result = (float)Piavca::Quat::spherical_distance((Piavca::Quat const &)*arg1,(Piavca::Quat const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_logMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_logMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_logMap" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      result = (arg1)->logMap(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat_expMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Vec *arg1 = 0 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat_expMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat_expMap" "', argument " "1"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Quat_expMap" "', argument " "1"" of type '" "Piavca::Vec const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Vec * >(argp1);
  {
    try {
      result = Piavca::Quat::expMap((Piavca::Vec const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  PyObject *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Quat___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat___getitem__" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  arg2 = obj1;
  {
    try {
      result = (PyObject *)Piavca_Quat___getitem__(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  PyObject *arg3 = (PyObject *) 0 ;
  PyObject *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Quat___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat___setitem__" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  arg2 = obj1;
  arg3 = obj2;
  {
    try {
      result = (PyObject *)Piavca_Quat___setitem__(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Quat___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
  PyObject *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Quat___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Quat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Quat___repr__" "', argument " "1"" of type '" "Piavca::Quat *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  {
    try {
      result = (PyObject *)Piavca_Quat___repr__(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Quat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__Quat, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_slerp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Quat *arg1 = 0 ;
  Piavca::Quat *arg2 = 0 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:slerp",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "slerp" "', argument " "1"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "slerp" "', argument " "1"" of type '" "Piavca::Quat const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Quat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "slerp" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "slerp" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Quat * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "slerp" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = Piavca::slerp((Piavca::Quat const &)*arg1,(Piavca::Quat const &)*arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bound_min_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *arg1 = (Piavca::Bound *) 0 ;
  Piavca::Vec *arg2 = (Piavca::Vec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Bound_min_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Bound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bound_min_set" "', argument " "1"" of type '" "Piavca::Bound *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Bound * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Bound_min_set" "', argument " "2"" of type '" "Piavca::Vec *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  if (arg1) (arg1)->min = *arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bound_min_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *arg1 = (Piavca::Bound *) 0 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Bound_min_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Bound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bound_min_get" "', argument " "1"" of type '" "Piavca::Bound *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Bound * >(argp1);
  result = (Piavca::Vec *)& ((arg1)->min);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bound_max_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *arg1 = (Piavca::Bound *) 0 ;
  Piavca::Vec *arg2 = (Piavca::Vec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Bound_max_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Bound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bound_max_set" "', argument " "1"" of type '" "Piavca::Bound *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Bound * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Bound_max_set" "', argument " "2"" of type '" "Piavca::Vec *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  if (arg1) (arg1)->max = *arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bound_max_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *arg1 = (Piavca::Bound *) 0 ;
  Piavca::Vec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Bound_max_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Bound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bound_max_get" "', argument " "1"" of type '" "Piavca::Bound *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Bound * >(argp1);
  result = (Piavca::Vec *)& ((arg1)->max);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Vec, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Bound__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Bound")) SWIG_fail;
  {
    try {
      result = (Piavca::Bound *)new Piavca::Bound(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Bound, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Bound__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  Piavca::Bound *result = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_Bound",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Bound" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Bound" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Bound" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Bound" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Bound" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Bound" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (Piavca::Bound *)new Piavca::Bound(arg1,arg2,arg3,arg4,arg5,arg6); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Bound, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Bound__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 ;
  float *arg2 ;
  Piavca::Bound *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Bound",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Bound" "', argument " "1"" of type '" "float const [3]""'"); 
  } 
  arg1 = reinterpret_cast< float * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Bound" "', argument " "2"" of type '" "float const [3]""'"); 
  } 
  arg2 = reinterpret_cast< float * >(argp2);
  {
    try {
      result = (Piavca::Bound *)new Piavca::Bound((float const (*))arg1,(float const (*))arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Bound, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Bound__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *arg1 = 0 ;
  Piavca::Bound *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Bound",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__Bound,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Bound" "', argument " "1"" of type '" "Piavca::Bound const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Bound" "', argument " "1"" of type '" "Piavca::Bound const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Bound * >(argp1);
  {
    try {
      result = (Piavca::Bound *)new Piavca::Bound((Piavca::Bound const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Bound, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Bound(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Bound__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__Bound, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Bound__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Bound__SWIG_2(self, args);
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_Bound__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Bound'.\n  Possible C/C++ prototypes are:\n    Piavca::Bound()\n    Piavca::Bound(float,float,float,float,float,float)\n    Piavca::Bound(float const [3],float const [3])\n    Piavca::Bound(Piavca::Bound const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Bound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *arg1 = (Piavca::Bound *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Bound",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Bound, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Bound" "', argument " "1"" of type '" "Piavca::Bound *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Bound * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bound___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *arg1 = (Piavca::Bound *) 0 ;
  Piavca::Bound *arg2 = 0 ;
  Piavca::Bound result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Bound___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Bound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bound___add__" "', argument " "1"" of type '" "Piavca::Bound const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Bound * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Bound,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Bound___add__" "', argument " "2"" of type '" "Piavca::Bound const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Bound___add__" "', argument " "2"" of type '" "Piavca::Bound const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Bound * >(argp2);
  {
    try {
      result = ((Piavca::Bound const *)arg1)->operator +((Piavca::Bound const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Bound(static_cast< const Piavca::Bound& >(result))), SWIGTYPE_p_Piavca__Bound, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bound___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *arg1 = (Piavca::Bound *) 0 ;
  Piavca::Bound *arg2 = 0 ;
  Piavca::Bound *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Bound___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Bound, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bound___iadd__" "', argument " "1"" of type '" "Piavca::Bound *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Bound * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Bound,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Bound___iadd__" "', argument " "2"" of type '" "Piavca::Bound const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Bound___iadd__" "', argument " "2"" of type '" "Piavca::Bound const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Bound * >(argp2);
  {
    try {
      {
        Piavca::Bound const &_result_ref = (arg1)->operator +=((Piavca::Bound const &)*arg2);
        result = (Piavca::Bound *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Bound, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bound___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *arg1 = (Piavca::Bound *) 0 ;
  Piavca::Bound *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Bound___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Bound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bound___eq__" "', argument " "1"" of type '" "Piavca::Bound const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Bound * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Bound,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Bound___eq__" "', argument " "2"" of type '" "Piavca::Bound const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Bound___eq__" "', argument " "2"" of type '" "Piavca::Bound const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Bound * >(argp2);
  {
    try {
      result = (bool)((Piavca::Bound const *)arg1)->operator ==((Piavca::Bound const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bound___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *arg1 = (Piavca::Bound *) 0 ;
  Piavca::Bound *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Bound___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Bound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bound___ne__" "', argument " "1"" of type '" "Piavca::Bound const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Bound * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Bound,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Bound___ne__" "', argument " "2"" of type '" "Piavca::Bound const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Bound___ne__" "', argument " "2"" of type '" "Piavca::Bound const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Bound * >(argp2);
  {
    try {
      result = (bool)((Piavca::Bound const *)arg1)->operator !=((Piavca::Bound const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Bound_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__Bound, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_checkNaN__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Bound *arg1 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:checkNaN",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__Bound,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "checkNaN" "', argument " "1"" of type '" "Piavca::Bound &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "checkNaN" "', argument " "1"" of type '" "Piavca::Bound &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Bound * >(argp1);
  {
    try {
      result = (bool)Piavca::checkNaN(*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_checkNaN(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Vec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_checkNaN__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Bound, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_checkNaN__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'checkNaN'.\n  Possible C/C++ prototypes are:\n    Piavca::checkNaN(Piavca::Vec &)\n    Piavca::checkNaN(Piavca::Bound &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringToWString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::wstring result;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringToWString",&obj0)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringToWString" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringToWString" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = StringToWString((std::string const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new std::wstring(static_cast< const std::wstring& >(result))), SWIGTYPE_p_std__wstring, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_WStringToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::wstring *arg1 = 0 ;
  std::string result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:WStringToString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__wstring,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WStringToString" "', argument " "1"" of type '" "std::wstring const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WStringToString" "', argument " "1"" of type '" "std::wstring const &""'"); 
  }
  arg1 = reinterpret_cast< std::wstring * >(argp1);
  {
    try {
      result = WStringToString((std::wstring const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimeCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::TimeCallback *result = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_TimeCallback",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TimeCallback *)new SwigDirector_TimeCallback(arg1,arg2); 
      } else {
        SWIG_SetErrorMsg(PyExc_RuntimeError,"accessing abstract class or protected constructor"); 
        SWIG_fail;
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TimeCallback, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TimeCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeCallback *arg1 = (Piavca::TimeCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TimeCallback",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeCallback, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TimeCallback" "', argument " "1"" of type '" "Piavca::TimeCallback *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeCallback * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeCallback_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeCallback *arg1 = (Piavca::TimeCallback *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeCallback_getName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeCallback_getName" "', argument " "1"" of type '" "Piavca::TimeCallback *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeCallback * >(argp1);
  {
    try {
      result = (arg1)->getName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeCallback_init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeCallback *arg1 = (Piavca::TimeCallback *) 0 ;
  Piavca::Core *arg2 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TimeCallback_init",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeCallback_init" "', argument " "1"" of type '" "Piavca::TimeCallback *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeCallback * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TimeCallback_init" "', argument " "2"" of type '" "Piavca::Core *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Core * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          Swig::DirectorPureVirtualException::raise("Piavca::TimeCallback::init");
        } else {
          (arg1)->init(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeCallback_timeStep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeCallback *arg1 = (Piavca::TimeCallback *) 0 ;
  Piavca::Core *arg2 = (Piavca::Core *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TimeCallback_timeStep",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeCallback_timeStep" "', argument " "1"" of type '" "Piavca::TimeCallback *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeCallback * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TimeCallback_timeStep" "', argument " "2"" of type '" "Piavca::Core *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Core * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TimeCallback_timeStep" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          Swig::DirectorPureVirtualException::raise("Piavca::TimeCallback::timeStep");
        } else {
          (arg1)->timeStep(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_TimeCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeCallback *arg1 = (Piavca::TimeCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_TimeCallback",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_TimeCallback" "', argument " "1"" of type '" "Piavca::TimeCallback *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeCallback * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TimeCallback_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__TimeCallback, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_AvatarTimeCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::AvatarTimeCallback *result = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_AvatarTimeCallback",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::AvatarTimeCallback *)new SwigDirector_AvatarTimeCallback(arg1,arg2); 
      } else {
        SWIG_SetErrorMsg(PyExc_RuntimeError,"accessing abstract class or protected constructor"); 
        SWIG_fail;
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarTimeCallback, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AvatarTimeCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTimeCallback *arg1 = (Piavca::AvatarTimeCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AvatarTimeCallback",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTimeCallback, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AvatarTimeCallback" "', argument " "1"" of type '" "Piavca::AvatarTimeCallback *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTimeCallback * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarTimeCallback_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTimeCallback *arg1 = (Piavca::AvatarTimeCallback *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarTimeCallback_getName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTimeCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarTimeCallback_getName" "', argument " "1"" of type '" "Piavca::AvatarTimeCallback *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTimeCallback * >(argp1);
  {
    try {
      result = (arg1)->getName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarTimeCallback_init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTimeCallback *arg1 = (Piavca::AvatarTimeCallback *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarTimeCallback_init",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTimeCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarTimeCallback_init" "', argument " "1"" of type '" "Piavca::AvatarTimeCallback *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTimeCallback * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarTimeCallback_init" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          Swig::DirectorPureVirtualException::raise("Piavca::AvatarTimeCallback::init");
        } else {
          (arg1)->init(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarTimeCallback_timeStep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTimeCallback *arg1 = (Piavca::AvatarTimeCallback *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AvatarTimeCallback_timeStep",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTimeCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarTimeCallback_timeStep" "', argument " "1"" of type '" "Piavca::AvatarTimeCallback *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTimeCallback * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarTimeCallback_timeStep" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AvatarTimeCallback_timeStep" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          Swig::DirectorPureVirtualException::raise("Piavca::AvatarTimeCallback::timeStep");
        } else {
          (arg1)->timeStep(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_AvatarTimeCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTimeCallback *arg1 = (Piavca::AvatarTimeCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_AvatarTimeCallback",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTimeCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_AvatarTimeCallback" "', argument " "1"" of type '" "Piavca::AvatarTimeCallback *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTimeCallback * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AvatarTimeCallback_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__AvatarTimeCallback, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Motion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Motion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Motion *)new SwigDirector_Motion(arg1); 
      } else {
        SWIG_SetErrorMsg(PyExc_RuntimeError,"accessing abstract class or protected constructor"); 
        SWIG_fail;
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Motion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = 0 ;
  Piavca::Motion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Motion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Motion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Motion" "', argument " "2"" of type '" "Piavca::Motion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Motion" "', argument " "2"" of type '" "Piavca::Motion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Motion *)new SwigDirector_Motion(arg1,(Piavca::Motion const &)*arg2); 
      } else {
        SWIG_SetErrorMsg(PyExc_RuntimeError,"accessing abstract class or protected constructor"); 
        SWIG_fail;
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Motion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_Motion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Motion__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Motion'.\n  Possible C/C++ prototypes are:\n    Piavca::Motion(PyObject *)\n    Piavca::Motion(PyObject *,Piavca::Motion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Motion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Motion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Motion" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_clone" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          Swig::DirectorPureVirtualException::raise("Piavca::Motion::clone");
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getClassName" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Motion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::Motion *)Piavca::Motion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_create(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_create",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_create" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::Motion::create();
        } else {
          (arg1)->create();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_printInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_printInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_printInfo" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::Motion::printInfo();
        } else {
          (arg1)->printInfo();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_getId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getId" "', argument " "1"" of type '" "Piavca::Motion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (int)((Piavca::Motion const *)arg1)->getId(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion___eq____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion___eq__" "', argument " "1"" of type '" "Piavca::Motion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Motion___eq__" "', argument " "2"" of type '" "Piavca::Motion const *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      result = (bool)((Piavca::Motion const *)arg1)->operator ==((Piavca::Motion const *)arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion___eq____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion___eq__" "', argument " "1"" of type '" "Piavca::Motion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Motion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Motion___eq__" "', argument " "2"" of type '" "Piavca::Motion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Motion___eq__" "', argument " "2"" of type '" "Piavca::Motion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      result = (bool)((Piavca::Motion const *)arg1)->operator ==((Piavca::Motion const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion___eq__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Motion___eq____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Motion___eq____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Motion___ne____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion___ne__" "', argument " "1"" of type '" "Piavca::Motion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Motion___ne__" "', argument " "2"" of type '" "Piavca::Motion const *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      result = (bool)((Piavca::Motion const *)arg1)->operator !=((Piavca::Motion const *)arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion___ne____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion___ne__" "', argument " "1"" of type '" "Piavca::Motion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Motion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Motion___ne__" "', argument " "2"" of type '" "Piavca::Motion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Motion___ne__" "', argument " "2"" of type '" "Piavca::Motion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      result = (bool)((Piavca::Motion const *)arg1)->operator !=((Piavca::Motion const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion___ne__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Motion___ne____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Motion___ne____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_Motion_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_load" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Motion_load" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::Motion::load(arg2);
        } else {
          (arg1)->load(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_unload(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_unload",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_unload" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::Motion::unload();
        } else {
          (arg1)->unload();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_loaded(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_loaded",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_loaded" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::Motion::loaded();
        } else {
          result = (bool)(arg1)->loaded();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getAvatar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Avatar *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_getAvatar",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getAvatar" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Avatar *)(arg1)->Piavca::Motion::getAvatar();
        } else {
          result = (Piavca::Avatar *)(arg1)->getAvatar();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_setStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion_setStartTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_setStartTime" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Motion_setStartTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::Motion::setStartTime(arg2);
        } else {
          (arg1)->setStartTime(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_getStartTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getStartTime" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (float)(arg1)->getStartTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_getEndTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getEndTime" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (float)(arg1)->getEndTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_reset" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::Motion::reset();
        } else {
          (arg1)->reset();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion_event",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_event" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::Motion::event(arg2);
        } else {
          (arg1)->event(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getEventNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_getEventNames",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getEventNames" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Motion::getEventNames();
        } else {
          result = (arg1)->getEventNames();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    int len = (&result)->size();
    resultobj = PyList_New(0);
    for (int i = 0; i < len; i++)
    {
      PyList_Append(resultobj,  
        PyString_FromString(TStringToString((*(&(result)))[i]).c_str()));
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_cleanRecursionState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_cleanRecursionState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_cleanRecursionState" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::Motion::cleanRecursionState();
        } else {
          (arg1)->cleanRecursionState();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_wasVisited(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_wasVisited",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_wasVisited" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (bool)(arg1)->wasVisited(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_sendEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion_sendEvent",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_sendEvent" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->sendEvent(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_Reference(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_Reference",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_Reference" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      (arg1)->Reference(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_Dispose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_Dispose",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_Dispose" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      (arg1)->Dispose(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_makeTemp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_makeTemp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_makeTemp" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      (arg1)->makeTemp(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_setName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion_setName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_setName" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->setName(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_getName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getName" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (arg1)->getName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_findSub(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion_findSub",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_findSub" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::Motion::findSub(arg2);
        } else {
          result = (Piavca::Motion *)(arg1)->findSub(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_findSubByType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  type_info *arg2 = 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion_findSubByType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_findSubByType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__type_info,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Motion_findSubByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Motion_findSubByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  arg2 = reinterpret_cast< type_info * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::Motion::findSubByType((type_info const &)*arg2);
        } else {
          result = (Piavca::Motion *)(arg1)->findSubByType((type_info const &)*arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getMotionLength" "', argument " "1"" of type '" "Piavca::Motion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::Motion const *)arg1)->Piavca::Motion::getMotionLength();
        } else {
          result = (float)((Piavca::Motion const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_isFacial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_isFacial",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_isFacial" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::Motion::isFacial();
        } else {
          result = (bool)(arg1)->isFacial();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_isRandomAccess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_isRandomAccess",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_isRandomAccess" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::Motion::isRandomAccess();
        } else {
          result = (bool)(arg1)->isRandomAccess();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_begin" "', argument " "1"" of type '" "Piavca::Motion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (int)((Piavca::Motion const *)arg1)->begin(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_end" "', argument " "1"" of type '" "Piavca::Motion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (int)((Piavca::Motion const *)arg1)->end(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion_next",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_next" "', argument " "1"" of type '" "Piavca::Motion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Motion_next" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)((Piavca::Motion const *)arg1)->next(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_isNull" "', argument " "1"" of type '" "Piavca::Motion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Motion_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          Swig::DirectorPureVirtualException::raise("Piavca::Motion::isNull");
        } else {
          result = (bool)((Piavca::Motion const *)arg1)->isNull(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getTrackType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion_getTrackType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getTrackType" "', argument " "1"" of type '" "Piavca::Motion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Motion_getTrackType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          Swig::DirectorPureVirtualException::raise("Piavca::Motion::getTrackType");
        } else {
          result = (int)((Piavca::Motion const *)arg1)->getTrackType(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_pause(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_pause",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_pause" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      (arg1)->pause(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_unpause(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Motion_unpause",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_unpause" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      (arg1)->unpause(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_preFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Motion_preFrame",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_preFrame" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Motion_preFrame" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::Motion::preFrame(arg2);
        } else {
          (arg1)->preFrame(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getFloatValueAtTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Motion_getFloatValueAtTime",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getFloatValueAtTime" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Motion_getFloatValueAtTime" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Motion_getFloatValueAtTime" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (float)(arg1)->getFloatValueAtTime(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getVecValueAtTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Motion_getVecValueAtTime",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getVecValueAtTime" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Motion_getVecValueAtTime" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Motion_getVecValueAtTime" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (arg1)->getVecValueAtTime(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getQuatValueAtTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Motion_getQuatValueAtTime",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getQuatValueAtTime" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Motion_getQuatValueAtTime" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Motion_getQuatValueAtTime" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (arg1)->getQuatValueAtTime(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Motion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Motion_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Motion_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::Motion::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Motion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Motion_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Motion_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Motion::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Motion_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Motion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Motion_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Motion_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Motion_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Motion::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_Motion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_Motion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_Motion" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Motion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__Motion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Core_dir_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring *arg2 = (Piavca::tstring *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_dir_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_dir_set" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_dir_set" "', argument " "2"" of type '" "Piavca::tstring *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::tstring * >(argp2);
  if (arg1) (arg1)->dir = *arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_dir_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_dir_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_dir_get" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  result = (Piavca::tstring *)& ((arg1)->dir);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Core(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Core",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Core" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_reset" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      (arg1)->reset(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":Core_init")) SWIG_fail;
  {
    try {
      result = (Piavca::Core *)Piavca::Core::init(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Core, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_setCore(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_setCore",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_setCore" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      Piavca::Core::setCore(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getCore(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":Core_getCore")) SWIG_fail;
  {
    try {
      result = (Piavca::Core *)Piavca::Core::getCore(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Core, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getCorePointerAsLong(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)":Core_getCorePointerAsLong")) SWIG_fail;
  {
    try {
      result = (long)Piavca::Core::getCorePointerAsLong(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_registerCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::TimeCallback *arg2 = (Piavca::TimeCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_registerCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_registerCallback" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__TimeCallback, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_registerCallback" "', argument " "2"" of type '" "Piavca::TimeCallback *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::TimeCallback * >(argp2);
  {
    try {
      (arg1)->registerCallback(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_timeStep__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_timeStep",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_timeStep" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      (arg1)->timeStep(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_timeStep__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_timeStep",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_timeStep" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_timeStep" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->timeStep(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_timeStep(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Core_timeStep__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Core_timeStep__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Core_timeStep'.\n  Possible C/C++ prototypes are:\n    timeStep()\n    timeStep(float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_prerender(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_prerender",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_prerender" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      (arg1)->prerender(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_render(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_render",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_render" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      (arg1)->render(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_setHarware(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_setHarware",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_setHarware" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_setHarware" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setHarware(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getHarware(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getHarware",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getHarware" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (bool)(arg1)->getHarware(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN int Core_nullId_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Core_nullId is read-only.");
  return 1;
}


SWIGINTERN PyObject *Core_nullId_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(Piavca::Core::nullId));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_Core_getJointId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getJointId",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getJointId" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (int)(arg1)->getJointId(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getMaxJointId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getMaxJointId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getMaxJointId" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (int)(arg1)->getMaxJointId(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_addJointNameSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::StringVector arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_addJointNameSet",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_addJointNameSet" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    PyObject *py_str;
    Piavca::tstring tstr;
    arg2 = StringVector();
    for (int i = 0; i < PyList_Size(obj1); i++)
    {
      float q;
      py_str = PyList_GetItem(obj1, i);
      tstr = (PyString_AsString(py_str));
      (&arg2)->push_back(tstr);
    }
  }
  {
    try {
      (arg1)->addJointNameSet(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getJointName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int arg2 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getJointName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getJointName" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_getJointName" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (arg1)->getJointName(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getJointNameAssociations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  SwigValueWrapper<std::vector<std::pair<std::string,int >,std::allocator<std::pair<std::string,int > > > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getJointNameAssociations",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getJointNameAssociations" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (arg1)->getJointNameAssociations(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new std::vector<std::pair<Piavca::tstring,int >,std::allocator<std::pair<Piavca::tstring,int > > >(static_cast< const std::vector<std::pair<Piavca::tstring,int >,std::allocator<std::pair<Piavca::tstring,int > > >& >(result))), SWIGTYPE_p_std__vectorTstd__pairTstd__string_int_t_std__allocatorTstd__pairTstd__string_int_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getExpressionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getExpressionId",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getExpressionId" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (int)(arg1)->getExpressionId(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getMaxExpressionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getMaxExpressionId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getMaxExpressionId" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (int)(arg1)->getMaxExpressionId(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_addExpressionNameSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::StringVector arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_addExpressionNameSet",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_addExpressionNameSet" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    PyObject *py_str;
    Piavca::tstring tstr;
    arg2 = StringVector();
    for (int i = 0; i < PyList_Size(obj1); i++)
    {
      float q;
      py_str = PyList_GetItem(obj1, i);
      tstr = (PyString_AsString(py_str));
      (&arg2)->push_back(tstr);
    }
  }
  {
    try {
      (arg1)->addExpressionNameSet(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getExpressionName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int arg2 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getExpressionName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getExpressionName" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_getExpressionName" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (arg1)->getExpressionName(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getExpressionNameAssociations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  SwigValueWrapper<std::vector<std::pair<std::string,int >,std::allocator<std::pair<std::string,int > > > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getExpressionNameAssociations",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getExpressionNameAssociations" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (arg1)->getExpressionNameAssociations(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new std::vector<std::pair<Piavca::tstring,int >,std::allocator<std::pair<Piavca::tstring,int > > >(static_cast< const std::vector<std::pair<Piavca::tstring,int >,std::allocator<std::pair<Piavca::tstring,int > > >& >(result))), SWIGTYPE_p_std__vectorTstd__pairTstd__string_int_t_std__allocatorTstd__pairTstd__string_int_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getTrackId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getTrackId",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getTrackId" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (int)(arg1)->getTrackId(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getMaxTrackId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getMaxTrackId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getMaxTrackId" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (int)(arg1)->getMaxTrackId(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getMinTrackId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getMinTrackId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getMinTrackId" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (int)(arg1)->getMinTrackId(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getTrackName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int arg2 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getTrackName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getTrackName" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_getTrackName" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (arg1)->getTrackName(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getTrackNameAssociations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  SwigValueWrapper<std::vector<std::pair<std::string,int >,std::allocator<std::pair<std::string,int > > > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getTrackNameAssociations",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getTrackNameAssociations" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (arg1)->getTrackNameAssociations(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new std::vector<std::pair<Piavca::tstring,int >,std::allocator<std::pair<Piavca::tstring,int > > >(static_cast< const std::vector<std::pair<Piavca::tstring,int >,std::allocator<std::pair<Piavca::tstring,int > > >& >(result))), SWIGTYPE_p_std__vectorTstd__pairTstd__string_int_t_std__allocatorTstd__pairTstd__string_int_t_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_loadMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::tstring arg3 ;
  int arg4 ;
  bool arg5 ;
  Piavca::Motion *arg6 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_loadMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    arg3 = PyString_AsString(obj2);
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Core_loadMotion" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Core_loadMotion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "Core_loadMotion" "', argument " "6"" of type '" "Piavca::Motion *""'"); 
  }
  arg6 = reinterpret_cast< Piavca::Motion * >(argp6);
  {
    try {
      (arg1)->loadMotion(arg2,arg3,arg4,arg5,arg6); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_loadMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::tstring arg3 ;
  int arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_loadMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    arg3 = PyString_AsString(obj2);
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Core_loadMotion" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Core_loadMotion" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      (arg1)->loadMotion(arg2,arg3,arg4,arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_loadMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::tstring arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_loadMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    arg3 = PyString_AsString(obj2);
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Core_loadMotion" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      (arg1)->loadMotion(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_loadMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::tstring arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Core_loadMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_loadMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    arg3 = PyString_AsString(obj2);
  }
  {
    try {
      (arg1)->loadMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_loadMotion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  bool arg4 ;
  Piavca::Motion *arg5 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_loadMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Core_loadMotion" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Core_loadMotion" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Core_loadMotion" "', argument " "5"" of type '" "Piavca::Motion *""'"); 
  }
  arg5 = reinterpret_cast< Piavca::Motion * >(argp5);
  {
    try {
      (arg1)->loadMotion(arg2,arg3,arg4,arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_loadMotion__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_loadMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Core_loadMotion" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Core_loadMotion" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->loadMotion(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_loadMotion__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Core_loadMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_loadMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Core_loadMotion" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  {
    try {
      (arg1)->loadMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_loadMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Core_loadMotion__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Core_loadMotion__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Core_loadMotion__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Core_loadMotion__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_Core_loadMotion__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Core_loadMotion__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_Core_loadMotion__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Core_loadMotion'.\n  Possible C/C++ prototypes are:\n    loadMotion(Piavca::tstring,Piavca::tstring,int,bool,Piavca::Motion *)\n    loadMotion(Piavca::tstring,Piavca::tstring,int,bool)\n    loadMotion(Piavca::tstring,Piavca::tstring,int)\n    loadMotion(Piavca::tstring,Piavca::tstring)\n    loadMotion(Piavca::tstring,Piavca::Motion *,bool,Piavca::Motion *)\n    loadMotion(Piavca::tstring,Piavca::Motion *,bool)\n    loadMotion(Piavca::tstring,Piavca::Motion *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_renameMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::tstring arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Core_renameMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_renameMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    arg3 = PyString_AsString(obj2);
  }
  {
    try {
      (arg1)->renameMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_unloadMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_unloadMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_unloadMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->unloadMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getMotionNames__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int arg2 ;
  std::vector<std::string,std::allocator<std::string > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getMotionNames",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getMotionNames" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_getMotionNames" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (arg1)->getMotionNames(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    int len = (&result)->size();
    resultobj = PyList_New(0);
    for (int i = 0; i < len; i++)
    {
      PyList_Append(resultobj,  
        PyString_FromString((*(&(result)))[i].c_str()));
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getMotionNames__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  std::vector<std::string,std::allocator<std::string > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getMotionNames",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getMotionNames" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (arg1)->getMotionNames(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    int len = (&result)->size();
    resultobj = PyList_New(0);
    for (int i = 0; i < len; i++)
    {
      PyList_Append(resultobj,  
        PyString_FromString((*(&(result)))[i].c_str()));
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getMotionNames(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Core_getMotionNames__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Core_getMotionNames__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Core_getMotionNames'.\n  Possible C/C++ prototypes are:\n    getMotionNames(int)\n    getMotionNames()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getNumberOfMotions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getNumberOfMotions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getNumberOfMotions" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (int)(arg1)->getNumberOfMotions(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getAllmotions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  SwigValueWrapper<std::list<std::string > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getAllmotions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getAllmotions" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (arg1)->getAllmotions(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new std::list<Piavca::tstring >(static_cast< const std::list<Piavca::tstring >& >(result))), SWIGTYPE_p_std__listTstd__string_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_getMotion" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Core_getMotion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Core_getMotion__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Core_getMotion'.\n  Possible C/C++ prototypes are:\n    getMotion(Piavca::tstring)\n    getMotion(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_loadAvatar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_loadAvatar",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_loadAvatar" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_loadAvatar" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    try {
      (arg1)->loadAvatar(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getAvatar__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Avatar *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getAvatar",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getAvatar" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (Piavca::Avatar *)(arg1)->getAvatar(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getAvatarNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getAvatarNames",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getAvatarNames" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (arg1)->getAvatarNames(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    int len = (&result)->size();
    resultobj = PyList_New(0);
    for (int i = 0; i < len; i++)
    {
      PyList_Append(resultobj,  
        PyString_FromString(((*(&(result)))[i]).c_str()));
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_numAvatars(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_numAvatars",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_numAvatars" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (int)(arg1)->numAvatars(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getAvatar__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int arg2 ;
  Piavca::Avatar *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getAvatar",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getAvatar" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_getAvatar" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (Piavca::Avatar *)(arg1)->getAvatar(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getAvatar(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Core_getAvatar__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Core_getAvatar__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Core_getAvatar'.\n  Possible C/C++ prototypes are:\n    getAvatar(Piavca::tstring)\n    getAvatar(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_renameAvatar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::tstring arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Core_renameAvatar",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_renameAvatar" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    arg3 = PyString_AsString(obj2);
  }
  {
    try {
      (arg1)->renameAvatar(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_removeAvatar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_removeAvatar",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_removeAvatar" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_removeAvatar" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    try {
      (arg1)->removeAvatar(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initAvatar__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  Piavca::tstring arg3 ;
  bool arg4 ;
  Piavca::Vec *arg5 = 0 ;
  Piavca::Quat *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:Core_initAvatar",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initAvatar" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initAvatar" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Core_initAvatar" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Core_initAvatar" "', argument " "5"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Core_initAvatar" "', argument " "5"" of type '" "Piavca::Vec const &""'"); 
  }
  arg5 = reinterpret_cast< Piavca::Vec * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "Core_initAvatar" "', argument " "6"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Core_initAvatar" "', argument " "6"" of type '" "Piavca::Quat const &""'"); 
  }
  arg6 = reinterpret_cast< Piavca::Quat * >(argp6);
  {
    try {
      (arg1)->initAvatar(arg2,arg3,arg4,(Piavca::Vec const &)*arg5,(Piavca::Quat const &)*arg6); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initAvatar__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  Piavca::tstring arg3 ;
  bool arg4 ;
  Piavca::Vec *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:Core_initAvatar",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initAvatar" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initAvatar" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Core_initAvatar" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Core_initAvatar" "', argument " "5"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Core_initAvatar" "', argument " "5"" of type '" "Piavca::Vec const &""'"); 
  }
  arg5 = reinterpret_cast< Piavca::Vec * >(argp5);
  {
    try {
      (arg1)->initAvatar(arg2,arg3,arg4,(Piavca::Vec const &)*arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initAvatar__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  Piavca::tstring arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Core_initAvatar",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initAvatar" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initAvatar" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Core_initAvatar" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->initAvatar(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initAvatar__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  Piavca::tstring arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Core_initAvatar",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initAvatar" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initAvatar" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  {
    try {
      (arg1)->initAvatar(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initAvatar(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Core_initAvatar__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Core_initAvatar__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Piavca__Vec, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_Core_initAvatar__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Piavca__Vec, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_Piavca__Quat, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_Core_initAvatar__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Core_initAvatar'.\n  Possible C/C++ prototypes are:\n    initAvatar(Piavca::Avatar *,Piavca::tstring,bool,Piavca::Vec const &,Piavca::Quat const &)\n    initAvatar(Piavca::Avatar *,Piavca::tstring,bool,Piavca::Vec const &)\n    initAvatar(Piavca::Avatar *,Piavca::tstring,bool)\n    initAvatar(Piavca::Avatar *,Piavca::tstring)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getObject__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Object *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getObject" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (Piavca::Object *)(arg1)->getObject(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Object, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_numObjects(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_numObjects",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_numObjects" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (int)(arg1)->numObjects(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getObject__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int arg2 ;
  Piavca::Object *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_getObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getObject" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_getObject" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (Piavca::Object *)(arg1)->getObject(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Object, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getObject(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Core_getObject__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Core_getObject__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Core_getObject'.\n  Possible C/C++ prototypes are:\n    getObject(Piavca::tstring)\n    getObject(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_renameObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::tstring arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Core_renameObject",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_renameObject" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    arg3 = PyString_AsString(obj2);
  }
  {
    try {
      (arg1)->renameObject(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_removeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::Object *arg2 = (Piavca::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_removeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_removeObject" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_removeObject" "', argument " "2"" of type '" "Piavca::Object *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Object * >(argp2);
  {
    try {
      (arg1)->removeObject(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initObject__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::Object *arg2 = (Piavca::Object *) 0 ;
  Piavca::tstring arg3 ;
  Piavca::Vec *arg4 = 0 ;
  Piavca::Quat *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:Core_initObject",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initObject" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initObject" "', argument " "2"" of type '" "Piavca::Object *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Object * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Core_initObject" "', argument " "4"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Core_initObject" "', argument " "4"" of type '" "Piavca::Vec const &""'"); 
  }
  arg4 = reinterpret_cast< Piavca::Vec * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Core_initObject" "', argument " "5"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Core_initObject" "', argument " "5"" of type '" "Piavca::Quat const &""'"); 
  }
  arg5 = reinterpret_cast< Piavca::Quat * >(argp5);
  {
    try {
      (arg1)->initObject(arg2,arg3,(Piavca::Vec const &)*arg4,(Piavca::Quat const &)*arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initObject__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::Object *arg2 = (Piavca::Object *) 0 ;
  Piavca::tstring arg3 ;
  Piavca::Vec *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Core_initObject",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initObject" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initObject" "', argument " "2"" of type '" "Piavca::Object *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Object * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Core_initObject" "', argument " "4"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Core_initObject" "', argument " "4"" of type '" "Piavca::Vec const &""'"); 
  }
  arg4 = reinterpret_cast< Piavca::Vec * >(argp4);
  {
    try {
      (arg1)->initObject(arg2,arg3,(Piavca::Vec const &)*arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initObject__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::Object *arg2 = (Piavca::Object *) 0 ;
  Piavca::tstring arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Core_initObject",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initObject" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initObject" "', argument " "2"" of type '" "Piavca::Object *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Object * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  {
    try {
      (arg1)->initObject(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initObject(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Object, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Core_initObject__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Object, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_Piavca__Vec, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Core_initObject__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Object, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_Piavca__Vec, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Piavca__Quat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_Core_initObject__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Core_initObject'.\n  Possible C/C++ prototypes are:\n    initObject(Piavca::Object *,Piavca::tstring,Piavca::Vec const &,Piavca::Quat const &)\n    initObject(Piavca::Object *,Piavca::tstring,Piavca::Vec const &)\n    initObject(Piavca::Object *,Piavca::tstring)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::KeyframeMotion *arg2 = (Piavca::KeyframeMotion *) 0 ;
  Piavca::tstring arg3 ;
  bool arg4 ;
  int arg5 ;
  Piavca::Motion *arg6 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:Core_initMotion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initMotion" "', argument " "2"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::KeyframeMotion * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Core_initMotion" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Core_initMotion" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "Core_initMotion" "', argument " "6"" of type '" "Piavca::Motion *""'"); 
  }
  arg6 = reinterpret_cast< Piavca::Motion * >(argp6);
  {
    try {
      (arg1)->initMotion(arg2,arg3,arg4,arg5,arg6); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::KeyframeMotion *arg2 = (Piavca::KeyframeMotion *) 0 ;
  Piavca::tstring arg3 ;
  bool arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:Core_initMotion",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initMotion" "', argument " "2"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::KeyframeMotion * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Core_initMotion" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Core_initMotion" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  {
    try {
      (arg1)->initMotion(arg2,arg3,arg4,arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::KeyframeMotion *arg2 = (Piavca::KeyframeMotion *) 0 ;
  Piavca::tstring arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Core_initMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initMotion" "', argument " "2"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::KeyframeMotion * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Core_initMotion" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->initMotion(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::KeyframeMotion *arg2 = (Piavca::KeyframeMotion *) 0 ;
  Piavca::tstring arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Core_initMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initMotion" "', argument " "2"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::KeyframeMotion * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  {
    try {
      (arg1)->initMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initMotion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::KeyframeMotion *arg2 = (Piavca::KeyframeMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_initMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_initMotion" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Core_initMotion" "', argument " "2"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::KeyframeMotion * >(argp2);
  {
    try {
      (arg1)->initMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_initMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Core_initMotion__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Core_initMotion__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Core_initMotion__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_Core_initMotion__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Core, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_Core_initMotion__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Core_initMotion'.\n  Possible C/C++ prototypes are:\n    initMotion(Piavca::KeyframeMotion *,Piavca::tstring,bool,int,Piavca::Motion *)\n    initMotion(Piavca::KeyframeMotion *,Piavca::tstring,bool,int)\n    initMotion(Piavca::KeyframeMotion *,Piavca::tstring,bool)\n    initMotion(Piavca::KeyframeMotion *,Piavca::tstring)\n    initMotion(Piavca::KeyframeMotion *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_setDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_setDir",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_setDir" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->setDir(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getTime" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (float)(arg1)->getTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getSystemTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getSystemTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getSystemTime" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (float)(arg1)->getSystemTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_setAutoTimeOff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_setAutoTimeOff",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_setAutoTimeOff" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      (arg1)->setAutoTimeOff(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_setAutoTimeOn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_setAutoTimeOn",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_setAutoTimeOn" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      (arg1)->setAutoTimeOn(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_setCurrentTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_setCurrentTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_setCurrentTime" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_setCurrentTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setCurrentTime(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_addError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_addError",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_addError" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->addError(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tostringstream *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_error",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_error" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      {
        Piavca::tostringstream &_result_ref = (arg1)->error();
        result = (Piavca::tostringstream *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostringstream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_clearErrors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_clearErrors",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_clearErrors" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      (arg1)->clearErrors(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getErrors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getErrors",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getErrors" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (arg1)->getErrors(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_errorsPresent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_errorsPresent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_errorsPresent" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (bool)(arg1)->errorsPresent(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_addWarning(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_addWarning",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_addWarning" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->addWarning(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_Warning(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tostringstream *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_Warning",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_Warning" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      {
        Piavca::tostringstream &_result_ref = (arg1)->Warning();
        result = (Piavca::tostringstream *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostringstream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_clearWarnings(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_clearWarnings",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_clearWarnings" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      (arg1)->clearWarnings(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getWarnings(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getWarnings",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getWarnings" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (arg1)->getWarnings(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_warningsPresent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_warningsPresent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_warningsPresent" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (bool)(arg1)->warningsPresent(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_exceptionsOn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_exceptionsOn",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_exceptionsOn" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (bool)(arg1)->exceptionsOn(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_setExceptionsOn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_setExceptionsOn",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_setExceptionsOn" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      (arg1)->setExceptionsOn(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_setExceptionsOff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_setExceptionsOff",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_setExceptionsOff" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      (arg1)->setExceptionsOff(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_log(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  std::ostream *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_log",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_log" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      {
        std::ostream &_result_ref = (arg1)->log();
        result = (std::ostream *) &_result_ref;
      } 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_addProfilePoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_addProfilePoint",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_addProfilePoint" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (int)(arg1)->addProfilePoint(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_profilePointStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_profilePointStart",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_profilePointStart" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_profilePointStart" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->profilePointStart(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_profilePointEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_profilePointEnd",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_profilePointEnd" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Core_profilePointEnd" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->profilePointEnd(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_printProfileData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_printProfileData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_printProfileData" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      (arg1)->printProfileData(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_output(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_output",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_output" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->output(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_message(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Core_message",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_message" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->message(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Core_getMessages(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Core *arg1 = (Piavca::Core *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Core_getMessages",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Core, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Core_getMessages" "', argument " "1"" of type '" "Piavca::Core *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Core * >(argp1);
  {
    try {
      result = (arg1)->getMessages(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Core_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__Core, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_KeyframeMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::tstring arg2 ;
  int arg3 ;
  Piavca::Motion *arg4 = (Piavca::Motion *) 0 ;
  Piavca::KeyframeMotion *result = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_KeyframeMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  arg1 = obj0;
  {
    arg2 = PyString_AsString(obj1);
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_KeyframeMotion" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_KeyframeMotion" "', argument " "4"" of type '" "Piavca::Motion *""'"); 
  }
  arg4 = reinterpret_cast< Piavca::Motion * >(argp4);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::KeyframeMotion *)new SwigDirector_KeyframeMotion(arg1,arg2,arg3,arg4); 
      } else {
        result = (Piavca::KeyframeMotion *)new Piavca::KeyframeMotion(arg2,arg3,arg4); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__KeyframeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_KeyframeMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::tstring arg2 ;
  int arg3 ;
  Piavca::KeyframeMotion *result = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_KeyframeMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  {
    arg2 = PyString_AsString(obj1);
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_KeyframeMotion" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::KeyframeMotion *)new SwigDirector_KeyframeMotion(arg1,arg2,arg3); 
      } else {
        result = (Piavca::KeyframeMotion *)new Piavca::KeyframeMotion(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__KeyframeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_KeyframeMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::KeyframeMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_KeyframeMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::KeyframeMotion *)new SwigDirector_KeyframeMotion(arg1,arg2); 
      } else {
        result = (Piavca::KeyframeMotion *)new Piavca::KeyframeMotion(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__KeyframeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_KeyframeMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  bool arg2 ;
  Piavca::KeyframeMotion *result = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_KeyframeMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_KeyframeMotion" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::KeyframeMotion *)new SwigDirector_KeyframeMotion(arg1,arg2); 
      } else {
        result = (Piavca::KeyframeMotion *)new Piavca::KeyframeMotion(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__KeyframeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_KeyframeMotion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::KeyframeMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_KeyframeMotion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::KeyframeMotion *)new SwigDirector_KeyframeMotion(arg1); 
      } else {
        result = (Piavca::KeyframeMotion *)new Piavca::KeyframeMotion(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__KeyframeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_KeyframeMotion__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionImp *arg2 = (Piavca::MotionImp *) 0 ;
  Piavca::KeyframeMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_KeyframeMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__MotionImp, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_KeyframeMotion" "', argument " "2"" of type '" "Piavca::MotionImp *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MotionImp * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::KeyframeMotion *)new SwigDirector_KeyframeMotion(arg1,arg2); 
      } else {
        result = (Piavca::KeyframeMotion *)new Piavca::KeyframeMotion(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__KeyframeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_KeyframeMotion__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::KeyframeMotion *arg2 = 0 ;
  Piavca::KeyframeMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_KeyframeMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__KeyframeMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_KeyframeMotion" "', argument " "2"" of type '" "Piavca::KeyframeMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_KeyframeMotion" "', argument " "2"" of type '" "Piavca::KeyframeMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::KeyframeMotion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::KeyframeMotion *)new SwigDirector_KeyframeMotion(arg1,(Piavca::KeyframeMotion const &)*arg2); 
      } else {
        result = (Piavca::KeyframeMotion *)new Piavca::KeyframeMotion((Piavca::KeyframeMotion const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__KeyframeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_KeyframeMotion__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = 0 ;
  Piavca::KeyframeMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_KeyframeMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Motion,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_KeyframeMotion" "', argument " "2"" of type '" "Piavca::Motion &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_KeyframeMotion" "', argument " "2"" of type '" "Piavca::Motion &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::KeyframeMotion *)new SwigDirector_KeyframeMotion(arg1,*arg2); 
      } else {
        result = (Piavca::KeyframeMotion *)new Piavca::KeyframeMotion(*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__KeyframeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_KeyframeMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_KeyframeMotion__SWIG_4(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__MotionImp, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_KeyframeMotion__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_KeyframeMotion__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_KeyframeMotion__SWIG_7(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_KeyframeMotion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_KeyframeMotion__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_KeyframeMotion__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_KeyframeMotion__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_KeyframeMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::KeyframeMotion(PyObject *,Piavca::tstring,int,Piavca::Motion *)\n    Piavca::KeyframeMotion(PyObject *,Piavca::tstring,int)\n    Piavca::KeyframeMotion(PyObject *,Piavca::tstring)\n    Piavca::KeyframeMotion(PyObject *,bool)\n    Piavca::KeyframeMotion(PyObject *)\n    Piavca::KeyframeMotion(PyObject *,Piavca::MotionImp *)\n    Piavca::KeyframeMotion(PyObject *,Piavca::KeyframeMotion const &)\n    Piavca::KeyframeMotion(PyObject *,Piavca::Motion &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_KeyframeMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_KeyframeMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_KeyframeMotion" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KeyframeMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_clone" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::KeyframeMotion::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KeyframeMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_getClassName" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::KeyframeMotion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::KeyframeMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KeyframeMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::KeyframeMotion *)Piavca::KeyframeMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KeyframeMotion_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_getMotionLength" "', argument " "1"" of type '" "Piavca::KeyframeMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::KeyframeMotion const *)arg1)->Piavca::KeyframeMotion::getMotionLength();
        } else {
          result = (float)((Piavca::KeyframeMotion const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_isFacial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KeyframeMotion_isFacial",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_isFacial" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::KeyframeMotion::isFacial();
        } else {
          result = (bool)(arg1)->isFacial();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_setFacial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:KeyframeMotion_setFacial",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_setFacial" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_setFacial" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::KeyframeMotion::setFacial(arg2);
        } else {
          (arg1)->setFacial(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_isRandomAccess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KeyframeMotion_isRandomAccess",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_isRandomAccess" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::KeyframeMotion::isRandomAccess();
        } else {
          result = (bool)(arg1)->isRandomAccess();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:KeyframeMotion_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_isNull" "', argument " "1"" of type '" "Piavca::KeyframeMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)((Piavca::KeyframeMotion const *)arg1)->Piavca::KeyframeMotion::isNull(arg2);
        } else {
          result = (bool)((Piavca::KeyframeMotion const *)arg1)->isNull(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_getTrackType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:KeyframeMotion_getTrackType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_getTrackType" "', argument " "1"" of type '" "Piavca::KeyframeMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_getTrackType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (int)((Piavca::KeyframeMotion const *)arg1)->Piavca::KeyframeMotion::getTrackType(arg2);
        } else {
          result = (int)((Piavca::KeyframeMotion const *)arg1)->getTrackType(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_addFloatTrack__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:KeyframeMotion_addFloatTrack",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_addFloatTrack" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_addFloatTrack" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_addFloatTrack" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->addFloatTrack(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_addFloatTrack__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:KeyframeMotion_addFloatTrack",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_addFloatTrack" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_addFloatTrack" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->addFloatTrack(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_addFloatTrack(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_KeyframeMotion_addFloatTrack__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_KeyframeMotion_addFloatTrack__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'KeyframeMotion_addFloatTrack'.\n  Possible C/C++ prototypes are:\n    addFloatTrack(int,float)\n    addFloatTrack(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_addVecTrack__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  Piavca::Vec *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:KeyframeMotion_addVecTrack",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_addVecTrack" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_addVecTrack" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "KeyframeMotion_addVecTrack" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "KeyframeMotion_addVecTrack" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Vec * >(argp3);
  {
    try {
      (arg1)->addVecTrack(arg2,(Piavca::Vec const &)*arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_addVecTrack__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:KeyframeMotion_addVecTrack",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_addVecTrack" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_addVecTrack" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->addVecTrack(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_addVecTrack(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_KeyframeMotion_addVecTrack__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Vec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_KeyframeMotion_addVecTrack__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'KeyframeMotion_addVecTrack'.\n  Possible C/C++ prototypes are:\n    addVecTrack(int,Piavca::Vec const &)\n    addVecTrack(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_addQuatTrack__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  Piavca::Quat *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:KeyframeMotion_addQuatTrack",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_addQuatTrack" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_addQuatTrack" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "KeyframeMotion_addQuatTrack" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "KeyframeMotion_addQuatTrack" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Quat * >(argp3);
  {
    try {
      (arg1)->addQuatTrack(arg2,(Piavca::Quat const &)*arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_addQuatTrack__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:KeyframeMotion_addQuatTrack",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_addQuatTrack" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_addQuatTrack" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->addQuatTrack(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_addQuatTrack(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_KeyframeMotion_addQuatTrack__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Quat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_KeyframeMotion_addQuatTrack__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'KeyframeMotion_addQuatTrack'.\n  Possible C/C++ prototypes are:\n    addQuatTrack(int,Piavca::Quat const &)\n    addQuatTrack(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_setFloatKeyframe__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:KeyframeMotion_setFloatKeyframe",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_setFloatKeyframe" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_setFloatKeyframe" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_setFloatKeyframe" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "KeyframeMotion_setFloatKeyframe" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      (arg1)->setFloatKeyframe(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_setFloatKeyframe__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:KeyframeMotion_setFloatKeyframe",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_setFloatKeyframe" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_setFloatKeyframe" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_setFloatKeyframe" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "KeyframeMotion_setFloatKeyframe" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "KeyframeMotion_setFloatKeyframe" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      (arg1)->setFloatKeyframe(arg2,arg3,arg4,arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_setFloatKeyframe(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_KeyframeMotion_setFloatKeyframe__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_KeyframeMotion_setFloatKeyframe__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'KeyframeMotion_setFloatKeyframe'.\n  Possible C/C++ prototypes are:\n    setFloatKeyframe(int,float,float)\n    setFloatKeyframe(int,float,float,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_setVecKeyframe__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:KeyframeMotion_setVecKeyframe",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "4"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "4"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    try {
      (arg1)->setVecKeyframe(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_setVecKeyframe__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec arg4 ;
  Piavca::Vec arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:KeyframeMotion_setVecKeyframe",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "4"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "4"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "5"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "KeyframeMotion_setVecKeyframe" "', argument " "5"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    try {
      (arg1)->setVecKeyframe(arg2,arg3,arg4,arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_setVecKeyframe(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_Piavca__Vec, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_KeyframeMotion_setVecKeyframe__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_Piavca__Vec, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Piavca__Vec, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_KeyframeMotion_setVecKeyframe__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'KeyframeMotion_setVecKeyframe'.\n  Possible C/C++ prototypes are:\n    setVecKeyframe(int,float,Piavca::Vec)\n    setVecKeyframe(int,float,Piavca::Vec,Piavca::Vec)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_setQuatKeyframe__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:KeyframeMotion_setQuatKeyframe",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_Piavca__Quat,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "4"" of type '" "Piavca::Quat""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "4"" of type '" "Piavca::Quat""'");
    } else {
      Piavca::Quat * temp = reinterpret_cast< Piavca::Quat * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    try {
      (arg1)->setQuatKeyframe(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_setQuatKeyframe__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat arg4 ;
  Piavca::Quat arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:KeyframeMotion_setQuatKeyframe",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_Piavca__Quat,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "4"" of type '" "Piavca::Quat""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "4"" of type '" "Piavca::Quat""'");
    } else {
      Piavca::Quat * temp = reinterpret_cast< Piavca::Quat * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Piavca__Quat,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "5"" of type '" "Piavca::Quat""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "KeyframeMotion_setQuatKeyframe" "', argument " "5"" of type '" "Piavca::Quat""'");
    } else {
      Piavca::Quat * temp = reinterpret_cast< Piavca::Quat * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    try {
      (arg1)->setQuatKeyframe(arg2,arg3,arg4,arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_setQuatKeyframe(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_Piavca__Quat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_KeyframeMotion_setQuatKeyframe__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_Piavca__Quat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Piavca__Quat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_KeyframeMotion_setQuatKeyframe__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'KeyframeMotion_setQuatKeyframe'.\n  Possible C/C++ prototypes are:\n    setQuatKeyframe(int,float,Piavca::Quat)\n    setQuatKeyframe(int,float,Piavca::Quat,Piavca::Quat)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_getNumKeyframes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:KeyframeMotion_getNumKeyframes",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_getNumKeyframes" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_getNumKeyframes" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_getNumKeyframes" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (int)(arg1)->getNumKeyframes(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_getKeyframeTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:KeyframeMotion_getKeyframeTime",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_getKeyframeTime" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_getKeyframeTime" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_getKeyframeTime" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "KeyframeMotion_getKeyframeTime" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (float)(arg1)->getKeyframeTime(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:KeyframeMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::KeyframeMotion::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:KeyframeMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::KeyframeMotion::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:KeyframeMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::KeyframeMotion::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_deleteAllTracks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KeyframeMotion_deleteAllTracks",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_deleteAllTracks" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  {
    try {
      (arg1)->deleteAllTracks(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_clearTrack__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:KeyframeMotion_clearTrack",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_clearTrack" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_clearTrack" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "KeyframeMotion_clearTrack" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      (arg1)->clearTrack(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_clearTrack__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:KeyframeMotion_clearTrack",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_clearTrack" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_clearTrack" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->clearTrack(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_clearTrack(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_KeyframeMotion_clearTrack__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_KeyframeMotion_clearTrack__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'KeyframeMotion_clearTrack'.\n  Possible C/C++ prototypes are:\n    clearTrack(int,bool)\n    clearTrack(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_clearAllTracks__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:KeyframeMotion_clearAllTracks",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_clearAllTracks" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KeyframeMotion_clearAllTracks" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->clearAllTracks(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_clearAllTracks__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KeyframeMotion_clearAllTracks",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KeyframeMotion_clearAllTracks" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  {
    try {
      (arg1)->clearAllTracks(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KeyframeMotion_clearAllTracks(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_KeyframeMotion_clearAllTracks__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__KeyframeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_KeyframeMotion_clearAllTracks__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'KeyframeMotion_clearAllTracks'.\n  Possible C/C++ prototypes are:\n    clearAllTracks(bool)\n    clearAllTracks()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_KeyframeMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::KeyframeMotion *arg1 = (Piavca::KeyframeMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_KeyframeMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_KeyframeMotion" "', argument " "1"" of type '" "Piavca::KeyframeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::KeyframeMotion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *KeyframeMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__KeyframeMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_copyMotionPosture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  float arg2 ;
  Piavca::KeyframeMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:copyMotionPosture",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "copyMotionPosture" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "copyMotionPosture" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (Piavca::KeyframeMotion *)Piavca::copyMotionPosture(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__KeyframeMotion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Avatar__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::tstring arg2 ;
  bool arg3 ;
  Piavca::Vec *arg4 = 0 ;
  Piavca::Quat *arg5 = 0 ;
  Piavca::Avatar *result = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_Avatar",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  {
    arg2 = PyString_AsString(obj1);
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Avatar" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Avatar" "', argument " "4"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Avatar" "', argument " "4"" of type '" "Piavca::Vec const &""'"); 
  }
  arg4 = reinterpret_cast< Piavca::Vec * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_Avatar" "', argument " "5"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Avatar" "', argument " "5"" of type '" "Piavca::Quat const &""'"); 
  }
  arg5 = reinterpret_cast< Piavca::Quat * >(argp5);
  {
    try {
      result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2,arg3,(Piavca::Vec const &)*arg4,(Piavca::Quat const &)*arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Avatar__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::tstring arg2 ;
  bool arg3 ;
  Piavca::Vec *arg4 = 0 ;
  Piavca::Avatar *result = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_Avatar",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  {
    arg2 = PyString_AsString(obj1);
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Avatar" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Avatar" "', argument " "4"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Avatar" "', argument " "4"" of type '" "Piavca::Vec const &""'"); 
  }
  arg4 = reinterpret_cast< Piavca::Vec * >(argp4);
  {
    try {
      result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2,arg3,(Piavca::Vec const &)*arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Avatar__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::tstring arg2 ;
  bool arg3 ;
  Piavca::Avatar *result = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_Avatar",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  {
    arg2 = PyString_AsString(obj1);
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Avatar" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Avatar__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::tstring arg2 ;
  Piavca::Avatar *result = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Avatar",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Avatar__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  bool arg2 ;
  Piavca::Vec *arg3 = 0 ;
  Piavca::Quat *arg4 = 0 ;
  Piavca::Avatar *result = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_Avatar",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Avatar" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Avatar" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Avatar" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Vec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Avatar" "', argument " "4"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Avatar" "', argument " "4"" of type '" "Piavca::Quat const &""'"); 
  }
  arg4 = reinterpret_cast< Piavca::Quat * >(argp4);
  {
    try {
      result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2,(Piavca::Vec const &)*arg3,(Piavca::Quat const &)*arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Avatar__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  bool arg2 ;
  Piavca::Vec *arg3 = 0 ;
  Piavca::Avatar *result = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_Avatar",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Avatar" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Avatar" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Avatar" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Vec * >(argp3);
  {
    try {
      result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2,(Piavca::Vec const &)*arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Avatar__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  bool arg2 ;
  Piavca::Avatar *result = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Avatar",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Avatar" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Avatar__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::Avatar *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Avatar",&obj0)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  {
    try {
      result = (Piavca::Avatar *)new Piavca::Avatar(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Avatar__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::AvatarImp *arg2 = (Piavca::AvatarImp *) 0 ;
  Piavca::Avatar *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Avatar",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__AvatarImp, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Avatar" "', argument " "2"" of type '" "Piavca::AvatarImp *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::AvatarImp * >(argp2);
  {
    try {
      result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Avatar(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Avatar__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__AvatarImp, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Avatar__SWIG_8(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Avatar__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_Avatar__SWIG_6(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_Avatar__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Vec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_Avatar__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_Piavca__Vec, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_Avatar__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Vec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_Piavca__Quat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_Avatar__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_Piavca__Vec, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Piavca__Quat, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_Avatar__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Avatar'.\n  Possible C/C++ prototypes are:\n    Piavca::Avatar(Piavca::tstring,Piavca::tstring,bool,Piavca::Vec const &,Piavca::Quat const &)\n    Piavca::Avatar(Piavca::tstring,Piavca::tstring,bool,Piavca::Vec const &)\n    Piavca::Avatar(Piavca::tstring,Piavca::tstring,bool)\n    Piavca::Avatar(Piavca::tstring,Piavca::tstring)\n    Piavca::Avatar(Piavca::tstring,bool,Piavca::Vec const &,Piavca::Quat const &)\n    Piavca::Avatar(Piavca::tstring,bool,Piavca::Vec const &)\n    Piavca::Avatar(Piavca::tstring,bool)\n    Piavca::Avatar(Piavca::tstring)\n    Piavca::Avatar(Piavca::tstring,Piavca::AvatarImp *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_isValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_isValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_isValid" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (bool)(arg1)->isValid(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_activate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_activate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_activate" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->activate(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_deactivate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_deactivate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_deactivate" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->deactivate(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getName" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (arg1)->getName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_setName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setName" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (arg1)->setName(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_hideBodyPart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_hideBodyPart",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_hideBodyPart" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->hideBodyPart(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_showBodyPart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_showBodyPart",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_showBodyPart" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->showBodyPart(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setFacialExpressionWeight__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Avatar_setFacialExpressionWeight",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setFacialExpressionWeight" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_setFacialExpressionWeight" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Avatar_setFacialExpressionWeight" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Avatar_setFacialExpressionWeight" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (bool)(arg1)->setFacialExpressionWeight(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setFacialExpressionWeight__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  float arg3 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_setFacialExpressionWeight",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setFacialExpressionWeight" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_setFacialExpressionWeight" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Avatar_setFacialExpressionWeight" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (bool)(arg1)->setFacialExpressionWeight(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getFacialExpressionWeight__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_getFacialExpressionWeight",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getFacialExpressionWeight" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_getFacialExpressionWeight" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (float)(arg1)->getFacialExpressionWeight(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_clearFacialExpressionWeights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_clearFacialExpressionWeights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_clearFacialExpressionWeights" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->clearFacialExpressionWeights(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_beginExpression(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_beginExpression",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_beginExpression" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (int)(arg1)->beginExpression(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_endExpression(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_endExpression",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_endExpression" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (int)(arg1)->endExpression(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_nextExpression(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int *arg2 = 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int temp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_nextExpression",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_nextExpression" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  if (!(SWIG_IsOK((res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2),SWIGTYPE_p_int,0))))) {
    int val; 
    int ecode = SWIG_AsVal_int(obj1, &val);
    if (!SWIG_IsOK(ecode)) {
      SWIG_exception_fail(SWIG_ArgError(ecode), "in method '" "Avatar_nextExpression" "', argument " "2"" of type '" "int""'");
    }
    temp2 = static_cast< int >(val);
    arg2 = &temp2;
    res2 = SWIG_AddTmpMask(ecode);
  }
  {
    try {
      result = (int)(arg1)->nextExpression(*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_isExpressionNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_isExpressionNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_isExpressionNull" "', argument " "1"" of type '" "Piavca::Avatar const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_isExpressionNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (bool)((Piavca::Avatar const *)arg1)->isExpressionNull(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setRootPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_setRootPosition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setRootPosition" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_setRootPosition" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_setRootPosition" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      (arg1)->setRootPosition((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getRootPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getRootPosition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getRootPosition" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (arg1)->getRootPosition(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setRootOrientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Quat *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_setRootOrientation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setRootOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_setRootOrientation" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_setRootOrientation" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Quat * >(argp2);
  {
    try {
      (arg1)->setRootOrientation((Piavca::Quat const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setRootAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_setRootAngle",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setRootAngle" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_setRootAngle" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setRootAngle(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setRootAngleDeg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_setRootAngleDeg",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setRootAngleDeg" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_setRootAngleDeg" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setRootAngleDeg(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getRootOrientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getRootOrientation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getRootOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (arg1)->getRootOrientation(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_createJoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::tstring arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_createJoint",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_createJoint" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (bool)(arg1)->createJoint(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_begin" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (int)(arg1)->begin(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_end" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (int)(arg1)->end(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_next",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_next" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_next" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)(arg1)->next(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_getParent",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getParent" "', argument " "1"" of type '" "Piavca::Avatar const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_getParent" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (int)((Piavca::Avatar const *)arg1)->getParent(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getJointName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_getJointName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getJointName" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_getJointName" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (arg1)->getJointName(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_isNull" "', argument " "1"" of type '" "Piavca::Avatar const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (bool)((Piavca::Avatar const *)arg1)->isNull(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_hasChanged(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_hasChanged",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_hasChanged" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_hasChanged" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (bool)(arg1)->hasChanged(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_clearChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_clearChange",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_clearChange" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_clearChange" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->clearChange(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setJointOrientation__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::Quat *arg3 = 0 ;
  Piavca::jointCoord arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Avatar_setJointOrientation",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setJointOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_setJointOrientation" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Avatar_setJointOrientation" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_setJointOrientation" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Quat * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Avatar_setJointOrientation" "', argument " "4"" of type '" "Piavca::jointCoord""'");
  } 
  arg4 = static_cast< Piavca::jointCoord >(val4);
  {
    try {
      (arg1)->setJointOrientation(arg2,(Piavca::Quat const &)*arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setJointOrientation__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::Quat *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_setJointOrientation",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setJointOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_setJointOrientation" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Avatar_setJointOrientation" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_setJointOrientation" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Quat * >(argp3);
  {
    try {
      (arg1)->setJointOrientation(arg2,(Piavca::Quat const &)*arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getJointOrientation__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::jointCoord arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_getJointOrientation",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getJointOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_getJointOrientation" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Avatar_getJointOrientation" "', argument " "3"" of type '" "Piavca::jointCoord""'");
  } 
  arg3 = static_cast< Piavca::jointCoord >(val3);
  {
    try {
      result = (arg1)->getJointOrientation(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getJointOrientation__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_getJointOrientation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getJointOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_getJointOrientation" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (arg1)->getJointOrientation(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setJointOrientation__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  SwigValueWrapper<std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > > > arg2 ;
  Piavca::jointCoord arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_setJointOrientation",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setJointOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorTstd__pairTint_Piavca__Quat_t_std__allocatorTstd__pairTint_Piavca__Quat_t_t_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_setJointOrientation" "', argument " "2"" of type '" "std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_setJointOrientation" "', argument " "2"" of type '" "std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > >""'");
    } else {
      std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > > * temp = reinterpret_cast< std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Avatar_setJointOrientation" "', argument " "3"" of type '" "Piavca::jointCoord""'");
  } 
  arg3 = static_cast< Piavca::jointCoord >(val3);
  {
    try {
      (arg1)->setJointOrientation(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setJointOrientation__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  SwigValueWrapper<std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_setJointOrientation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setJointOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorTstd__pairTint_Piavca__Quat_t_std__allocatorTstd__pairTint_Piavca__Quat_t_t_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_setJointOrientation" "', argument " "2"" of type '" "std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_setJointOrientation" "', argument " "2"" of type '" "std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > >""'");
    } else {
      std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > > * temp = reinterpret_cast< std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (arg1)->setJointOrientation(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setJointPosition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::Vec *arg3 = 0 ;
  Piavca::jointCoord arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Avatar_setJointPosition",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setJointPosition" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_setJointPosition" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Avatar_setJointPosition" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_setJointPosition" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Vec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Avatar_setJointPosition" "', argument " "4"" of type '" "Piavca::jointCoord""'");
  } 
  arg4 = static_cast< Piavca::jointCoord >(val4);
  {
    try {
      (arg1)->setJointPosition(arg2,(Piavca::Vec const &)*arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setJointPosition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::Vec *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_setJointPosition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setJointPosition" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_setJointPosition" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Avatar_setJointPosition" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_setJointPosition" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Vec * >(argp3);
  {
    try {
      (arg1)->setJointPosition(arg2,(Piavca::Vec const &)*arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setJointPosition(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Vec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Avatar_setJointPosition__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Vec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Avatar_setJointPosition__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_setJointPosition'.\n  Possible C/C++ prototypes are:\n    setJointPosition(int,Piavca::Vec const &,Piavca::jointCoord)\n    setJointPosition(int,Piavca::Vec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getJointBasePosition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::jointCoord arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_getJointBasePosition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getJointBasePosition" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_getJointBasePosition" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Avatar_getJointBasePosition" "', argument " "3"" of type '" "Piavca::jointCoord""'");
  } 
  arg3 = static_cast< Piavca::jointCoord >(val3);
  {
    try {
      result = (arg1)->getJointBasePosition(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getJointBasePosition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_getJointBasePosition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getJointBasePosition" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_getJointBasePosition" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (arg1)->getJointBasePosition(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_scaleRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Vec arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_scaleRoot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_scaleRoot" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_scaleRoot" "', argument " "2"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_scaleRoot" "', argument " "2"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (arg1)->scaleRoot(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_scaleJoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::Vec arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_scaleJoint",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_scaleJoint" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_scaleJoint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Avatar_scaleJoint" "', argument " "3"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_scaleJoint" "', argument " "3"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      (arg1)->scaleJoint(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getBoundBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Bound result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getBoundBox",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getBoundBox" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (arg1)->getBoundBox(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Bound(static_cast< const Piavca::Bound& >(result))), SWIGTYPE_p_Piavca__Bound, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getBaseBoundBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Bound result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getBaseBoundBox",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getBaseBoundBox" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (arg1)->getBaseBoundBox(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Bound(static_cast< const Piavca::Bound& >(result))), SWIGTYPE_p_Piavca__Bound, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_timeStep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_timeStep",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_timeStep" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_timeStep" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->timeStep(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_loadMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_loadMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_loadMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_loadMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->loadMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_unloadMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_unloadMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_unloadMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->unloadMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getMotion" "', argument " "1"" of type '" "Piavca::Avatar const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (Piavca::Motion *)((Piavca::Avatar const *)arg1)->getMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Avatar_getMotion__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Avatar_getMotion__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_getMotion'.\n  Possible C/C++ prototypes are:\n    getMotion()\n    getMotion()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_playMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->playMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_playMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_playMotion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->playMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_playMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_playMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Avatar_playMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->playMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Avatar_playMotion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Avatar_playMotion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Avatar_playMotion__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_playMotion'.\n  Possible C/C++ prototypes are:\n    playMotion()\n    playMotion(float)\n    playMotion(Piavca::Motion *,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playMotionDirect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_playMotionDirect",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playMotionDirect" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_playMotionDirect" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->playMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_stopMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_stopMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_stopMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->stopMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_restartMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_restartMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_restartMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->restartMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setMotionStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_setMotionStartTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setMotionStartTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_setMotionStartTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setMotionStartTime(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getMotionStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getMotionStartTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getMotionStartTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (float)(arg1)->getMotionStartTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getMotionEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getMotionEndTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getMotionEndTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (float)(arg1)->getMotionEndTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_showMotionAtTime__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Avatar_showMotionAtTime",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_showMotionAtTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_showMotionAtTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Avatar_showMotionAtTime" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Avatar_showMotionAtTime" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->showMotionAtTime(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_showMotionAtTime__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_showMotionAtTime",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_showMotionAtTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_showMotionAtTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Avatar_showMotionAtTime" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  {
    try {
      (arg1)->showMotionAtTime(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_showMotionAtTime__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_showMotionAtTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_showMotionAtTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_showMotionAtTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->showMotionAtTime(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_showMotionAtTime(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Avatar_showMotionAtTime__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Avatar_showMotionAtTime__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Avatar_showMotionAtTime__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_showMotionAtTime'.\n  Possible C/C++ prototypes are:\n    showMotionAtTime(float,Piavca::Motion *,bool)\n    showMotionAtTime(float,Piavca::Motion *)\n    showMotionAtTime(float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_loadFacialMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_loadFacialMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_loadFacialMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_loadFacialMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->loadFacialMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_unloadFacialMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_unloadFacialMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_unloadFacialMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->unloadFacialMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getFacialMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getFacialMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getFacialMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getFacialMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getFacialMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getFacialMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getFacialMotion" "', argument " "1"" of type '" "Piavca::Avatar const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (Piavca::Motion *)((Piavca::Avatar const *)arg1)->getFacialMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getFacialMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Avatar_getFacialMotion__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Avatar_getFacialMotion__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_getFacialMotion'.\n  Possible C/C++ prototypes are:\n    getFacialMotion()\n    getFacialMotion()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playFacialMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_playFacialMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playFacialMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->playFacialMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playFacialMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_playFacialMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playFacialMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_playFacialMotion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->playFacialMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playFacialMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_playFacialMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playFacialMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_playFacialMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Avatar_playFacialMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->playFacialMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playFacialMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_playFacialMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playFacialMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_playFacialMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->playFacialMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playFacialMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Avatar_playFacialMotion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Avatar_playFacialMotion__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Avatar_playFacialMotion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Avatar_playFacialMotion__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_playFacialMotion'.\n  Possible C/C++ prototypes are:\n    playFacialMotion()\n    playFacialMotion(float)\n    playFacialMotion(Piavca::Motion *,float)\n    playFacialMotion(Piavca::Motion *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_stopFacialMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_stopFacialMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_stopFacialMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->stopFacialMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_restartFacialMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_restartFacialMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_restartFacialMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->restartFacialMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setFacialMotionStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_setFacialMotionStartTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setFacialMotionStartTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_setFacialMotionStartTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setFacialMotionStartTime(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getFacialMotionStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getFacialMotionStartTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getFacialMotionStartTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (float)(arg1)->getFacialMotionStartTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getFacialMotionEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getFacialMotionEndTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getFacialMotionEndTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (float)(arg1)->getFacialMotionEndTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_showFacialMotionAtTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_showFacialMotionAtTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_showFacialMotionAtTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_showFacialMotionAtTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->showFacialMotionAtTime(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_loadScaleMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_loadScaleMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_loadScaleMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_loadScaleMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->loadScaleMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_unloadScaleMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_unloadScaleMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_unloadScaleMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->unloadScaleMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getScaleMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getScaleMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getScaleMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getScaleMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getScaleMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getScaleMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getScaleMotion" "', argument " "1"" of type '" "Piavca::Avatar const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (Piavca::Motion *)((Piavca::Avatar const *)arg1)->getScaleMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getScaleMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Avatar_getScaleMotion__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Avatar_getScaleMotion__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_getScaleMotion'.\n  Possible C/C++ prototypes are:\n    getScaleMotion()\n    getScaleMotion()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playScaleMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_playScaleMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playScaleMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->playScaleMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playScaleMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_playScaleMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playScaleMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_playScaleMotion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->playScaleMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playScaleMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_playScaleMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playScaleMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_playScaleMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Avatar_playScaleMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->playScaleMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playScaleMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_playScaleMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_playScaleMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_playScaleMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->playScaleMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_playScaleMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Avatar_playScaleMotion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Avatar_playScaleMotion__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Avatar_playScaleMotion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Avatar_playScaleMotion__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_playScaleMotion'.\n  Possible C/C++ prototypes are:\n    playScaleMotion()\n    playScaleMotion(float)\n    playScaleMotion(Piavca::Motion *,float)\n    playScaleMotion(Piavca::Motion *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_stopScaleMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_stopScaleMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_stopScaleMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->stopScaleMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_restartScaleMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_restartScaleMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_restartScaleMotion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      (arg1)->restartScaleMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setScaleMotionStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_setScaleMotionStartTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setScaleMotionStartTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_setScaleMotionStartTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setScaleMotionStartTime(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getScaleMotionStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getScaleMotionStartTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getScaleMotionStartTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (float)(arg1)->getScaleMotionStartTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getScaleMotionEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getScaleMotionEndTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getScaleMotionEndTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (float)(arg1)->getScaleMotionEndTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_showScaleMotionAtTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_showScaleMotionAtTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_showScaleMotionAtTime" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_showScaleMotionAtTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->showScaleMotionAtTime(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_registerCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::AvatarTimeCallback *arg2 = (Piavca::AvatarTimeCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_registerCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_registerCallback" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__AvatarTimeCallback, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_registerCallback" "', argument " "2"" of type '" "Piavca::AvatarTimeCallback *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::AvatarTimeCallback * >(argp2);
  {
    try {
      (arg1)->registerCallback(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_removeCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_removeCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_removeCallback" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->removeCallback(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getCallback__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::AvatarTimeCallback *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_getCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getCallback" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (Piavca::AvatarTimeCallback *)(arg1)->getCallback(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarTimeCallback, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getNumCallbacks(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_getNumCallbacks",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getNumCallbacks" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (int)(arg1)->getNumCallbacks(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getCallback__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::AvatarTimeCallback *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_getCallback",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getCallback" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Avatar_getCallback" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (Piavca::AvatarTimeCallback *)(arg1)->getCallback(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarTimeCallback, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getCallback(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Avatar_getCallback__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Avatar_getCallback__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_getCallback'.\n  Possible C/C++ prototypes are:\n    getCallback(Piavca::tstring)\n    getCallback(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_event",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_event" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->event(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setFacialExpressionWeight__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_setFacialExpressionWeight",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setFacialExpressionWeight" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_setFacialExpressionWeight" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Avatar_setFacialExpressionWeight" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (bool)Piavca_Avatar_setFacialExpressionWeight__SWIG_2(arg1,(char const *)arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setFacialExpressionWeight(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Avatar_setFacialExpressionWeight__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Avatar_setFacialExpressionWeight__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Avatar_setFacialExpressionWeight__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_setFacialExpressionWeight'.\n  Possible C/C++ prototypes are:\n    setFacialExpressionWeight(int,float,float)\n    setFacialExpressionWeight(int,float)\n    setFacialExpressionWeight(char const *,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getFacialExpressionWeight__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  char *arg2 = (char *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_getFacialExpressionWeight",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getFacialExpressionWeight" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_getFacialExpressionWeight" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = (float)Piavca_Avatar_getFacialExpressionWeight__SWIG_1(arg1,(char const *)arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getFacialExpressionWeight(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Avatar_getFacialExpressionWeight__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Avatar_getFacialExpressionWeight__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_getFacialExpressionWeight'.\n  Possible C/C++ prototypes are:\n    getFacialExpressionWeight(int)\n    getFacialExpressionWeight(char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setJointOrientation__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  char *arg2 = (char *) 0 ;
  Piavca::Quat *arg3 = 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Avatar_setJointOrientation",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setJointOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_setJointOrientation" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Avatar_setJointOrientation" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_setJointOrientation" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Quat * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Avatar_setJointOrientation" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  {
    try {
      Piavca_Avatar_setJointOrientation__SWIG_4(arg1,(char const *)arg2,(Piavca::Quat const &)*arg3,(char const *)arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setJointOrientation__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  char *arg2 = (char *) 0 ;
  Piavca::Quat *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_setJointOrientation",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_setJointOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_setJointOrientation" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Avatar_setJointOrientation" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_setJointOrientation" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Quat * >(argp3);
  {
    try {
      Piavca_Avatar_setJointOrientation__SWIG_4(arg1,(char const *)arg2,(Piavca::Quat const &)*arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_setJointOrientation(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorTstd__pairTint_Piavca__Quat_t_std__allocatorTstd__pairTint_Piavca__Quat_t_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Avatar_setJointOrientation__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorTstd__pairTint_Piavca__Quat_t_std__allocatorTstd__pairTint_Piavca__Quat_t_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Avatar_setJointOrientation__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Quat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Avatar_setJointOrientation__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Quat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Avatar_setJointOrientation__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Quat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Avatar_setJointOrientation__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Quat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsCharPtrAndSize(argv[3], 0, NULL, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Avatar_setJointOrientation__SWIG_4(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_setJointOrientation'.\n  Possible C/C++ prototypes are:\n    setJointOrientation(int,Piavca::Quat const &,Piavca::jointCoord)\n    setJointOrientation(int,Piavca::Quat const &)\n    setJointOrientation(std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > >,Piavca::jointCoord)\n    setJointOrientation(std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > >)\n    setJointOrientation(char const *,Piavca::Quat const &,char const *)\n    setJointOrientation(char const *,Piavca::Quat const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getJointOrientation__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_getJointOrientation",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getJointOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_getJointOrientation" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Avatar_getJointOrientation" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      result = Piavca_Avatar_getJointOrientation__SWIG_2(arg1,(char const *)arg2,(char const *)arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getJointOrientation__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  char *arg2 = (char *) 0 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_getJointOrientation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getJointOrientation" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_getJointOrientation" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = Piavca_Avatar_getJointOrientation__SWIG_2(arg1,(char const *)arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getJointOrientation(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Avatar_getJointOrientation__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Avatar_getJointOrientation__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Avatar_getJointOrientation__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Avatar_getJointOrientation__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_getJointOrientation'.\n  Possible C/C++ prototypes are:\n    getJointOrientation(int,Piavca::jointCoord)\n    getJointOrientation(int)\n    getJointOrientation(char const *,char const *)\n    getJointOrientation(char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getJointBasePosition__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Avatar_getJointBasePosition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getJointBasePosition" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_getJointBasePosition" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Avatar_getJointBasePosition" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    try {
      result = Piavca_Avatar_getJointBasePosition__SWIG_2(arg1,(char const *)arg2,(char const *)arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getJointBasePosition__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  char *arg2 = (char *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_getJointBasePosition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_getJointBasePosition" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_getJointBasePosition" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      result = Piavca_Avatar_getJointBasePosition__SWIG_2(arg1,(char const *)arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_getJointBasePosition(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Avatar_getJointBasePosition__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Avatar_getJointBasePosition__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Avatar_getJointBasePosition__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Avatar_getJointBasePosition__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_getJointBasePosition'.\n  Possible C/C++ prototypes are:\n    getJointBasePosition(int,Piavca::jointCoord)\n    getJointBasePosition(int)\n    getJointBasePosition(char const *,char const *)\n    getJointBasePosition(char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_play_motion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_play_motion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_play_motion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_play_motion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      Piavca_Avatar_play_motion__SWIG_0(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_play_motion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_play_motion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_play_motion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_play_motion" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      Piavca_Avatar_play_motion__SWIG_1(arg1,(char const *)arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_play_motion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Avatar_play_motion__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Avatar_play_motion__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_play_motion'.\n  Possible C/C++ prototypes are:\n    play_motion(Piavca::Motion *)\n    play_motion(char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_add_background_motion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_add_background_motion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_add_background_motion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_add_background_motion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      Piavca_Avatar_add_background_motion__SWIG_0(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_add_background_motion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_add_background_motion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_add_background_motion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_add_background_motion" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      Piavca_Avatar_add_background_motion__SWIG_1(arg1,(char const *)arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_add_background_motion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Avatar_add_background_motion__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Avatar_add_background_motion__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'Avatar_add_background_motion'.\n  Possible C/C++ prototypes are:\n    add_background_motion(Piavca::Motion *)\n    add_background_motion(char const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_interrupt_motion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Avatar_interrupt_motion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_interrupt_motion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      Piavca_Avatar_interrupt_motion(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_stop_motion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_stop_motion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_stop_motion" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_stop_motion" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      Piavca_Avatar_stop_motion(arg1,(char const *)arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_reposition_relative(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_reposition_relative",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_reposition_relative" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_reposition_relative" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_reposition_relative" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      Piavca_Avatar_reposition_relative(arg1,(Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Avatar_reposition_absolute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Avatar_reposition_absolute",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Avatar_reposition_absolute" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Avatar_reposition_absolute" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Avatar_reposition_absolute" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      Piavca_Avatar_reposition_absolute(arg1,(Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Avatar_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__Avatar, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_queueElement_mot_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:queueElement_mot_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__queueElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "queueElement_mot_set" "', argument " "1"" of type '" "Piavca::queueElement *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::queueElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "queueElement_mot_set" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  if (arg1) (arg1)->mot = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_queueElement_mot_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:queueElement_mot_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__queueElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "queueElement_mot_get" "', argument " "1"" of type '" "Piavca::queueElement *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::queueElement * >(argp1);
  result = (Piavca::Motion *) ((arg1)->mot);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_queueElement_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
  Piavca::tstring *arg2 = (Piavca::tstring *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:queueElement_name_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__queueElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "queueElement_name_set" "', argument " "1"" of type '" "Piavca::queueElement *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::queueElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__string, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "queueElement_name_set" "', argument " "2"" of type '" "Piavca::tstring *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::tstring * >(argp2);
  if (arg1) (arg1)->name = *arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_queueElement_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
  Piavca::tstring *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:queueElement_name_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__queueElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "queueElement_name_get" "', argument " "1"" of type '" "Piavca::queueElement *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::queueElement * >(argp1);
  result = (Piavca::tstring *)& ((arg1)->name);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_queueElement_atTime_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:queueElement_atTime_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__queueElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "queueElement_atTime_set" "', argument " "1"" of type '" "Piavca::queueElement *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::queueElement * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "queueElement_atTime_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->atTime = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_queueElement_atTime_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:queueElement_atTime_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__queueElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "queueElement_atTime_get" "', argument " "1"" of type '" "Piavca::queueElement *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::queueElement * >(argp1);
  result = (float) ((arg1)->atTime);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_queueElement_background_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:queueElement_background_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__queueElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "queueElement_background_set" "', argument " "1"" of type '" "Piavca::queueElement *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::queueElement * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "queueElement_background_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->background = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_queueElement_background_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:queueElement_background_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__queueElement, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "queueElement_background_get" "', argument " "1"" of type '" "Piavca::queueElement *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::queueElement * >(argp1);
  result = (bool) ((arg1)->background);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_queueElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::queueElement *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_queueElement")) SWIG_fail;
  {
    try {
      result = (Piavca::queueElement *)new Piavca::queueElement(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_queueElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  bool arg4 ;
  Piavca::queueElement *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_queueElement",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_queueElement" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_queueElement" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_queueElement" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = (Piavca::queueElement *)new Piavca::queueElement(arg1,arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_queueElement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  Piavca::queueElement *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_queueElement",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_queueElement" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_queueElement" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (Piavca::queueElement *)new Piavca::queueElement(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_queueElement__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::queueElement *arg1 = 0 ;
  Piavca::queueElement *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_queueElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__queueElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_queueElement" "', argument " "1"" of type '" "Piavca::queueElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_queueElement" "', argument " "1"" of type '" "Piavca::queueElement const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::queueElement * >(argp1);
  {
    try {
      result = (Piavca::queueElement *)new Piavca::queueElement((Piavca::queueElement const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_queueElement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_queueElement__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__queueElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_queueElement__SWIG_3(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_queueElement__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_queueElement__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_queueElement'.\n  Possible C/C++ prototypes are:\n    Piavca::queueElement()\n    Piavca::queueElement(Piavca::tstring,Piavca::Motion *,float,bool)\n    Piavca::queueElement(Piavca::tstring,Piavca::Motion *,float)\n    Piavca::queueElement(Piavca::queueElement const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_queueElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_queueElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_queueElement" "', argument " "1"" of type '" "Piavca::queueElement *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::queueElement * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *queueElement_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__queueElement, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_AvatarMotionQueue__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AvatarMotionQueue")) SWIG_fail;
  {
    try {
      result = (Piavca::AvatarMotionQueue *)new Piavca::AvatarMotionQueue(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarMotionQueue__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  bool arg3 ;
  int arg4 ;
  Piavca::AvatarMotionQueue *result = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_AvatarMotionQueue",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AvatarMotionQueue" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AvatarMotionQueue" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_AvatarMotionQueue" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_AvatarMotionQueue" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (Piavca::AvatarMotionQueue *)new Piavca::AvatarMotionQueue(arg1,arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarMotionQueue__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  bool arg3 ;
  Piavca::AvatarMotionQueue *result = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_AvatarMotionQueue",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AvatarMotionQueue" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AvatarMotionQueue" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_AvatarMotionQueue" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = (Piavca::AvatarMotionQueue *)new Piavca::AvatarMotionQueue(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarMotionQueue__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  Piavca::AvatarMotionQueue *result = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_AvatarMotionQueue",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AvatarMotionQueue" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AvatarMotionQueue" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (Piavca::AvatarMotionQueue *)new Piavca::AvatarMotionQueue(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarMotionQueue__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  Piavca::AvatarMotionQueue *result = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_AvatarMotionQueue",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AvatarMotionQueue" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try {
      result = (Piavca::AvatarMotionQueue *)new Piavca::AvatarMotionQueue(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarMotionQueue(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_AvatarMotionQueue__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_AvatarMotionQueue__SWIG_4(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_AvatarMotionQueue__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_AvatarMotionQueue__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_AvatarMotionQueue__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_AvatarMotionQueue'.\n  Possible C/C++ prototypes are:\n    Piavca::AvatarMotionQueue()\n    Piavca::AvatarMotionQueue(float,float,bool,int)\n    Piavca::AvatarMotionQueue(float,float,bool)\n    Piavca::AvatarMotionQueue(float,float)\n    Piavca::AvatarMotionQueue(float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AvatarMotionQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AvatarMotionQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AvatarMotionQueue" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_getQueue__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  bool arg2 ;
  Piavca::AvatarMotionQueue *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_getQueue",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_getQueue" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AvatarMotionQueue_getQueue" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      result = (Piavca::AvatarMotionQueue *)Piavca::AvatarMotionQueue::getQueue(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_getQueue__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  Piavca::AvatarMotionQueue *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_getQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_getQueue" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (Piavca::AvatarMotionQueue *)Piavca::AvatarMotionQueue::getQueue(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_getQueue(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_AvatarMotionQueue_getQueue__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AvatarMotionQueue_getQueue__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'AvatarMotionQueue_getQueue'.\n  Possible C/C++ prototypes are:\n    getQueue(Piavca::Avatar *,bool)\n    Piavca::AvatarMotionQueue::getQueue(Piavca::Avatar *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_hasQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_hasQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_hasQueue" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  {
    try {
      result = (bool)Piavca::AvatarMotionQueue::hasQueue(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_init",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_init" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarMotionQueue_init" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    try {
      (arg1)->init(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_timeStep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AvatarMotionQueue_timeStep",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_timeStep" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarMotionQueue_timeStep" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AvatarMotionQueue_timeStep" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->timeStep(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_isFacial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_isFacial",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_isFacial" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      result = (bool)(arg1)->isFacial(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_getCurrentMotionStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_getCurrentMotionStart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_getCurrentMotionStart" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      result = (float)(arg1)->getCurrentMotionStart(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_reblend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_reblend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_reblend" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      (arg1)->reblend(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_setBlendInterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_setBlendInterval",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_setBlendInterval" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AvatarMotionQueue_setBlendInterval" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setBlendInterval(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_enqueueMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:AvatarMotionQueue_enqueueMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_enqueueMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AvatarMotionQueue_enqueueMotion" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AvatarMotionQueue_enqueueMotion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      (arg1)->enqueueMotion(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_enqueueMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AvatarMotionQueue_enqueueMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_enqueueMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AvatarMotionQueue_enqueueMotion" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  {
    try {
      (arg1)->enqueueMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_enqueueMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AvatarMotionQueue_enqueueMotion__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_AvatarMotionQueue_enqueueMotion__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'AvatarMotionQueue_enqueueMotion'.\n  Possible C/C++ prototypes are:\n    enqueueMotion(Piavca::tstring,Piavca::Motion *,float)\n    enqueueMotion(Piavca::tstring,Piavca::Motion *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_enqueueRandomMotions__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_enqueueRandomMotions",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_enqueueRandomMotions" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AvatarMotionQueue_enqueueRandomMotions" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->enqueueRandomMotions(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_enqueueRandomMotions__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_enqueueRandomMotions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_enqueueRandomMotions" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      (arg1)->enqueueRandomMotions(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_enqueueRandomMotions(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_AvatarMotionQueue_enqueueRandomMotions__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AvatarMotionQueue_enqueueRandomMotions__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'AvatarMotionQueue_enqueueRandomMotions'.\n  Possible C/C++ prototypes are:\n    enqueueRandomMotions(int)\n    enqueueRandomMotions()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_queueTopIsBackground(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_queueTopIsBackground",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_queueTopIsBackground" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      result = (bool)(arg1)->queueTopIsBackground(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_queueTopTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_queueTopTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_queueTopTime" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      result = (float)(arg1)->queueTopTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_dequeueMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_dequeueMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_dequeueMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->dequeueMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_getQueueSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_getQueueSize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_getQueueSize" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      result = (int)(arg1)->getQueueSize(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_updateDelay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_updateDelay",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_updateDelay" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AvatarMotionQueue_updateDelay" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->updateDelay(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_clearQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_clearQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_clearQueue" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      (arg1)->clearQueue(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_removeMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_removeMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_removeMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->removeMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_pauseMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_pauseMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_pauseMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->pauseMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_unpauseMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_unpauseMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_unpauseMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->unpauseMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_clearAllBackgroundMotions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_clearAllBackgroundMotions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_clearAllBackgroundMotions" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      (arg1)->clearAllBackgroundMotions(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_clearFinishedBackgroundMotions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_clearFinishedBackgroundMotions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_clearFinishedBackgroundMotions" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      (arg1)->clearFinishedBackgroundMotions(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_removeBackgroundMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_removeBackgroundMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_removeBackgroundMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->removeBackgroundMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_removeBackgroundMotionByType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  type_info *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_removeBackgroundMotionByType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_removeBackgroundMotionByType" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__type_info,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarMotionQueue_removeBackgroundMotionByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AvatarMotionQueue_removeBackgroundMotionByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  arg2 = reinterpret_cast< type_info * >(argp2);
  {
    try {
      (arg1)->removeBackgroundMotionByType((type_info const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_pauseBackgroundMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_pauseBackgroundMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_pauseBackgroundMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->pauseBackgroundMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_unpauseBackgroundMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_unpauseBackgroundMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_unpauseBackgroundMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->unpauseBackgroundMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_interrupt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_interrupt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_interrupt" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      (arg1)->interrupt(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_repositionRelative(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_repositionRelative",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_repositionRelative" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarMotionQueue_repositionRelative" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AvatarMotionQueue_repositionRelative" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      (arg1)->repositionRelative((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_repositionAbsolute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_repositionAbsolute",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_repositionAbsolute" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarMotionQueue_repositionAbsolute" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AvatarMotionQueue_repositionAbsolute" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      (arg1)->repositionAbsolute((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_getMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_getMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_getMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_blendMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Avatar *arg3 = (Piavca::Avatar *) 0 ;
  float arg4 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:AvatarMotionQueue_blendMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_blendMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarMotionQueue_blendMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AvatarMotionQueue_blendMotion" "', argument " "3"" of type '" "Piavca::Avatar *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Avatar * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AvatarMotionQueue_blendMotion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (Piavca::Motion *)(arg1)->blendMotion(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_addBackgroundMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:AvatarMotionQueue_addBackgroundMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_addBackgroundMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AvatarMotionQueue_addBackgroundMotion" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AvatarMotionQueue_addBackgroundMotion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      (arg1)->addBackgroundMotion(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_addBackgroundMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AvatarMotionQueue_addBackgroundMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarMotionQueue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarMotionQueue_addBackgroundMotion" "', argument " "1"" of type '" "Piavca::AvatarMotionQueue *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarMotionQueue * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AvatarMotionQueue_addBackgroundMotion" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  {
    try {
      (arg1)->addBackgroundMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarMotionQueue_addBackgroundMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AvatarMotionQueue_addBackgroundMotion__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_AvatarMotionQueue_addBackgroundMotion__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'AvatarMotionQueue_addBackgroundMotion'.\n  Possible C/C++ prototypes are:\n    addBackgroundMotion(Piavca::tstring,Piavca::Motion *,float)\n    addBackgroundMotion(Piavca::tstring,Piavca::Motion *)\n");
  return NULL;
}


SWIGINTERN PyObject *AvatarMotionQueue_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Object__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Quat *arg3 = 0 ;
  Piavca::Object *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_Object",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Object" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Object" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Object" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Object" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Quat * >(argp3);
  {
    try {
      result = (Piavca::Object *)new Piavca::Object(arg1,(Piavca::Vec const &)*arg2,(Piavca::Quat const &)*arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Object, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Object__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::Object *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Object",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Object" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Object" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      result = (Piavca::Object *)new Piavca::Object(arg1,(Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Object, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Object__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::Object *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Object",&obj0)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  {
    try {
      result = (Piavca::Object *)new Piavca::Object(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Object, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Object(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Object__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Object__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Quat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_Object__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Object'.\n  Possible C/C++ prototypes are:\n    Piavca::Object(Piavca::tstring,Piavca::Vec const &,Piavca::Quat const &)\n    Piavca::Object(Piavca::tstring,Piavca::Vec const &)\n    Piavca::Object(Piavca::tstring)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Object *arg1 = (Piavca::Object *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Object_getName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_getName" "', argument " "1"" of type '" "Piavca::Object *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Object * >(argp1);
  {
    try {
      result = (arg1)->getName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_setName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Object *arg1 = (Piavca::Object *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Object_setName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_setName" "', argument " "1"" of type '" "Piavca::Object *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Object * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (arg1)->setName(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_setPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Object *arg1 = (Piavca::Object *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Object_setPosition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_setPosition" "', argument " "1"" of type '" "Piavca::Object *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Object * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Object_setPosition" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Object_setPosition" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      (arg1)->setPosition((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_getPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Object *arg1 = (Piavca::Object *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Object_getPosition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_getPosition" "', argument " "1"" of type '" "Piavca::Object *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Object * >(argp1);
  {
    try {
      result = (arg1)->getPosition(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_setOrientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Object *arg1 = (Piavca::Object *) 0 ;
  Piavca::Quat *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Object_setOrientation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_setOrientation" "', argument " "1"" of type '" "Piavca::Object *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Object * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Object_setOrientation" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Object_setOrientation" "', argument " "2"" of type '" "Piavca::Quat const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Quat * >(argp2);
  {
    try {
      (arg1)->setOrientation((Piavca::Quat const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_setAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Object *arg1 = (Piavca::Object *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Object_setAngle",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_setAngle" "', argument " "1"" of type '" "Piavca::Object *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Object * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Object_setAngle" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setAngle(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_setAngleDeg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Object *arg1 = (Piavca::Object *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Object_setAngleDeg",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_setAngleDeg" "', argument " "1"" of type '" "Piavca::Object *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Object * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Object_setAngleDeg" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setAngleDeg(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_getOrientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Object *arg1 = (Piavca::Object *) 0 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Object_getOrientation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_getOrientation" "', argument " "1"" of type '" "Piavca::Object *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Object * >(argp1);
  {
    try {
      result = (arg1)->getOrientation(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Object *arg1 = (Piavca::Object *) 0 ;
  Piavca::Vec arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Object_scale",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_scale" "', argument " "1"" of type '" "Piavca::Object *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Object * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Object_scale" "', argument " "2"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Object_scale" "', argument " "2"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (arg1)->scale(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Object_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__Object, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Pi_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Pi is read-only.");
  return 1;
}


SWIGINTERN PyObject *Pi_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_float(static_cast< float >(Piavca::Pi));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_degToRad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float result;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:degToRad",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "degToRad" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try {
      result = (float)Piavca::degToRad(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_radToDeg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float result;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:radToDeg",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "radToDeg" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try {
      result = (float)Piavca::radToDeg(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CurrentValueMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::CurrentValueMotion *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CurrentValueMotion")) SWIG_fail;
  {
    try {
      result = (Piavca::CurrentValueMotion *)new Piavca::CurrentValueMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__CurrentValueMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CurrentValueMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::CurrentValueMotion *arg1 = 0 ;
  Piavca::CurrentValueMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CurrentValueMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__CurrentValueMotion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurrentValueMotion" "', argument " "1"" of type '" "Piavca::CurrentValueMotion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurrentValueMotion" "', argument " "1"" of type '" "Piavca::CurrentValueMotion const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::CurrentValueMotion * >(argp1);
  {
    try {
      result = (Piavca::CurrentValueMotion *)new Piavca::CurrentValueMotion((Piavca::CurrentValueMotion const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__CurrentValueMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CurrentValueMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CurrentValueMotion__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__CurrentValueMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CurrentValueMotion__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_CurrentValueMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::CurrentValueMotion()\n    Piavca::CurrentValueMotion(Piavca::CurrentValueMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurrentValueMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::CurrentValueMotion *arg1 = (Piavca::CurrentValueMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CurrentValueMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__CurrentValueMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurrentValueMotion_clone" "', argument " "1"" of type '" "Piavca::CurrentValueMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::CurrentValueMotion * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->clone(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurrentValueMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::CurrentValueMotion *arg1 = (Piavca::CurrentValueMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CurrentValueMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__CurrentValueMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurrentValueMotion_getClassName" "', argument " "1"" of type '" "Piavca::CurrentValueMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::CurrentValueMotion * >(argp1);
  {
    try {
      result = (arg1)->getClassName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurrentValueMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::CurrentValueMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CurrentValueMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurrentValueMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::CurrentValueMotion *)Piavca::CurrentValueMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__CurrentValueMotion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurrentValueMotion_setFloatValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::CurrentValueMotion *arg1 = (Piavca::CurrentValueMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CurrentValueMotion_setFloatValue",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__CurrentValueMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurrentValueMotion_setFloatValue" "', argument " "1"" of type '" "Piavca::CurrentValueMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::CurrentValueMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CurrentValueMotion_setFloatValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CurrentValueMotion_setFloatValue" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->setFloatValue(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurrentValueMotion_setVecValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::CurrentValueMotion *arg1 = (Piavca::CurrentValueMotion *) 0 ;
  int arg2 ;
  Piavca::Vec *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CurrentValueMotion_setVecValue",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__CurrentValueMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurrentValueMotion_setVecValue" "', argument " "1"" of type '" "Piavca::CurrentValueMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::CurrentValueMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CurrentValueMotion_setVecValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CurrentValueMotion_setVecValue" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurrentValueMotion_setVecValue" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Vec * >(argp3);
  {
    try {
      (arg1)->setVecValue(arg2,(Piavca::Vec const &)*arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurrentValueMotion_setQuatValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::CurrentValueMotion *arg1 = (Piavca::CurrentValueMotion *) 0 ;
  int arg2 ;
  Piavca::Quat *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CurrentValueMotion_setQuatValue",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__CurrentValueMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurrentValueMotion_setQuatValue" "', argument " "1"" of type '" "Piavca::CurrentValueMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::CurrentValueMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CurrentValueMotion_setQuatValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Quat,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CurrentValueMotion_setQuatValue" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurrentValueMotion_setQuatValue" "', argument " "3"" of type '" "Piavca::Quat const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Quat * >(argp3);
  {
    try {
      (arg1)->setQuatValue(arg2,(Piavca::Quat const &)*arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CurrentValueMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::CurrentValueMotion *arg1 = (Piavca::CurrentValueMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CurrentValueMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__CurrentValueMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CurrentValueMotion" "', argument " "1"" of type '" "Piavca::CurrentValueMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::CurrentValueMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CurrentValueMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__CurrentValueMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MotionFilter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionFilter *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MotionFilter",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionFilter *)new SwigDirector_MotionFilter(arg1); 
      } else {
        result = (Piavca::MotionFilter *)new Piavca::MotionFilter(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionFilter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::MotionFilter *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MotionFilter",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionFilter" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionFilter *)new SwigDirector_MotionFilter(arg1,arg2); 
      } else {
        result = (Piavca::MotionFilter *)new Piavca::MotionFilter(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionFilter__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionFilter *arg2 = 0 ;
  Piavca::MotionFilter *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MotionFilter",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__MotionFilter,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionFilter" "', argument " "2"" of type '" "Piavca::MotionFilter const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MotionFilter" "', argument " "2"" of type '" "Piavca::MotionFilter const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MotionFilter * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionFilter *)new SwigDirector_MotionFilter(arg1,(Piavca::MotionFilter const &)*arg2); 
      } else {
        result = (Piavca::MotionFilter *)new Piavca::MotionFilter((Piavca::MotionFilter const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionFilter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_MotionFilter__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__MotionFilter, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MotionFilter__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MotionFilter__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_MotionFilter'.\n  Possible C/C++ prototypes are:\n    Piavca::MotionFilter(PyObject *)\n    Piavca::MotionFilter(PyObject *,Piavca::Motion *)\n    Piavca::MotionFilter(PyObject *,Piavca::MotionFilter const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MotionFilter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MotionFilter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MotionFilter" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_clone" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::MotionFilter::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_getClassName" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MotionFilter::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::MotionFilter *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::MotionFilter *)Piavca::MotionFilter::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_printInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_printInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_printInfo" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MotionFilter::printInfo();
        } else {
          (arg1)->printInfo();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_findSub(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_findSub",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_findSub" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::MotionFilter::findSub(arg2);
        } else {
          result = (Piavca::Motion *)(arg1)->findSub(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_findSubByType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  type_info *arg2 = 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_findSubByType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_findSubByType" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__type_info,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MotionFilter_findSubByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MotionFilter_findSubByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  arg2 = reinterpret_cast< type_info * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::MotionFilter::findSubByType((type_info const &)*arg2);
        } else {
          result = (Piavca::Motion *)(arg1)->findSubByType((type_info const &)*arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_load" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MotionFilter_load" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MotionFilter::load(arg2);
        } else {
          (arg1)->load(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_unload(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_unload",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_unload" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MotionFilter::unload();
        } else {
          (arg1)->unload();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_loaded(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_loaded",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_loaded" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::MotionFilter::loaded();
        } else {
          result = (bool)(arg1)->loaded();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_preFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_preFrame",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_preFrame" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionFilter_preFrame" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MotionFilter::preFrame(arg2);
        } else {
          (arg1)->preFrame(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_getAvatar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  Piavca::Avatar *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_getAvatar",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_getAvatar" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Avatar *)(arg1)->Piavca::MotionFilter::getAvatar();
        } else {
          result = (Piavca::Avatar *)(arg1)->getAvatar();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_setStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_setStartTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_setStartTime" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionFilter_setStartTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MotionFilter::setStartTime(arg2);
        } else {
          (arg1)->setStartTime(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_reset" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MotionFilter::reset();
        } else {
          (arg1)->reset();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_event",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_event" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MotionFilter::event(arg2);
        } else {
          (arg1)->event(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_cleanRecursionState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_cleanRecursionState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_cleanRecursionState" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MotionFilter::cleanRecursionState();
        } else {
          (arg1)->cleanRecursionState();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_setMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_setMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_setMotion" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MotionFilter_setMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->setMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_getMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_getMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_getMotion" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_getMotionLength" "', argument " "1"" of type '" "Piavca::MotionFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::MotionFilter const *)arg1)->Piavca::MotionFilter::getMotionLength();
        } else {
          result = (float)((Piavca::MotionFilter const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_isFacial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_isFacial",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_isFacial" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::MotionFilter::isFacial();
        } else {
          result = (bool)(arg1)->isFacial();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_isRandomAccess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionFilter_isRandomAccess",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_isRandomAccess" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::MotionFilter::isRandomAccess();
        } else {
          result = (bool)(arg1)->isRandomAccess();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_isNull" "', argument " "1"" of type '" "Piavca::MotionFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionFilter_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)((Piavca::MotionFilter const *)arg1)->Piavca::MotionFilter::isNull(arg2);
        } else {
          result = (bool)((Piavca::MotionFilter const *)arg1)->isNull(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_getTrackType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_getTrackType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_getTrackType" "', argument " "1"" of type '" "Piavca::MotionFilter const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionFilter_getTrackType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (int)((Piavca::MotionFilter const *)arg1)->Piavca::MotionFilter::getTrackType(arg2);
        } else {
          result = (int)((Piavca::MotionFilter const *)arg1)->getTrackType(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionFilter_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionFilter_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionFilter_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::MotionFilter::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionFilter_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionFilter_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionFilter_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MotionFilter::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionFilter_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionFilter_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionFilter_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionFilter_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionFilter_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MotionFilter::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_MotionFilter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_MotionFilter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionFilter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_MotionFilter" "', argument " "1"" of type '" "Piavca::MotionFilter *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionFilter * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MotionFilter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__MotionFilter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_TwoMotionCombiner__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::TwoMotionCombiner *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_TwoMotionCombiner",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TwoMotionCombiner *)new SwigDirector_TwoMotionCombiner(arg1); 
      } else {
        result = (Piavca::TwoMotionCombiner *)new Piavca::TwoMotionCombiner(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TwoMotionCombiner__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  Piavca::TwoMotionCombiner *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_TwoMotionCombiner",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TwoMotionCombiner" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TwoMotionCombiner" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TwoMotionCombiner *)new SwigDirector_TwoMotionCombiner(arg1,arg2,arg3); 
      } else {
        result = (Piavca::TwoMotionCombiner *)new Piavca::TwoMotionCombiner(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TwoMotionCombiner__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::TwoMotionCombiner *arg2 = 0 ;
  Piavca::TwoMotionCombiner *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_TwoMotionCombiner",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__TwoMotionCombiner,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TwoMotionCombiner" "', argument " "2"" of type '" "Piavca::TwoMotionCombiner const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TwoMotionCombiner" "', argument " "2"" of type '" "Piavca::TwoMotionCombiner const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TwoMotionCombiner *)new SwigDirector_TwoMotionCombiner(arg1,(Piavca::TwoMotionCombiner const &)*arg2); 
      } else {
        result = (Piavca::TwoMotionCombiner *)new Piavca::TwoMotionCombiner((Piavca::TwoMotionCombiner const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TwoMotionCombiner(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_TwoMotionCombiner__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__TwoMotionCombiner, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_TwoMotionCombiner__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_TwoMotionCombiner__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_TwoMotionCombiner'.\n  Possible C/C++ prototypes are:\n    Piavca::TwoMotionCombiner(PyObject *)\n    Piavca::TwoMotionCombiner(PyObject *,Piavca::Motion *,Piavca::Motion *)\n    Piavca::TwoMotionCombiner(PyObject *,Piavca::TwoMotionCombiner const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TwoMotionCombiner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TwoMotionCombiner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TwoMotionCombiner" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_clone" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::TwoMotionCombiner::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_getClassName" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::TwoMotionCombiner::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::TwoMotionCombiner *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::TwoMotionCombiner *)Piavca::TwoMotionCombiner::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_printInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_printInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_printInfo" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::TwoMotionCombiner::printInfo();
        } else {
          (arg1)->printInfo();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_findSub(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_findSub",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_findSub" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::TwoMotionCombiner::findSub(arg2);
        } else {
          result = (Piavca::Motion *)(arg1)->findSub(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_findSubByType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  type_info *arg2 = 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_findSubByType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_findSubByType" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__type_info,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoMotionCombiner_findSubByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TwoMotionCombiner_findSubByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  arg2 = reinterpret_cast< type_info * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::TwoMotionCombiner::findSubByType((type_info const &)*arg2);
        } else {
          result = (Piavca::Motion *)(arg1)->findSubByType((type_info const &)*arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_load" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoMotionCombiner_load" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::TwoMotionCombiner::load(arg2);
        } else {
          (arg1)->load(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_unload(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_unload",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_unload" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::TwoMotionCombiner::unload();
        } else {
          (arg1)->unload();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_loaded(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_loaded",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_loaded" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::TwoMotionCombiner::loaded();
        } else {
          result = (bool)(arg1)->loaded();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_getAvatar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  Piavca::Avatar *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_getAvatar",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_getAvatar" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Avatar *)(arg1)->Piavca::TwoMotionCombiner::getAvatar();
        } else {
          result = (Piavca::Avatar *)(arg1)->getAvatar();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_setStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_setStartTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_setStartTime" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoMotionCombiner_setStartTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::TwoMotionCombiner::setStartTime(arg2);
        } else {
          (arg1)->setStartTime(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_reset" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::TwoMotionCombiner::reset();
        } else {
          (arg1)->reset();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_event",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_event" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::TwoMotionCombiner::event(arg2);
        } else {
          (arg1)->event(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_cleanRecursionState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_cleanRecursionState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_cleanRecursionState" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::TwoMotionCombiner::cleanRecursionState();
        } else {
          (arg1)->cleanRecursionState();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_getMotionLength" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::TwoMotionCombiner const *)arg1)->Piavca::TwoMotionCombiner::getMotionLength();
        } else {
          result = (float)((Piavca::TwoMotionCombiner const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_isFacial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_isFacial",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_isFacial" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::TwoMotionCombiner::isFacial();
        } else {
          result = (bool)(arg1)->isFacial();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_isRandomAccess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_isRandomAccess",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_isRandomAccess" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::TwoMotionCombiner::isRandomAccess();
        } else {
          result = (bool)(arg1)->isRandomAccess();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_preFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_preFrame",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_preFrame" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoMotionCombiner_preFrame" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::TwoMotionCombiner::preFrame(arg2);
        } else {
          (arg1)->preFrame(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_isNull" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoMotionCombiner_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)((Piavca::TwoMotionCombiner const *)arg1)->Piavca::TwoMotionCombiner::isNull(arg2);
        } else {
          result = (bool)((Piavca::TwoMotionCombiner const *)arg1)->isNull(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_getTrackType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_getTrackType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_getTrackType" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TwoMotionCombiner_getTrackType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (int)((Piavca::TwoMotionCombiner const *)arg1)->Piavca::TwoMotionCombiner::getTrackType(arg2);
        } else {
          result = (int)((Piavca::TwoMotionCombiner const *)arg1)->getTrackType(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_setMotion1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_setMotion1",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_setMotion1" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoMotionCombiner_setMotion1" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->setMotion1(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_setMotion2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_setMotion2",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_setMotion2" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TwoMotionCombiner_setMotion2" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->setMotion2(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_getMotion1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_getMotion1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_getMotion1" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion1(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TwoMotionCombiner_getMotion2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_getMotion2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TwoMotionCombiner_getMotion2" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion2(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_TwoMotionCombiner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_TwoMotionCombiner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TwoMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_TwoMotionCombiner" "', argument " "1"" of type '" "Piavca::TwoMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TwoMotionCombiner * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TwoMotionCombiner_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MultiMotionCombiner__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionVec *arg2 = 0 ;
  Piavca::MultiMotionCombiner *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MultiMotionCombiner",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MultiMotionCombiner" "', argument " "2"" of type '" "Piavca::MotionVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MultiMotionCombiner" "', argument " "2"" of type '" "Piavca::MotionVec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MotionVec * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MultiMotionCombiner *)new SwigDirector_MultiMotionCombiner(arg1,(Piavca::MotionVec const &)*arg2); 
      } else {
        result = (Piavca::MultiMotionCombiner *)new Piavca::MultiMotionCombiner((Piavca::MotionVec const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MultiMotionCombiner, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MultiMotionCombiner__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MultiMotionCombiner *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MultiMotionCombiner",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MultiMotionCombiner *)new SwigDirector_MultiMotionCombiner(arg1); 
      } else {
        result = (Piavca::MultiMotionCombiner *)new Piavca::MultiMotionCombiner(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MultiMotionCombiner, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MultiMotionCombiner__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MultiMotionCombiner *arg2 = 0 ;
  Piavca::MultiMotionCombiner *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MultiMotionCombiner",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__MultiMotionCombiner,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MultiMotionCombiner" "', argument " "2"" of type '" "Piavca::MultiMotionCombiner const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MultiMotionCombiner" "', argument " "2"" of type '" "Piavca::MultiMotionCombiner const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MultiMotionCombiner *)new SwigDirector_MultiMotionCombiner(arg1,(Piavca::MultiMotionCombiner const &)*arg2); 
      } else {
        result = (Piavca::MultiMotionCombiner *)new Piavca::MultiMotionCombiner((Piavca::MultiMotionCombiner const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MultiMotionCombiner, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MultiMotionCombiner(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_MultiMotionCombiner__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MultiMotionCombiner__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__MultiMotionCombiner, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MultiMotionCombiner__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_MultiMotionCombiner'.\n  Possible C/C++ prototypes are:\n    Piavca::MultiMotionCombiner(PyObject *,Piavca::MotionVec const &)\n    Piavca::MultiMotionCombiner(PyObject *)\n    Piavca::MultiMotionCombiner(PyObject *,Piavca::MultiMotionCombiner const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MultiMotionCombiner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MultiMotionCombiner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MultiMotionCombiner" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MultiMotionCombiner_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_clone" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::MultiMotionCombiner::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MultiMotionCombiner_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_getClassName" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MultiMotionCombiner::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::MultiMotionCombiner *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MultiMotionCombiner_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::MultiMotionCombiner *)Piavca::MultiMotionCombiner::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_printInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MultiMotionCombiner_printInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_printInfo" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MultiMotionCombiner::printInfo();
        } else {
          (arg1)->printInfo();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_addMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiMotionCombiner_addMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_addMotion" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MultiMotionCombiner_addMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MultiMotionCombiner::addMotion(arg2);
        } else {
          (arg1)->addMotion(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_getMotionIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  Piavca::tstring arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiMotionCombiner_getMotionIndex",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_getMotionIndex" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (int)(arg1)->getMotionIndex(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_getNumMotions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MultiMotionCombiner_getNumMotions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_getNumMotions" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  {
    try {
      result = (int)(arg1)->getNumMotions(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_getMotionByIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  int arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiMotionCombiner_getMotionByIndex",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_getMotionByIndex" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MultiMotionCombiner_getMotionByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotionByIndex(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_getMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  int arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiMotionCombiner_getMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_getMotion" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MultiMotionCombiner_getMotion" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_getMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiMotionCombiner_getMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_getMotion" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_getMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__MultiMotionCombiner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MultiMotionCombiner_getMotion__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__MultiMotionCombiner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MultiMotionCombiner_getMotion__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MultiMotionCombiner_getMotion'.\n  Possible C/C++ prototypes are:\n    getMotion(int)\n    getMotion(Piavca::tstring)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_removeMotionByIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiMotionCombiner_removeMotionByIndex",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_removeMotionByIndex" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MultiMotionCombiner_removeMotionByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->removeMotionByIndex(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MultiMotionCombiner_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_clear" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  {
    try {
      (arg1)->clear(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_findSub(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiMotionCombiner_findSub",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_findSub" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::MultiMotionCombiner::findSub(arg2);
        } else {
          result = (Piavca::Motion *)(arg1)->findSub(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_findSubByType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  type_info *arg2 = 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiMotionCombiner_findSubByType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_findSubByType" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__type_info,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MultiMotionCombiner_findSubByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MultiMotionCombiner_findSubByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  arg2 = reinterpret_cast< type_info * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::MultiMotionCombiner::findSubByType((type_info const &)*arg2);
        } else {
          result = (Piavca::Motion *)(arg1)->findSubByType((type_info const &)*arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiMotionCombiner_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_load" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MultiMotionCombiner_load" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MultiMotionCombiner::load(arg2);
        } else {
          (arg1)->load(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_unload(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MultiMotionCombiner_unload",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_unload" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MultiMotionCombiner::unload();
        } else {
          (arg1)->unload();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_loaded(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiMotionCombiner_loaded",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_loaded" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MultiMotionCombiner_loaded" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::MultiMotionCombiner::loaded(arg2);
        } else {
          result = (bool)(arg1)->loaded(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_getAvatar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  Piavca::Avatar *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MultiMotionCombiner_getAvatar",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_getAvatar" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Avatar *)(arg1)->Piavca::MultiMotionCombiner::getAvatar();
        } else {
          result = (Piavca::Avatar *)(arg1)->getAvatar();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiMotionCombiner_event",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_event" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MultiMotionCombiner::event(arg2);
        } else {
          (arg1)->event(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiMotionCombiner_cleanRecursionState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MultiMotionCombiner_cleanRecursionState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiMotionCombiner_cleanRecursionState" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::MultiMotionCombiner::cleanRecursionState();
        } else {
          (arg1)->cleanRecursionState();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_MultiMotionCombiner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MultiMotionCombiner *arg1 = (Piavca::MultiMotionCombiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_MultiMotionCombiner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MultiMotionCombiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_MultiMotionCombiner" "', argument " "1"" of type '" "Piavca::MultiMotionCombiner *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MultiMotionCombiner * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MultiMotionCombiner_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__MultiMotionCombiner, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MotionMask__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionMask *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MotionMask")) SWIG_fail;
  {
    try {
      result = (Piavca::MotionMask *)new Piavca::MotionMask(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionMask__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionMask *arg1 = 0 ;
  Piavca::MotionMask *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MotionMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__MotionMask,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MotionMask" "', argument " "1"" of type '" "Piavca::MotionMask const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MotionMask" "', argument " "1"" of type '" "Piavca::MotionMask const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionMask * >(argp1);
  {
    try {
      result = (Piavca::MotionMask *)new Piavca::MotionMask((Piavca::MotionMask const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionMask(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_MotionMask__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__MotionMask, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MotionMask__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_MotionMask'.\n  Possible C/C++ prototypes are:\n    Piavca::MotionMask()\n    Piavca::MotionMask(Piavca::MotionMask const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionMask_setMask__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionMask *arg1 = (Piavca::MotionMask *) 0 ;
  int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionMask_setMask",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionMask, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionMask_setMask" "', argument " "1"" of type '" "Piavca::MotionMask *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionMask * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionMask_setMask" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionMask_setMask" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      (arg1)->setMask(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionMask_setMask__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionMask *arg1 = (Piavca::MotionMask *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionMask_setMask",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionMask, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionMask_setMask" "', argument " "1"" of type '" "Piavca::MotionMask *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionMask * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionMask_setMask" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->setMask(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionMask_setMask(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__MotionMask, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MotionMask_setMask__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__MotionMask, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_MotionMask_setMask__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MotionMask_setMask'.\n  Possible C/C++ prototypes are:\n    setMask(int,bool)\n    setMask(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionMask_setAllMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionMask *arg1 = (Piavca::MotionMask *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionMask_setAllMask",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionMask, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionMask_setAllMask" "', argument " "1"" of type '" "Piavca::MotionMask *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionMask * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionMask_setAllMask" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setAllMask(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionMask_getMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionMask *arg1 = (Piavca::MotionMask *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionMask_getMask",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionMask, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionMask_getMask" "', argument " "1"" of type '" "Piavca::MotionMask const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionMask * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionMask_getMask" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (bool)((Piavca::MotionMask const *)arg1)->getMask(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionMask_clearMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionMask *arg1 = (Piavca::MotionMask *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionMask_clearMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionMask, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionMask_clearMask" "', argument " "1"" of type '" "Piavca::MotionMask *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionMask * >(argp1);
  {
    try {
      (arg1)->clearMask(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MotionMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionMask *arg1 = (Piavca::MotionMask *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MotionMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MotionMask" "', argument " "1"" of type '" "Piavca::MotionMask *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionMask * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MotionMask_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__MotionMask, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MaskedMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MaskedMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MaskedMotion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MaskedMotion *)new SwigDirector_MaskedMotion(arg1); 
      } else {
        result = (Piavca::MaskedMotion *)new Piavca::MaskedMotion(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MaskedMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::MotionMask *arg3 = 0 ;
  Piavca::MaskedMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_MaskedMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MaskedMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__MotionMask,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_MaskedMotion" "', argument " "3"" of type '" "Piavca::MotionMask const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MaskedMotion" "', argument " "3"" of type '" "Piavca::MotionMask const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::MotionMask * >(argp3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MaskedMotion *)new SwigDirector_MaskedMotion(arg1,arg2,(Piavca::MotionMask const &)*arg3); 
      } else {
        result = (Piavca::MaskedMotion *)new Piavca::MaskedMotion(arg2,(Piavca::MotionMask const &)*arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MaskedMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MaskedMotion *arg2 = 0 ;
  Piavca::MaskedMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MaskedMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__MaskedMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MaskedMotion" "', argument " "2"" of type '" "Piavca::MaskedMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MaskedMotion" "', argument " "2"" of type '" "Piavca::MaskedMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MaskedMotion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MaskedMotion *)new SwigDirector_MaskedMotion(arg1,(Piavca::MaskedMotion const &)*arg2); 
      } else {
        result = (Piavca::MaskedMotion *)new Piavca::MaskedMotion((Piavca::MaskedMotion const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MaskedMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_MaskedMotion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__MaskedMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MaskedMotion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__MotionMask, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_MaskedMotion__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_MaskedMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::MaskedMotion(PyObject *)\n    Piavca::MaskedMotion(PyObject *,Piavca::Motion *,Piavca::MotionMask const &)\n    Piavca::MaskedMotion(PyObject *,Piavca::MaskedMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_isNull" "', argument " "1"" of type '" "Piavca::MaskedMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MaskedMotion_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)((Piavca::MaskedMotion const *)arg1)->Piavca::MaskedMotion::isNull(arg2);
        } else {
          result = (bool)((Piavca::MaskedMotion const *)arg1)->isNull(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MaskedMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_clone" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::MaskedMotion::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MaskedMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_getClassName" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MaskedMotion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::MaskedMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MaskedMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::MaskedMotion *)Piavca::MaskedMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_setMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  Piavca::MotionMask *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_setMask",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_setMask" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__MotionMask,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MaskedMotion_setMask" "', argument " "2"" of type '" "Piavca::MotionMask const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MaskedMotion_setMask" "', argument " "2"" of type '" "Piavca::MotionMask const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MotionMask * >(argp2);
  {
    try {
      (arg1)->setMask((Piavca::MotionMask const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_getMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  Piavca::MotionMask result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MaskedMotion_getMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_getMask" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  {
    try {
      result = (arg1)->getMask(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::MotionMask(static_cast< const Piavca::MotionMask& >(result))), SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_addToMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_addToMask",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_addToMask" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MaskedMotion_addToMask" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->addToMask(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_removeFromMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_removeFromMask",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_removeFromMask" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MaskedMotion_removeFromMask" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->removeFromMask(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_addAllToMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MaskedMotion_addAllToMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_addAllToMask" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  {
    try {
      (arg1)->addAllToMask(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_removeAllFromMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MaskedMotion_removeAllFromMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_removeAllFromMask" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  {
    try {
      (arg1)->removeAllFromMask(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_setMotionMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  std::vector<std::string,std::allocator<std::string > > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_setMotionMask",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_setMotionMask" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  {
    std::vector<std::string,std::allocator<std::string > > *ptr = (std::vector<std::string,std::allocator<std::string > > *)0;
    int res = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "MaskedMotion_setMotionMask" "', argument " "2"" of type '" "std::vector<std::string,std::allocator<std::string > >""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    try {
      (arg1)->setMotionMask(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_getMotionMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  Piavca::StringVector result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MaskedMotion_getMotionMask",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_getMotionMask" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  {
    try {
      result = (arg1)->getMotionMask(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    int len = (&result)->size();
    resultobj = PyList_New(0);
    for (int i = 0; i < len; i++)
    {
      PyList_Append(resultobj,  
        PyString_FromString(TStringToString((*(&(result)))[i]).c_str()));
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MaskedMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MaskedMotion_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MaskedMotion_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::MaskedMotion::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MaskedMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MaskedMotion_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MaskedMotion_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MaskedMotion::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MaskedMotion_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MaskedMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MaskedMotion_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MaskedMotion_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MaskedMotion_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MaskedMotion::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MaskedMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MaskedMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MaskedMotion" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_MaskedMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_MaskedMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MaskedMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_MaskedMotion" "', argument " "1"" of type '" "Piavca::MaskedMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MaskedMotion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MaskedMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__MaskedMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ScaleMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  Piavca::ScaleMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ScaleMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ScaleMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ScaleMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotion *)new SwigDirector_ScaleMotion(arg1,arg2,arg3); 
      } else {
        result = (Piavca::ScaleMotion *)new Piavca::ScaleMotion(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::ScaleMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ScaleMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ScaleMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotion *)new SwigDirector_ScaleMotion(arg1,arg2); 
      } else {
        result = (Piavca::ScaleMotion *)new Piavca::ScaleMotion(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ScaleMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ScaleMotion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotion *)new SwigDirector_ScaleMotion(arg1); 
      } else {
        result = (Piavca::ScaleMotion *)new Piavca::ScaleMotion(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ScaleMotion *arg2 = 0 ;
  Piavca::ScaleMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ScaleMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__ScaleMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ScaleMotion" "', argument " "2"" of type '" "Piavca::ScaleMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ScaleMotion" "', argument " "2"" of type '" "Piavca::ScaleMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::ScaleMotion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotion *)new SwigDirector_ScaleMotion(arg1,(Piavca::ScaleMotion const &)*arg2); 
      } else {
        result = (Piavca::ScaleMotion *)new Piavca::ScaleMotion((Piavca::ScaleMotion const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_ScaleMotion__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__ScaleMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ScaleMotion__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ScaleMotion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ScaleMotion__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_ScaleMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::ScaleMotion(PyObject *,Piavca::Motion *,float)\n    Piavca::ScaleMotion(PyObject *,Piavca::Motion *)\n    Piavca::ScaleMotion(PyObject *)\n    Piavca::ScaleMotion(PyObject *,Piavca::ScaleMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotion_clone" "', argument " "1"" of type '" "Piavca::ScaleMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::ScaleMotion::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotion_getClassName" "', argument " "1"" of type '" "Piavca::ScaleMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ScaleMotion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::ScaleMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::ScaleMotion *)Piavca::ScaleMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotion_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotion_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ScaleMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotion_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ScaleMotion_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::ScaleMotion::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotion_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotion_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ScaleMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotion_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ScaleMotion_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ScaleMotion::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotion_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotion_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ScaleMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotion_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ScaleMotion_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ScaleMotion::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotion_setScaleFactor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ScaleMotion_setScaleFactor",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotion_setScaleFactor" "', argument " "1"" of type '" "Piavca::ScaleMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotion_setScaleFactor" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setScaleFactor(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotion_getScaleFactor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotion_getScaleFactor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotion_getScaleFactor" "', argument " "1"" of type '" "Piavca::ScaleMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotion * >(argp1);
  {
    try {
      result = (float)(arg1)->getScaleFactor(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ScaleMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ScaleMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ScaleMotion" "', argument " "1"" of type '" "Piavca::ScaleMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_ScaleMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_ScaleMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_ScaleMotion" "', argument " "1"" of type '" "Piavca::ScaleMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ScaleMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__ScaleMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ScaleMotionSpeed__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  Piavca::ScaleMotionSpeed *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ScaleMotionSpeed",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ScaleMotionSpeed" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ScaleMotionSpeed" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotionSpeed *)new SwigDirector_ScaleMotionSpeed(arg1,arg2,arg3); 
      } else {
        result = (Piavca::ScaleMotionSpeed *)new Piavca::ScaleMotionSpeed(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotionSpeed__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::ScaleMotionSpeed *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ScaleMotionSpeed",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ScaleMotionSpeed" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotionSpeed *)new SwigDirector_ScaleMotionSpeed(arg1,arg2); 
      } else {
        result = (Piavca::ScaleMotionSpeed *)new Piavca::ScaleMotionSpeed(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotionSpeed__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ScaleMotionSpeed *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ScaleMotionSpeed",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotionSpeed *)new SwigDirector_ScaleMotionSpeed(arg1); 
      } else {
        result = (Piavca::ScaleMotionSpeed *)new Piavca::ScaleMotionSpeed(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotionSpeed__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ScaleMotionSpeed *arg2 = 0 ;
  Piavca::ScaleMotionSpeed *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ScaleMotionSpeed",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__ScaleMotionSpeed,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ScaleMotionSpeed" "', argument " "2"" of type '" "Piavca::ScaleMotionSpeed const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ScaleMotionSpeed" "', argument " "2"" of type '" "Piavca::ScaleMotionSpeed const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::ScaleMotionSpeed * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotionSpeed *)new SwigDirector_ScaleMotionSpeed(arg1,(Piavca::ScaleMotionSpeed const &)*arg2); 
      } else {
        result = (Piavca::ScaleMotionSpeed *)new Piavca::ScaleMotionSpeed((Piavca::ScaleMotionSpeed const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotionSpeed(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_ScaleMotionSpeed__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ScaleMotionSpeed__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ScaleMotionSpeed__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ScaleMotionSpeed__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_ScaleMotionSpeed'.\n  Possible C/C++ prototypes are:\n    Piavca::ScaleMotionSpeed(PyObject *,Piavca::Motion *,float)\n    Piavca::ScaleMotionSpeed(PyObject *,Piavca::Motion *)\n    Piavca::ScaleMotionSpeed(PyObject *)\n    Piavca::ScaleMotionSpeed(PyObject *,Piavca::ScaleMotionSpeed const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionSpeed_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotionSpeed_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionSpeed_clone" "', argument " "1"" of type '" "Piavca::ScaleMotionSpeed *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionSpeed * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::ScaleMotionSpeed::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionSpeed_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotionSpeed_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionSpeed_getClassName" "', argument " "1"" of type '" "Piavca::ScaleMotionSpeed *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionSpeed * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ScaleMotionSpeed::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionSpeed_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::ScaleMotionSpeed *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotionSpeed_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionSpeed_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::ScaleMotionSpeed *)Piavca::ScaleMotionSpeed::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionSpeed_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotionSpeed_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionSpeed_getMotionLength" "', argument " "1"" of type '" "Piavca::ScaleMotionSpeed const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionSpeed * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::ScaleMotionSpeed const *)arg1)->Piavca::ScaleMotionSpeed::getMotionLength();
        } else {
          result = (float)((Piavca::ScaleMotionSpeed const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionSpeed_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionSpeed_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionSpeed_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ScaleMotionSpeed *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionSpeed * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotionSpeed_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ScaleMotionSpeed_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::ScaleMotionSpeed::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionSpeed_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionSpeed_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionSpeed_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ScaleMotionSpeed *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionSpeed * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotionSpeed_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ScaleMotionSpeed_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ScaleMotionSpeed::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionSpeed_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionSpeed_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionSpeed_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ScaleMotionSpeed *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionSpeed * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotionSpeed_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ScaleMotionSpeed_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ScaleMotionSpeed::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionSpeed_setScaleFactor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ScaleMotionSpeed_setScaleFactor",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionSpeed_setScaleFactor" "', argument " "1"" of type '" "Piavca::ScaleMotionSpeed *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionSpeed * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotionSpeed_setScaleFactor" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setScaleFactor(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionSpeed_getScaleFactor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotionSpeed_getScaleFactor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionSpeed_getScaleFactor" "', argument " "1"" of type '" "Piavca::ScaleMotionSpeed *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionSpeed * >(argp1);
  {
    try {
      result = (float)(arg1)->getScaleFactor(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ScaleMotionSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ScaleMotionSpeed",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ScaleMotionSpeed" "', argument " "1"" of type '" "Piavca::ScaleMotionSpeed *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionSpeed * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_ScaleMotionSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_ScaleMotionSpeed",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_ScaleMotionSpeed" "', argument " "1"" of type '" "Piavca::ScaleMotionSpeed *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionSpeed * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ScaleMotionSpeed_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ChangeMotionLength__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  Piavca::ChangeMotionLength *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ChangeMotionLength",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ChangeMotionLength" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ChangeMotionLength" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ChangeMotionLength *)new SwigDirector_ChangeMotionLength(arg1,arg2,arg3); 
      } else {
        result = (Piavca::ChangeMotionLength *)new Piavca::ChangeMotionLength(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChangeMotionLength, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ChangeMotionLength__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::ChangeMotionLength *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ChangeMotionLength",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ChangeMotionLength" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ChangeMotionLength *)new SwigDirector_ChangeMotionLength(arg1,arg2); 
      } else {
        result = (Piavca::ChangeMotionLength *)new Piavca::ChangeMotionLength(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChangeMotionLength, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ChangeMotionLength__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ChangeMotionLength *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ChangeMotionLength",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ChangeMotionLength *)new SwigDirector_ChangeMotionLength(arg1); 
      } else {
        result = (Piavca::ChangeMotionLength *)new Piavca::ChangeMotionLength(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChangeMotionLength, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ChangeMotionLength__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ChangeMotionLength *arg2 = 0 ;
  Piavca::ChangeMotionLength *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ChangeMotionLength",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__ChangeMotionLength,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ChangeMotionLength" "', argument " "2"" of type '" "Piavca::ChangeMotionLength const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ChangeMotionLength" "', argument " "2"" of type '" "Piavca::ChangeMotionLength const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::ChangeMotionLength * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ChangeMotionLength *)new SwigDirector_ChangeMotionLength(arg1,(Piavca::ChangeMotionLength const &)*arg2); 
      } else {
        result = (Piavca::ChangeMotionLength *)new Piavca::ChangeMotionLength((Piavca::ChangeMotionLength const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChangeMotionLength, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ChangeMotionLength(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_ChangeMotionLength__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__ChangeMotionLength, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ChangeMotionLength__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ChangeMotionLength__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ChangeMotionLength__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_ChangeMotionLength'.\n  Possible C/C++ prototypes are:\n    Piavca::ChangeMotionLength(PyObject *,Piavca::Motion *,float)\n    Piavca::ChangeMotionLength(PyObject *,Piavca::Motion *)\n    Piavca::ChangeMotionLength(PyObject *)\n    Piavca::ChangeMotionLength(PyObject *,Piavca::ChangeMotionLength const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChangeMotionLength_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChangeMotionLength *arg1 = (Piavca::ChangeMotionLength *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChangeMotionLength_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChangeMotionLength, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChangeMotionLength_clone" "', argument " "1"" of type '" "Piavca::ChangeMotionLength *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChangeMotionLength * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::ChangeMotionLength::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChangeMotionLength_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChangeMotionLength *arg1 = (Piavca::ChangeMotionLength *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChangeMotionLength_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChangeMotionLength, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChangeMotionLength_getClassName" "', argument " "1"" of type '" "Piavca::ChangeMotionLength *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChangeMotionLength * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ChangeMotionLength::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChangeMotionLength_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::ChangeMotionLength *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChangeMotionLength_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChangeMotionLength_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::ChangeMotionLength *)Piavca::ChangeMotionLength::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChangeMotionLength, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChangeMotionLength_setLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChangeMotionLength *arg1 = (Piavca::ChangeMotionLength *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChangeMotionLength_setLength",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChangeMotionLength, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChangeMotionLength_setLength" "', argument " "1"" of type '" "Piavca::ChangeMotionLength *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChangeMotionLength * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ChangeMotionLength_setLength" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setLength(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChangeMotionLength_getLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChangeMotionLength *arg1 = (Piavca::ChangeMotionLength *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChangeMotionLength_getLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChangeMotionLength, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChangeMotionLength_getLength" "', argument " "1"" of type '" "Piavca::ChangeMotionLength const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChangeMotionLength * >(argp1);
  {
    try {
      result = (float)((Piavca::ChangeMotionLength const *)arg1)->getLength(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChangeMotionLength_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChangeMotionLength *arg1 = (Piavca::ChangeMotionLength *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChangeMotionLength_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChangeMotionLength, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChangeMotionLength_getMotionLength" "', argument " "1"" of type '" "Piavca::ChangeMotionLength const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChangeMotionLength * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::ChangeMotionLength const *)arg1)->Piavca::ChangeMotionLength::getMotionLength();
        } else {
          result = (float)((Piavca::ChangeMotionLength const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChangeMotionLength_setMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChangeMotionLength *arg1 = (Piavca::ChangeMotionLength *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChangeMotionLength_setMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChangeMotionLength, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChangeMotionLength_setMotion" "', argument " "1"" of type '" "Piavca::ChangeMotionLength *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChangeMotionLength * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ChangeMotionLength_setMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::ChangeMotionLength::setMotion(arg2);
        } else {
          (arg1)->setMotion(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ChangeMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChangeMotionLength *arg1 = (Piavca::ChangeMotionLength *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ChangeMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChangeMotionLength, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ChangeMotionLength" "', argument " "1"" of type '" "Piavca::ChangeMotionLength *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChangeMotionLength * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_ChangeMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChangeMotionLength *arg1 = (Piavca::ChangeMotionLength *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_ChangeMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChangeMotionLength, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_ChangeMotionLength" "', argument " "1"" of type '" "Piavca::ChangeMotionLength *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChangeMotionLength * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ChangeMotionLength_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__ChangeMotionLength, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ScaleMotionRoot__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  Piavca::ScaleMotionRoot *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_ScaleMotionRoot",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ScaleMotionRoot" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ScaleMotionRoot" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotionRoot *)new SwigDirector_ScaleMotionRoot(arg1,arg2,arg3); 
      } else {
        result = (Piavca::ScaleMotionRoot *)new Piavca::ScaleMotionRoot(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotionRoot__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::ScaleMotionRoot *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ScaleMotionRoot",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ScaleMotionRoot" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotionRoot *)new SwigDirector_ScaleMotionRoot(arg1,arg2); 
      } else {
        result = (Piavca::ScaleMotionRoot *)new Piavca::ScaleMotionRoot(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotionRoot__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ScaleMotionRoot *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ScaleMotionRoot",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotionRoot *)new SwigDirector_ScaleMotionRoot(arg1); 
      } else {
        result = (Piavca::ScaleMotionRoot *)new Piavca::ScaleMotionRoot(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotionRoot__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ScaleMotionRoot *arg2 = 0 ;
  Piavca::ScaleMotionRoot *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ScaleMotionRoot",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__ScaleMotionRoot,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ScaleMotionRoot" "', argument " "2"" of type '" "Piavca::ScaleMotionRoot const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ScaleMotionRoot" "', argument " "2"" of type '" "Piavca::ScaleMotionRoot const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::ScaleMotionRoot * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ScaleMotionRoot *)new SwigDirector_ScaleMotionRoot(arg1,(Piavca::ScaleMotionRoot const &)*arg2); 
      } else {
        result = (Piavca::ScaleMotionRoot *)new Piavca::ScaleMotionRoot((Piavca::ScaleMotionRoot const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ScaleMotionRoot(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_ScaleMotionRoot__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__ScaleMotionRoot, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ScaleMotionRoot__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ScaleMotionRoot__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ScaleMotionRoot__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_ScaleMotionRoot'.\n  Possible C/C++ prototypes are:\n    Piavca::ScaleMotionRoot(PyObject *,Piavca::Motion *,float)\n    Piavca::ScaleMotionRoot(PyObject *,Piavca::Motion *)\n    Piavca::ScaleMotionRoot(PyObject *)\n    Piavca::ScaleMotionRoot(PyObject *,Piavca::ScaleMotionRoot const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ScaleMotionRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ScaleMotionRoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ScaleMotionRoot" "', argument " "1"" of type '" "Piavca::ScaleMotionRoot *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionRoot * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionRoot_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotionRoot_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionRoot_clone" "', argument " "1"" of type '" "Piavca::ScaleMotionRoot *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionRoot * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::ScaleMotionRoot::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionRoot_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotionRoot_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionRoot_getClassName" "', argument " "1"" of type '" "Piavca::ScaleMotionRoot *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionRoot * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ScaleMotionRoot::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionRoot_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::ScaleMotionRoot *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotionRoot_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionRoot_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::ScaleMotionRoot *)Piavca::ScaleMotionRoot::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ScaleMotionRoot, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionRoot_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionRoot_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionRoot_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ScaleMotionRoot *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionRoot * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotionRoot_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ScaleMotionRoot_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::ScaleMotionRoot::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionRoot_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionRoot_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionRoot_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ScaleMotionRoot *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionRoot * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotionRoot_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ScaleMotionRoot_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ScaleMotionRoot::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionRoot_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionRoot_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionRoot_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ScaleMotionRoot *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionRoot * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotionRoot_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ScaleMotionRoot_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ScaleMotionRoot::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionRoot_setScaleFactor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ScaleMotionRoot_setScaleFactor",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionRoot_setScaleFactor" "', argument " "1"" of type '" "Piavca::ScaleMotionRoot *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionRoot * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScaleMotionRoot_setScaleFactor" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setScaleFactor(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScaleMotionRoot_getScaleFactor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScaleMotionRoot_getScaleFactor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScaleMotionRoot_getScaleFactor" "', argument " "1"" of type '" "Piavca::ScaleMotionRoot *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionRoot * >(argp1);
  {
    try {
      result = (float)(arg1)->getScaleFactor(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_ScaleMotionRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_ScaleMotionRoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ScaleMotionRoot, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_ScaleMotionRoot" "', argument " "1"" of type '" "Piavca::ScaleMotionRoot *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ScaleMotionRoot * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ScaleMotionRoot_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_TimeOffset__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  Piavca::TimeOffset *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_TimeOffset",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TimeOffset" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_TimeOffset" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TimeOffset *)new SwigDirector_TimeOffset(arg1,arg2,arg3); 
      } else {
        result = (Piavca::TimeOffset *)new Piavca::TimeOffset(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimeOffset__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::TimeOffset *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_TimeOffset",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TimeOffset" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TimeOffset *)new SwigDirector_TimeOffset(arg1,arg2); 
      } else {
        result = (Piavca::TimeOffset *)new Piavca::TimeOffset(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimeOffset__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::TimeOffset *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_TimeOffset",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TimeOffset *)new SwigDirector_TimeOffset(arg1); 
      } else {
        result = (Piavca::TimeOffset *)new Piavca::TimeOffset(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimeOffset__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::TimeOffset *arg2 = 0 ;
  Piavca::TimeOffset *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_TimeOffset",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__TimeOffset,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TimeOffset" "', argument " "2"" of type '" "Piavca::TimeOffset const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TimeOffset" "', argument " "2"" of type '" "Piavca::TimeOffset const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::TimeOffset * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TimeOffset *)new SwigDirector_TimeOffset(arg1,(Piavca::TimeOffset const &)*arg2); 
      } else {
        result = (Piavca::TimeOffset *)new Piavca::TimeOffset((Piavca::TimeOffset const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimeOffset(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_TimeOffset__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__TimeOffset, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_TimeOffset__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_TimeOffset__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_TimeOffset__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_TimeOffset'.\n  Possible C/C++ prototypes are:\n    Piavca::TimeOffset(PyObject *,Piavca::Motion *,float)\n    Piavca::TimeOffset(PyObject *,Piavca::Motion *)\n    Piavca::TimeOffset(PyObject *)\n    Piavca::TimeOffset(PyObject *,Piavca::TimeOffset const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeOffset_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeOffset_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeOffset, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeOffset_clone" "', argument " "1"" of type '" "Piavca::TimeOffset *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeOffset * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::TimeOffset::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeOffset_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeOffset_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeOffset, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeOffset_getClassName" "', argument " "1"" of type '" "Piavca::TimeOffset *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeOffset * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::TimeOffset::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeOffset_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::TimeOffset *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeOffset_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeOffset_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::TimeOffset *)Piavca::TimeOffset::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TimeOffset, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeOffset_setStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TimeOffset_setStartTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeOffset, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeOffset_setStartTime" "', argument " "1"" of type '" "Piavca::TimeOffset *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeOffset * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TimeOffset_setStartTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::TimeOffset::setStartTime(arg2);
        } else {
          (arg1)->setStartTime(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeOffset_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TimeOffset_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeOffset, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeOffset_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::TimeOffset *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeOffset * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TimeOffset_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TimeOffset_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::TimeOffset::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeOffset_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TimeOffset_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeOffset, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeOffset_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::TimeOffset *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeOffset * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TimeOffset_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TimeOffset_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::TimeOffset::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeOffset_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TimeOffset_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeOffset, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeOffset_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::TimeOffset *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeOffset * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TimeOffset_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TimeOffset_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::TimeOffset::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeOffset_setOffset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TimeOffset_setOffset",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeOffset, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeOffset_setOffset" "', argument " "1"" of type '" "Piavca::TimeOffset *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeOffset * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TimeOffset_setOffset" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setOffset(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeOffset_getOffset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeOffset_getOffset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeOffset, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeOffset_getOffset" "', argument " "1"" of type '" "Piavca::TimeOffset *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeOffset * >(argp1);
  {
    try {
      result = (float)(arg1)->getOffset(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TimeOffset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TimeOffset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TimeOffset" "', argument " "1"" of type '" "Piavca::TimeOffset *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeOffset * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_TimeOffset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_TimeOffset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeOffset, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_TimeOffset" "', argument " "1"" of type '" "Piavca::TimeOffset *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeOffset * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TimeOffset_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__TimeOffset, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Sequence__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  Piavca::Sequence *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_Sequence",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Sequence" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Sequence" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Sequence *)new SwigDirector_Sequence(arg1,arg2,arg3); 
      } else {
        result = (Piavca::Sequence *)new Piavca::Sequence(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Sequence, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sequence__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Sequence *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Sequence",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Sequence" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Sequence *)new SwigDirector_Sequence(arg1,arg2); 
      } else {
        result = (Piavca::Sequence *)new Piavca::Sequence(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Sequence, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sequence__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Sequence *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Sequence",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Sequence *)new SwigDirector_Sequence(arg1); 
      } else {
        result = (Piavca::Sequence *)new Piavca::Sequence(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Sequence, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sequence__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Sequence *arg2 = 0 ;
  Piavca::Sequence *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Sequence",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Sequence,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Sequence" "', argument " "2"" of type '" "Piavca::Sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Sequence" "', argument " "2"" of type '" "Piavca::Sequence const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Sequence * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Sequence *)new SwigDirector_Sequence(arg1,(Piavca::Sequence const &)*arg2); 
      } else {
        result = (Piavca::Sequence *)new Piavca::Sequence((Piavca::Sequence const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Sequence, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sequence(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_Sequence__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Sequence, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Sequence__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Sequence__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_Sequence__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Sequence'.\n  Possible C/C++ prototypes are:\n    Piavca::Sequence(PyObject *,Piavca::Motion *,Piavca::Motion *)\n    Piavca::Sequence(PyObject *,Piavca::Motion *)\n    Piavca::Sequence(PyObject *)\n    Piavca::Sequence(PyObject *,Piavca::Sequence const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sequence_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Sequence *arg1 = (Piavca::Sequence *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Sequence_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sequence_clone" "', argument " "1"" of type '" "Piavca::Sequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Sequence * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::Sequence::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sequence_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Sequence *arg1 = (Piavca::Sequence *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Sequence_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sequence_getClassName" "', argument " "1"" of type '" "Piavca::Sequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Sequence * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Sequence::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sequence_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Sequence *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Sequence_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sequence_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::Sequence *)Piavca::Sequence::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Sequence, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sequence_setStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Sequence *arg1 = (Piavca::Sequence *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Sequence_setStartTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sequence_setStartTime" "', argument " "1"" of type '" "Piavca::Sequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Sequence * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sequence_setStartTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::Sequence::setStartTime(arg2);
        } else {
          (arg1)->setStartTime(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sequence_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Sequence *arg1 = (Piavca::Sequence *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Sequence_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sequence_getMotionLength" "', argument " "1"" of type '" "Piavca::Sequence const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Sequence * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::Sequence const *)arg1)->Piavca::Sequence::getMotionLength();
        } else {
          result = (float)((Piavca::Sequence const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sequence_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Sequence *arg1 = (Piavca::Sequence *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Sequence_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sequence_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Sequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Sequence * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sequence_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Sequence_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::Sequence::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sequence_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Sequence *arg1 = (Piavca::Sequence *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Sequence_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sequence_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Sequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Sequence * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sequence_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Sequence_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Sequence::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Sequence_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Sequence *arg1 = (Piavca::Sequence *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Sequence_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Sequence_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Sequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Sequence * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Sequence_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Sequence_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Sequence::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Sequence(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Sequence *arg1 = (Piavca::Sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Sequence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Sequence, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Sequence" "', argument " "1"" of type '" "Piavca::Sequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Sequence * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_Sequence(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Sequence *arg1 = (Piavca::Sequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_Sequence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Sequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_Sequence" "', argument " "1"" of type '" "Piavca::Sequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Sequence * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Sequence_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__Sequence, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SmoothSequence__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  float arg4 ;
  Piavca::SmoothSequence *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_SmoothSequence",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SmoothSequence" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SmoothSequence" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SmoothSequence" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_SmoothSequence" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (Piavca::SmoothSequence *)new Piavca::SmoothSequence(arg1,arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothSequence, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SmoothSequence__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  Piavca::SmoothSequence *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SmoothSequence",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SmoothSequence" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SmoothSequence" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SmoothSequence" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (Piavca::SmoothSequence *)new Piavca::SmoothSequence(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothSequence, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SmoothSequence__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::SmoothSequence *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SmoothSequence",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SmoothSequence" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SmoothSequence" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      result = (Piavca::SmoothSequence *)new Piavca::SmoothSequence(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothSequence, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SmoothSequence__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::SmoothSequence *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SmoothSequence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SmoothSequence" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::SmoothSequence *)new Piavca::SmoothSequence(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothSequence, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SmoothSequence__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SmoothSequence")) SWIG_fail;
  {
    try {
      result = (Piavca::SmoothSequence *)new Piavca::SmoothSequence(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothSequence, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SmoothSequence__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = 0 ;
  Piavca::SmoothSequence *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SmoothSequence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__SmoothSequence,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SmoothSequence" "', argument " "1"" of type '" "Piavca::SmoothSequence const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SmoothSequence" "', argument " "1"" of type '" "Piavca::SmoothSequence const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  {
    try {
      result = (Piavca::SmoothSequence *)new Piavca::SmoothSequence((Piavca::SmoothSequence const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothSequence, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SmoothSequence(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SmoothSequence__SWIG_4(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__SmoothSequence, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SmoothSequence__SWIG_5(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SmoothSequence__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SmoothSequence__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SmoothSequence__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_SmoothSequence__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SmoothSequence'.\n  Possible C/C++ prototypes are:\n    Piavca::SmoothSequence(Piavca::Motion *,Piavca::Motion *,float,float)\n    Piavca::SmoothSequence(Piavca::Motion *,Piavca::Motion *,float)\n    Piavca::SmoothSequence(Piavca::Motion *,Piavca::Motion *)\n    Piavca::SmoothSequence(Piavca::Motion *)\n    Piavca::SmoothSequence()\n    Piavca::SmoothSequence(Piavca::SmoothSequence const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothSequence_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_clone" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->clone(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothSequence_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_getClassName" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  {
    try {
      result = (arg1)->getClassName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::SmoothSequence *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothSequence_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::SmoothSequence *)Piavca::SmoothSequence::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_create(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothSequence_create",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_create" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  {
    try {
      (arg1)->create(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_setMaintainY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SmoothSequence_setMaintainY",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_setMaintainY" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SmoothSequence_setMaintainY" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setMaintainY(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_setAccumulateRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SmoothSequence_setAccumulateRoot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_setAccumulateRoot" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SmoothSequence_setAccumulateRoot" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setAccumulateRoot(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_setMotion1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SmoothSequence_setMotion1",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_setMotion1" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SmoothSequence_setMotion1" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->setMotion1(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_setMotion2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SmoothSequence_setMotion2",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_setMotion2" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SmoothSequence_setMotion2" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->setMotion2(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_setBlendStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SmoothSequence_setBlendStart",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_setBlendStart" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SmoothSequence_setBlendStart" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setBlendStart(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_setBlendInterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SmoothSequence_setBlendInterval",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_setBlendInterval" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SmoothSequence_setBlendInterval" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setBlendInterval(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_getBlendStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothSequence_getBlendStart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_getBlendStart" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  {
    try {
      result = (float)(arg1)->getBlendStart(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothSequence_getBlendInterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothSequence_getBlendInterval",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothSequence_getBlendInterval" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  {
    try {
      result = (float)(arg1)->getBlendInterval(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SmoothSequence(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothSequence *arg1 = (Piavca::SmoothSequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SmoothSequence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothSequence, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SmoothSequence" "', argument " "1"" of type '" "Piavca::SmoothSequence *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothSequence * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SmoothSequence_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__SmoothSequence, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MotionPosture__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  bool arg3 ;
  Piavca::MotionPosture *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_MotionPosture",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionPosture" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_MotionPosture" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionPosture *)new SwigDirector_MotionPosture(arg1,arg2,arg3); 
      } else {
        result = (Piavca::MotionPosture *)new Piavca::MotionPosture(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionPosture, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionPosture__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::MotionPosture *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MotionPosture",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionPosture" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionPosture *)new SwigDirector_MotionPosture(arg1,arg2); 
      } else {
        result = (Piavca::MotionPosture *)new Piavca::MotionPosture(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionPosture, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionPosture__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionPosture *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MotionPosture",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionPosture *)new SwigDirector_MotionPosture(arg1); 
      } else {
        result = (Piavca::MotionPosture *)new Piavca::MotionPosture(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionPosture, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionPosture__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionPosture *arg2 = 0 ;
  Piavca::MotionPosture *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MotionPosture",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__MotionPosture,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionPosture" "', argument " "2"" of type '" "Piavca::MotionPosture const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MotionPosture" "', argument " "2"" of type '" "Piavca::MotionPosture const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MotionPosture * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionPosture *)new SwigDirector_MotionPosture(arg1,(Piavca::MotionPosture const &)*arg2); 
      } else {
        result = (Piavca::MotionPosture *)new Piavca::MotionPosture((Piavca::MotionPosture const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionPosture, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionPosture(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_MotionPosture__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__MotionPosture, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MotionPosture__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MotionPosture__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_MotionPosture__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_MotionPosture'.\n  Possible C/C++ prototypes are:\n    Piavca::MotionPosture(PyObject *,Piavca::Motion *,bool)\n    Piavca::MotionPosture(PyObject *,Piavca::Motion *)\n    Piavca::MotionPosture(PyObject *)\n    Piavca::MotionPosture(PyObject *,Piavca::MotionPosture const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionPosture_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionPosture *arg1 = (Piavca::MotionPosture *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionPosture_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionPosture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionPosture_clone" "', argument " "1"" of type '" "Piavca::MotionPosture *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionPosture * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::MotionPosture::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionPosture_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionPosture *arg1 = (Piavca::MotionPosture *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionPosture_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionPosture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionPosture_getClassName" "', argument " "1"" of type '" "Piavca::MotionPosture *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionPosture * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MotionPosture::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionPosture_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::MotionPosture *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionPosture_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionPosture_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::MotionPosture *)Piavca::MotionPosture::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionPosture, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionPosture_getPostureFromMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionPosture *arg1 = (Piavca::MotionPosture *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionPosture_getPostureFromMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionPosture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionPosture_getPostureFromMotion" "', argument " "1"" of type '" "Piavca::MotionPosture *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionPosture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MotionPosture_getPostureFromMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionPosture_getPostureFromMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->getPostureFromMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MotionPosture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionPosture *arg1 = (Piavca::MotionPosture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MotionPosture",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionPosture, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MotionPosture" "', argument " "1"" of type '" "Piavca::MotionPosture *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionPosture * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_MotionPosture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionPosture *arg1 = (Piavca::MotionPosture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_MotionPosture",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionPosture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_MotionPosture" "', argument " "1"" of type '" "Piavca::MotionPosture *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionPosture * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MotionPosture_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__MotionPosture, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_AvatarPosture__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  bool arg2 ;
  Piavca::AvatarPosture *result = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_AvatarPosture",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AvatarPosture" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::AvatarPosture *)new SwigDirector_AvatarPosture(arg1,arg2); 
      } else {
        result = (Piavca::AvatarPosture *)new Piavca::AvatarPosture(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarPosture, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarPosture__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::AvatarPosture *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_AvatarPosture",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::AvatarPosture *)new SwigDirector_AvatarPosture(arg1); 
      } else {
        result = (Piavca::AvatarPosture *)new Piavca::AvatarPosture(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarPosture, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarPosture__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::AvatarPosture *arg2 = 0 ;
  Piavca::AvatarPosture *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_AvatarPosture",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__AvatarPosture,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AvatarPosture" "', argument " "2"" of type '" "Piavca::AvatarPosture const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AvatarPosture" "', argument " "2"" of type '" "Piavca::AvatarPosture const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::AvatarPosture * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::AvatarPosture *)new SwigDirector_AvatarPosture(arg1,(Piavca::AvatarPosture const &)*arg2); 
      } else {
        result = (Piavca::AvatarPosture *)new Piavca::AvatarPosture((Piavca::AvatarPosture const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarPosture, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarPosture(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_AvatarPosture__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__AvatarPosture, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_AvatarPosture__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_AvatarPosture__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_AvatarPosture'.\n  Possible C/C++ prototypes are:\n    Piavca::AvatarPosture(PyObject *,bool)\n    Piavca::AvatarPosture(PyObject *)\n    Piavca::AvatarPosture(PyObject *,Piavca::AvatarPosture const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPosture_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPosture *arg1 = (Piavca::AvatarPosture *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarPosture_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPosture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPosture_clone" "', argument " "1"" of type '" "Piavca::AvatarPosture *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPosture * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::AvatarPosture::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPosture_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPosture *arg1 = (Piavca::AvatarPosture *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarPosture_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPosture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPosture_getClassName" "', argument " "1"" of type '" "Piavca::AvatarPosture *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPosture * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::AvatarPosture::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPosture_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::AvatarPosture *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarPosture_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPosture_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::AvatarPosture *)Piavca::AvatarPosture::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarPosture, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPosture_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPosture *arg1 = (Piavca::AvatarPosture *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarPosture_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPosture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPosture_load" "', argument " "1"" of type '" "Piavca::AvatarPosture *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPosture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarPosture_load" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::AvatarPosture::load(arg2);
        } else {
          (arg1)->load(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPosture_getPostureFromAvatar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPosture *arg1 = (Piavca::AvatarPosture *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarPosture_getPostureFromAvatar",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPosture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPosture_getPostureFromAvatar" "', argument " "1"" of type '" "Piavca::AvatarPosture *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPosture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarPosture_getPostureFromAvatar" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    try {
      (arg1)->getPostureFromAvatar(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AvatarPosture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPosture *arg1 = (Piavca::AvatarPosture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AvatarPosture",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPosture, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AvatarPosture" "', argument " "1"" of type '" "Piavca::AvatarPosture *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPosture * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_AvatarPosture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPosture *arg1 = (Piavca::AvatarPosture *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_AvatarPosture",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPosture, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_AvatarPosture" "', argument " "1"" of type '" "Piavca::AvatarPosture *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPosture * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AvatarPosture_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__AvatarPosture, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PostureBlend__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  Piavca::PostureBlend *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_PostureBlend",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PostureBlend" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_PostureBlend" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::PostureBlend *)new SwigDirector_PostureBlend(arg1,arg2,arg3); 
      } else {
        result = (Piavca::PostureBlend *)new Piavca::PostureBlend(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__PostureBlend, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PostureBlend__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::PostureBlend *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_PostureBlend",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PostureBlend" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::PostureBlend *)new SwigDirector_PostureBlend(arg1,arg2); 
      } else {
        result = (Piavca::PostureBlend *)new Piavca::PostureBlend(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__PostureBlend, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PostureBlend__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::PostureBlend *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_PostureBlend",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::PostureBlend *)new SwigDirector_PostureBlend(arg1); 
      } else {
        result = (Piavca::PostureBlend *)new Piavca::PostureBlend(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__PostureBlend, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PostureBlend__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::PostureBlend *arg2 = 0 ;
  Piavca::PostureBlend *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_PostureBlend",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__PostureBlend,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PostureBlend" "', argument " "2"" of type '" "Piavca::PostureBlend const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PostureBlend" "', argument " "2"" of type '" "Piavca::PostureBlend const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::PostureBlend * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::PostureBlend *)new SwigDirector_PostureBlend(arg1,(Piavca::PostureBlend const &)*arg2); 
      } else {
        result = (Piavca::PostureBlend *)new Piavca::PostureBlend((Piavca::PostureBlend const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__PostureBlend, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PostureBlend(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_PostureBlend__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__PostureBlend, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_PostureBlend__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_PostureBlend__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_PostureBlend__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_PostureBlend'.\n  Possible C/C++ prototypes are:\n    Piavca::PostureBlend(PyObject *,Piavca::Motion *,float)\n    Piavca::PostureBlend(PyObject *,Piavca::Motion *)\n    Piavca::PostureBlend(PyObject *)\n    Piavca::PostureBlend(PyObject *,Piavca::PostureBlend const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PostureBlend_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_clone" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::PostureBlend::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PostureBlend_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_getClassName" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::PostureBlend::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::PostureBlend *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PostureBlend_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::PostureBlend *)Piavca::PostureBlend::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_setBlendInterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PostureBlend_setBlendInterval",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_setBlendInterval" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PostureBlend_setBlendInterval" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setBlendInterval(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_getBlendInterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PostureBlend_getBlendInterval",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_getBlendInterval" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  {
    try {
      result = (float)(arg1)->getBlendInterval(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_setAccumulateRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PostureBlend_setAccumulateRoot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_setAccumulateRoot" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PostureBlend_setAccumulateRoot" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setAccumulateRoot(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_getAccumulateRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PostureBlend_getAccumulateRoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_getAccumulateRoot" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  {
    try {
      result = (bool)(arg1)->getAccumulateRoot(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PostureBlend_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_reset" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::PostureBlend::reset();
        } else {
          (arg1)->reset();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_reblend__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PostureBlend_reblend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_reblend" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  {
    try {
      (arg1)->reblend(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_reblend__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PostureBlend_reblend",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_reblend" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PostureBlend_reblend" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::PostureBlend::reblend(arg2);
        } else {
          (arg1)->reblend(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_reblend(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__PostureBlend, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PostureBlend_reblend__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__PostureBlend, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_PostureBlend_reblend__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'PostureBlend_reblend'.\n  Possible C/C++ prototypes are:\n    reblend()\n    reblend(float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_setMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PostureBlend_setMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_setMotion" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PostureBlend_setMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::PostureBlend::setMotion(arg2);
        } else {
          (arg1)->setMotion(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PostureBlend_getMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PostureBlend_getMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostureBlend_getMotion" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::PostureBlend::getMotion();
        } else {
          result = (Piavca::Motion *)(arg1)->getMotion();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PostureBlend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PostureBlend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PostureBlend" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_PostureBlend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PostureBlend *arg1 = (Piavca::PostureBlend *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_PostureBlend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_PostureBlend" "', argument " "1"" of type '" "Piavca::PostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PostureBlend * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PostureBlend_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__PostureBlend, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Reposition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Vec arg3 ;
  Piavca::Quat arg4 ;
  Piavca::Reposition *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_Reposition",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Reposition" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Reposition" "', argument " "3"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Reposition" "', argument " "3"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_Piavca__Quat,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Reposition" "', argument " "4"" of type '" "Piavca::Quat""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Reposition" "', argument " "4"" of type '" "Piavca::Quat""'");
    } else {
      Piavca::Quat * temp = reinterpret_cast< Piavca::Quat * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Reposition *)new SwigDirector_Reposition(arg1,arg2,arg3,arg4); 
      } else {
        result = (Piavca::Reposition *)new Piavca::Reposition(arg2,arg3,arg4); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Reposition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Reposition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Vec arg3 ;
  Piavca::Reposition *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_Reposition",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Reposition" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Reposition" "', argument " "3"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Reposition" "', argument " "3"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Reposition *)new SwigDirector_Reposition(arg1,arg2,arg3); 
      } else {
        result = (Piavca::Reposition *)new Piavca::Reposition(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Reposition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Reposition__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Reposition *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Reposition",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Reposition" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Reposition *)new SwigDirector_Reposition(arg1,arg2); 
      } else {
        result = (Piavca::Reposition *)new Piavca::Reposition(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Reposition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Reposition__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Reposition *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Reposition",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Reposition *)new SwigDirector_Reposition(arg1); 
      } else {
        result = (Piavca::Reposition *)new Piavca::Reposition(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Reposition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Reposition__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Reposition *arg2 = 0 ;
  Piavca::Reposition *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Reposition",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Reposition,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Reposition" "', argument " "2"" of type '" "Piavca::Reposition const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Reposition" "', argument " "2"" of type '" "Piavca::Reposition const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Reposition * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Reposition *)new SwigDirector_Reposition(arg1,(Piavca::Reposition const &)*arg2); 
      } else {
        result = (Piavca::Reposition *)new Piavca::Reposition((Piavca::Reposition const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Reposition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Reposition(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_Reposition__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Reposition, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Reposition__SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Reposition__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Vec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_Reposition__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Vec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_Piavca__Quat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_Reposition__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Reposition'.\n  Possible C/C++ prototypes are:\n    Piavca::Reposition(PyObject *,Piavca::Motion *,Piavca::Vec,Piavca::Quat)\n    Piavca::Reposition(PyObject *,Piavca::Motion *,Piavca::Vec)\n    Piavca::Reposition(PyObject *,Piavca::Motion *)\n    Piavca::Reposition(PyObject *)\n    Piavca::Reposition(PyObject *,Piavca::Reposition const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Reposition_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_clone" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::Reposition::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Reposition_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_getClassName" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Reposition::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Reposition *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Reposition_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::Reposition *)Piavca::Reposition::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_setStartPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  Piavca::Vec arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Reposition_setStartPosition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_setStartPosition" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reposition_setStartPosition" "', argument " "2"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reposition_setStartPosition" "', argument " "2"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (arg1)->setStartPosition(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_setStartOrientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  Piavca::Quat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Reposition_setStartOrientation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_setStartOrientation" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Quat,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reposition_setStartOrientation" "', argument " "2"" of type '" "Piavca::Quat""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reposition_setStartOrientation" "', argument " "2"" of type '" "Piavca::Quat""'");
    } else {
      Piavca::Quat * temp = reinterpret_cast< Piavca::Quat * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (arg1)->setStartOrientation(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_setPosOffset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Reposition_setPosOffset",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_setPosOffset" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reposition_setPosOffset" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Reposition_setPosOffset" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      (arg1)->setPosOffset((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_getPosOffset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Reposition_getPosOffset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_getPosOffset" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  {
    try {
      result = (arg1)->getPosOffset(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_getStartPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Reposition_getStartPosition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_getStartPosition" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  {
    try {
      result = (arg1)->getStartPosition(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_getStartOrientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Reposition_getStartOrientation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_getStartOrientation" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  {
    try {
      result = (arg1)->getStartOrientation(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_setStartFromMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Reposition_setStartFromMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_setStartFromMotion" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reposition_setStartFromMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Reposition_setStartFromMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->setStartFromMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_setMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Reposition_setMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_setMotion" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Reposition_setMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->setMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_setMaintainY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Reposition_setMaintainY",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_setMaintainY" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Reposition_setMaintainY" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::Reposition::setMaintainY(arg2);
        } else {
          (arg1)->setMaintainY(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Reposition_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_isNull" "', argument " "1"" of type '" "Piavca::Reposition const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Reposition_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)((Piavca::Reposition const *)arg1)->Piavca::Reposition::isNull(arg2);
        } else {
          result = (bool)((Piavca::Reposition const *)arg1)->isNull(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_getTrackType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Reposition_getTrackType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_getTrackType" "', argument " "1"" of type '" "Piavca::Reposition const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Reposition_getTrackType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (int)((Piavca::Reposition const *)arg1)->Piavca::Reposition::getTrackType(arg2);
        } else {
          result = (int)((Piavca::Reposition const *)arg1)->getTrackType(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Reposition_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Reposition_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Reposition_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::Reposition::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Reposition_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Reposition_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Reposition_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Reposition::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Reposition_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Reposition_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Reposition_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Reposition_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Reposition_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Reposition::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Reposition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Reposition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Reposition" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_Reposition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Reposition *arg1 = (Piavca::Reposition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_Reposition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Reposition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_Reposition" "', argument " "1"" of type '" "Piavca::Reposition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Reposition * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Reposition_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__Reposition, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_LoopMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  Piavca::LoopMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_LoopMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LoopMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_LoopMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LoopMotion *)new SwigDirector_LoopMotion(arg1,arg2,arg3); 
      } else {
        result = (Piavca::LoopMotion *)new Piavca::LoopMotion(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LoopMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::LoopMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_LoopMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LoopMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LoopMotion *)new SwigDirector_LoopMotion(arg1,arg2); 
      } else {
        result = (Piavca::LoopMotion *)new Piavca::LoopMotion(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LoopMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::LoopMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_LoopMotion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LoopMotion *)new SwigDirector_LoopMotion(arg1); 
      } else {
        result = (Piavca::LoopMotion *)new Piavca::LoopMotion(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LoopMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::LoopMotion *arg2 = 0 ;
  Piavca::LoopMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_LoopMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__LoopMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LoopMotion" "', argument " "2"" of type '" "Piavca::LoopMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LoopMotion" "', argument " "2"" of type '" "Piavca::LoopMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::LoopMotion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LoopMotion *)new SwigDirector_LoopMotion(arg1,(Piavca::LoopMotion const &)*arg2); 
      } else {
        result = (Piavca::LoopMotion *)new Piavca::LoopMotion((Piavca::LoopMotion const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LoopMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_LoopMotion__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__LoopMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_LoopMotion__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_LoopMotion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_LoopMotion__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_LoopMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::LoopMotion(PyObject *,Piavca::Motion *,float)\n    Piavca::LoopMotion(PyObject *,Piavca::Motion *)\n    Piavca::LoopMotion(PyObject *)\n    Piavca::LoopMotion(PyObject *,Piavca::LoopMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoopMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LoopMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LoopMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoopMotion_clone" "', argument " "1"" of type '" "Piavca::LoopMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LoopMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::LoopMotion::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoopMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LoopMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LoopMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoopMotion_getClassName" "', argument " "1"" of type '" "Piavca::LoopMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LoopMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::LoopMotion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoopMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::LoopMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LoopMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoopMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::LoopMotion *)Piavca::LoopMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LoopMotion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoopMotion_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LoopMotion_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LoopMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoopMotion_getMotionLength" "', argument " "1"" of type '" "Piavca::LoopMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LoopMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::LoopMotion const *)arg1)->Piavca::LoopMotion::getMotionLength();
        } else {
          result = (float)((Piavca::LoopMotion const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoopMotion_setEndTime__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LoopMotion_setEndTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LoopMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoopMotion_setEndTime" "', argument " "1"" of type '" "Piavca::LoopMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LoopMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LoopMotion_setEndTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setEndTime(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoopMotion_setEndTime__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LoopMotion_setEndTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LoopMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoopMotion_setEndTime" "', argument " "1"" of type '" "Piavca::LoopMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LoopMotion * >(argp1);
  {
    try {
      result = (float)(arg1)->setEndTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoopMotion_setEndTime(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LoopMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_LoopMotion_setEndTime__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LoopMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_LoopMotion_setEndTime__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'LoopMotion_setEndTime'.\n  Possible C/C++ prototypes are:\n    setEndTime(float)\n    setEndTime()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoopMotion_preFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LoopMotion_preFrame",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LoopMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoopMotion_preFrame" "', argument " "1"" of type '" "Piavca::LoopMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LoopMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LoopMotion_preFrame" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::LoopMotion::preFrame(arg2);
        } else {
          (arg1)->preFrame(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoopMotion_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LoopMotion_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LoopMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoopMotion_reset" "', argument " "1"" of type '" "Piavca::LoopMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LoopMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::LoopMotion::reset();
        } else {
          (arg1)->reset();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LoopMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LoopMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LoopMotion" "', argument " "1"" of type '" "Piavca::LoopMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LoopMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_LoopMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_LoopMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LoopMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_LoopMotion" "', argument " "1"" of type '" "Piavca::LoopMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LoopMotion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LoopMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__LoopMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SmoothLoop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  float arg2 ;
  float arg3 ;
  Piavca::SmoothLoop *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SmoothLoop",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SmoothLoop" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SmoothLoop" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SmoothLoop" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (Piavca::SmoothLoop *)new Piavca::SmoothLoop(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothLoop, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SmoothLoop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  float arg2 ;
  Piavca::SmoothLoop *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SmoothLoop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SmoothLoop" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SmoothLoop" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (Piavca::SmoothLoop *)new Piavca::SmoothLoop(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothLoop, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SmoothLoop__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::SmoothLoop *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SmoothLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SmoothLoop" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::SmoothLoop *)new Piavca::SmoothLoop(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothLoop, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SmoothLoop__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothLoop *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SmoothLoop")) SWIG_fail;
  {
    try {
      result = (Piavca::SmoothLoop *)new Piavca::SmoothLoop(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothLoop, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SmoothLoop__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothLoop *arg1 = 0 ;
  Piavca::SmoothLoop *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SmoothLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__SmoothLoop,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SmoothLoop" "', argument " "1"" of type '" "Piavca::SmoothLoop const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SmoothLoop" "', argument " "1"" of type '" "Piavca::SmoothLoop const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothLoop * >(argp1);
  {
    try {
      result = (Piavca::SmoothLoop *)new Piavca::SmoothLoop((Piavca::SmoothLoop const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothLoop, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SmoothLoop(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SmoothLoop__SWIG_3(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__SmoothLoop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SmoothLoop__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SmoothLoop__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_SmoothLoop__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_SmoothLoop__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SmoothLoop'.\n  Possible C/C++ prototypes are:\n    Piavca::SmoothLoop(Piavca::Motion *,float,float)\n    Piavca::SmoothLoop(Piavca::Motion *,float)\n    Piavca::SmoothLoop(Piavca::Motion *)\n    Piavca::SmoothLoop()\n    Piavca::SmoothLoop(Piavca::SmoothLoop const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothLoop_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothLoop *arg1 = (Piavca::SmoothLoop *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothLoop_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothLoop_clone" "', argument " "1"" of type '" "Piavca::SmoothLoop *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothLoop * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->clone(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothLoop_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothLoop *arg1 = (Piavca::SmoothLoop *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothLoop_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothLoop_getClassName" "', argument " "1"" of type '" "Piavca::SmoothLoop *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothLoop * >(argp1);
  {
    try {
      result = (arg1)->getClassName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothLoop_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::SmoothLoop *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothLoop_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothLoop_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::SmoothLoop *)Piavca::SmoothLoop::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothLoop, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothLoop_setMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothLoop *arg1 = (Piavca::SmoothLoop *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SmoothLoop_setMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothLoop_setMotion" "', argument " "1"" of type '" "Piavca::SmoothLoop *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothLoop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SmoothLoop_setMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->setMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothLoop_getMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothLoop *arg1 = (Piavca::SmoothLoop *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothLoop_getMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothLoop_getMotion" "', argument " "1"" of type '" "Piavca::SmoothLoop *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothLoop * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothLoop_setAccumulateRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothLoop *arg1 = (Piavca::SmoothLoop *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SmoothLoop_setAccumulateRoot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothLoop_setAccumulateRoot" "', argument " "1"" of type '" "Piavca::SmoothLoop *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothLoop * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SmoothLoop_setAccumulateRoot" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setAccumulateRoot(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothLoop_getAccumulateRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothLoop *arg1 = (Piavca::SmoothLoop *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothLoop_getAccumulateRoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothLoop_getAccumulateRoot" "', argument " "1"" of type '" "Piavca::SmoothLoop *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothLoop * >(argp1);
  {
    try {
      result = (bool)(arg1)->getAccumulateRoot(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothLoop_setBlendInterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothLoop *arg1 = (Piavca::SmoothLoop *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SmoothLoop_setBlendInterval",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothLoop_setBlendInterval" "', argument " "1"" of type '" "Piavca::SmoothLoop *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothLoop * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SmoothLoop_setBlendInterval" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setBlendInterval(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothLoop_getBlendInterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothLoop *arg1 = (Piavca::SmoothLoop *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SmoothLoop_getBlendInterval",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothLoop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothLoop_getBlendInterval" "', argument " "1"" of type '" "Piavca::SmoothLoop *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothLoop * >(argp1);
  {
    try {
      result = (float)(arg1)->getBlendInterval(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SmoothLoop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothLoop *arg1 = (Piavca::SmoothLoop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SmoothLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothLoop, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SmoothLoop" "', argument " "1"" of type '" "Piavca::SmoothLoop *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothLoop * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SmoothLoop_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__SmoothLoop, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_RandomTimingsMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  float arg4 ;
  Piavca::RandomTimingsMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_RandomTimingsMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RandomTimingsMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RandomTimingsMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_RandomTimingsMotion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::RandomTimingsMotion *)new SwigDirector_RandomTimingsMotion(arg1,arg2,arg3,arg4); 
      } else {
        result = (Piavca::RandomTimingsMotion *)new Piavca::RandomTimingsMotion(arg2,arg3,arg4); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomTimingsMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomTimingsMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  Piavca::RandomTimingsMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_RandomTimingsMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RandomTimingsMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RandomTimingsMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::RandomTimingsMotion *)new SwigDirector_RandomTimingsMotion(arg1,arg2,arg3); 
      } else {
        result = (Piavca::RandomTimingsMotion *)new Piavca::RandomTimingsMotion(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomTimingsMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomTimingsMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::RandomTimingsMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_RandomTimingsMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RandomTimingsMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::RandomTimingsMotion *)new SwigDirector_RandomTimingsMotion(arg1,arg2); 
      } else {
        result = (Piavca::RandomTimingsMotion *)new Piavca::RandomTimingsMotion(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomTimingsMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomTimingsMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::RandomTimingsMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_RandomTimingsMotion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::RandomTimingsMotion *)new SwigDirector_RandomTimingsMotion(arg1); 
      } else {
        result = (Piavca::RandomTimingsMotion *)new Piavca::RandomTimingsMotion(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomTimingsMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomTimingsMotion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::RandomTimingsMotion *arg2 = 0 ;
  Piavca::RandomTimingsMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_RandomTimingsMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__RandomTimingsMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RandomTimingsMotion" "', argument " "2"" of type '" "Piavca::RandomTimingsMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RandomTimingsMotion" "', argument " "2"" of type '" "Piavca::RandomTimingsMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::RandomTimingsMotion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::RandomTimingsMotion *)new SwigDirector_RandomTimingsMotion(arg1,(Piavca::RandomTimingsMotion const &)*arg2); 
      } else {
        result = (Piavca::RandomTimingsMotion *)new Piavca::RandomTimingsMotion((Piavca::RandomTimingsMotion const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomTimingsMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomTimingsMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_RandomTimingsMotion__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__RandomTimingsMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_RandomTimingsMotion__SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_RandomTimingsMotion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_RandomTimingsMotion__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_RandomTimingsMotion__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_RandomTimingsMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::RandomTimingsMotion(PyObject *,Piavca::Motion *,float,float)\n    Piavca::RandomTimingsMotion(PyObject *,Piavca::Motion *,float)\n    Piavca::RandomTimingsMotion(PyObject *,Piavca::Motion *)\n    Piavca::RandomTimingsMotion(PyObject *)\n    Piavca::RandomTimingsMotion(PyObject *,Piavca::RandomTimingsMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RandomTimingsMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomTimingsMotion *arg1 = (Piavca::RandomTimingsMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RandomTimingsMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomTimingsMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RandomTimingsMotion" "', argument " "1"" of type '" "Piavca::RandomTimingsMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomTimingsMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomTimingsMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomTimingsMotion *arg1 = (Piavca::RandomTimingsMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomTimingsMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomTimingsMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomTimingsMotion_clone" "', argument " "1"" of type '" "Piavca::RandomTimingsMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomTimingsMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::RandomTimingsMotion::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomTimingsMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomTimingsMotion *arg1 = (Piavca::RandomTimingsMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomTimingsMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomTimingsMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomTimingsMotion_getClassName" "', argument " "1"" of type '" "Piavca::RandomTimingsMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomTimingsMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::RandomTimingsMotion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomTimingsMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::RandomTimingsMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomTimingsMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomTimingsMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::RandomTimingsMotion *)Piavca::RandomTimingsMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomTimingsMotion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomTimingsMotion_setTimingParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomTimingsMotion *arg1 = (Piavca::RandomTimingsMotion *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomTimingsMotion_setTimingParams",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomTimingsMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomTimingsMotion_setTimingParams" "', argument " "1"" of type '" "Piavca::RandomTimingsMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomTimingsMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomTimingsMotion_setTimingParams" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RandomTimingsMotion_setTimingParams" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::RandomTimingsMotion::setTimingParams(arg2,arg3);
        } else {
          (arg1)->setTimingParams(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomTimingsMotion_setMinTimeScale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomTimingsMotion *arg1 = (Piavca::RandomTimingsMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomTimingsMotion_setMinTimeScale",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomTimingsMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomTimingsMotion_setMinTimeScale" "', argument " "1"" of type '" "Piavca::RandomTimingsMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomTimingsMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomTimingsMotion_setMinTimeScale" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setMinTimeScale(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomTimingsMotion_getMinTimeScale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomTimingsMotion *arg1 = (Piavca::RandomTimingsMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomTimingsMotion_getMinTimeScale",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomTimingsMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomTimingsMotion_getMinTimeScale" "', argument " "1"" of type '" "Piavca::RandomTimingsMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomTimingsMotion * >(argp1);
  {
    try {
      result = (float)(arg1)->getMinTimeScale(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomTimingsMotion_setMaxTimeScale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomTimingsMotion *arg1 = (Piavca::RandomTimingsMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomTimingsMotion_setMaxTimeScale",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomTimingsMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomTimingsMotion_setMaxTimeScale" "', argument " "1"" of type '" "Piavca::RandomTimingsMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomTimingsMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomTimingsMotion_setMaxTimeScale" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setMaxTimeScale(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomTimingsMotion_getMaxTimeScale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomTimingsMotion *arg1 = (Piavca::RandomTimingsMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomTimingsMotion_getMaxTimeScale",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomTimingsMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomTimingsMotion_getMaxTimeScale" "', argument " "1"" of type '" "Piavca::RandomTimingsMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomTimingsMotion * >(argp1);
  {
    try {
      result = (float)(arg1)->getMaxTimeScale(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomTimingsMotion_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomTimingsMotion *arg1 = (Piavca::RandomTimingsMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomTimingsMotion_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomTimingsMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomTimingsMotion_reset" "', argument " "1"" of type '" "Piavca::RandomTimingsMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomTimingsMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::RandomTimingsMotion::reset();
        } else {
          (arg1)->reset();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_RandomTimingsMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomTimingsMotion *arg1 = (Piavca::RandomTimingsMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_RandomTimingsMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomTimingsMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_RandomTimingsMotion" "', argument " "1"" of type '" "Piavca::RandomTimingsMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomTimingsMotion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RandomTimingsMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__RandomTimingsMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_AvatarPostureBlend__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  float arg2 ;
  bool arg3 ;
  Piavca::AvatarPostureBlend *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_AvatarPostureBlend",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AvatarPostureBlend" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AvatarPostureBlend" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_AvatarPostureBlend" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = (Piavca::AvatarPostureBlend *)new Piavca::AvatarPostureBlend(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarPostureBlend__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  float arg2 ;
  Piavca::AvatarPostureBlend *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_AvatarPostureBlend",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AvatarPostureBlend" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AvatarPostureBlend" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (Piavca::AvatarPostureBlend *)new Piavca::AvatarPostureBlend(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarPostureBlend__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::AvatarPostureBlend *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_AvatarPostureBlend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AvatarPostureBlend" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::AvatarPostureBlend *)new Piavca::AvatarPostureBlend(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarPostureBlend__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AvatarPostureBlend")) SWIG_fail;
  {
    try {
      result = (Piavca::AvatarPostureBlend *)new Piavca::AvatarPostureBlend(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarPostureBlend__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = 0 ;
  Piavca::AvatarPostureBlend *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_AvatarPostureBlend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__AvatarPostureBlend,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AvatarPostureBlend" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AvatarPostureBlend" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  {
    try {
      result = (Piavca::AvatarPostureBlend *)new Piavca::AvatarPostureBlend((Piavca::AvatarPostureBlend const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarPostureBlend(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_AvatarPostureBlend__SWIG_3(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__AvatarPostureBlend, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_AvatarPostureBlend__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_AvatarPostureBlend__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_AvatarPostureBlend__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_AvatarPostureBlend__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_AvatarPostureBlend'.\n  Possible C/C++ prototypes are:\n    Piavca::AvatarPostureBlend(Piavca::Motion *,float,bool)\n    Piavca::AvatarPostureBlend(Piavca::Motion *,float)\n    Piavca::AvatarPostureBlend(Piavca::Motion *)\n    Piavca::AvatarPostureBlend()\n    Piavca::AvatarPostureBlend(Piavca::AvatarPostureBlend const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarPostureBlend_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_clone" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->clone(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarPostureBlend_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_getClassName" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  {
    try {
      result = (arg1)->getClassName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::AvatarPostureBlend *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarPostureBlend_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::AvatarPostureBlend *)Piavca::AvatarPostureBlend::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarPostureBlend_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_load" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarPostureBlend_load" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    try {
      (arg1)->load(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_setBlendInterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarPostureBlend_setBlendInterval",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_setBlendInterval" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AvatarPostureBlend_setBlendInterval" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setBlendInterval(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_getBlendInterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarPostureBlend_getBlendInterval",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_getBlendInterval" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  {
    try {
      result = (float)(arg1)->getBlendInterval(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarPostureBlend_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_isNull" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AvatarPostureBlend_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (bool)((Piavca::AvatarPostureBlend const *)arg1)->isNull(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_setMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarPostureBlend_setMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_setMotion" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarPostureBlend_setMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->setMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_getMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarPostureBlend_getMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_getMotion" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_repositionRelative(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarPostureBlend_repositionRelative",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_repositionRelative" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarPostureBlend_repositionRelative" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AvatarPostureBlend_repositionRelative" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      (arg1)->repositionRelative((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_repositionAbsolute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarPostureBlend_repositionAbsolute",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_repositionAbsolute" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarPostureBlend_repositionAbsolute" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AvatarPostureBlend_repositionAbsolute" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      (arg1)->repositionAbsolute((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_reblend__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarPostureBlend_reblend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_reblend" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  {
    try {
      (arg1)->reblend(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_reblend__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarPostureBlend_reblend",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarPostureBlend_reblend" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AvatarPostureBlend_reblend" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->reblend(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarPostureBlend_reblend(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__AvatarPostureBlend, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_AvatarPostureBlend_reblend__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__AvatarPostureBlend, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AvatarPostureBlend_reblend__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'AvatarPostureBlend_reblend'.\n  Possible C/C++ prototypes are:\n    reblend()\n    reblend(float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AvatarPostureBlend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AvatarPostureBlend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AvatarPostureBlend" "', argument " "1"" of type '" "Piavca::AvatarPostureBlend *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarPostureBlend * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AvatarPostureBlend_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_BlendBetween__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  float arg4 ;
  Piavca::BlendBetween *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_BlendBetween",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BlendBetween" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BlendBetween" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_BlendBetween" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::BlendBetween *)new SwigDirector_BlendBetween(arg1,arg2,arg3,arg4); 
      } else {
        result = (Piavca::BlendBetween *)new Piavca::BlendBetween(arg2,arg3,arg4); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlendBetween__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  Piavca::BlendBetween *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_BlendBetween",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BlendBetween" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BlendBetween" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::BlendBetween *)new SwigDirector_BlendBetween(arg1,arg2,arg3); 
      } else {
        result = (Piavca::BlendBetween *)new Piavca::BlendBetween(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlendBetween__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::BlendBetween *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_BlendBetween",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BlendBetween" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::BlendBetween *)new SwigDirector_BlendBetween(arg1,arg2); 
      } else {
        result = (Piavca::BlendBetween *)new Piavca::BlendBetween(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlendBetween__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::BlendBetween *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_BlendBetween",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::BlendBetween *)new SwigDirector_BlendBetween(arg1); 
      } else {
        result = (Piavca::BlendBetween *)new Piavca::BlendBetween(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlendBetween__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::BlendBetween *arg2 = 0 ;
  Piavca::BlendBetween *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_BlendBetween",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__BlendBetween,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BlendBetween" "', argument " "2"" of type '" "Piavca::BlendBetween const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BlendBetween" "', argument " "2"" of type '" "Piavca::BlendBetween const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::BlendBetween * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::BlendBetween *)new SwigDirector_BlendBetween(arg1,(Piavca::BlendBetween const &)*arg2); 
      } else {
        result = (Piavca::BlendBetween *)new Piavca::BlendBetween((Piavca::BlendBetween const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlendBetween(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_BlendBetween__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__BlendBetween, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_BlendBetween__SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_BlendBetween__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_BlendBetween__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_BlendBetween__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_BlendBetween'.\n  Possible C/C++ prototypes are:\n    Piavca::BlendBetween(PyObject *,Piavca::Motion *,Piavca::Motion *,float)\n    Piavca::BlendBetween(PyObject *,Piavca::Motion *,Piavca::Motion *)\n    Piavca::BlendBetween(PyObject *,Piavca::Motion *)\n    Piavca::BlendBetween(PyObject *)\n    Piavca::BlendBetween(PyObject *,Piavca::BlendBetween const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlendBetween_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BlendBetween_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__BlendBetween, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlendBetween_clone" "', argument " "1"" of type '" "Piavca::BlendBetween *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::BlendBetween * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::BlendBetween::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlendBetween_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BlendBetween_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__BlendBetween, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlendBetween_getClassName" "', argument " "1"" of type '" "Piavca::BlendBetween *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::BlendBetween * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::BlendBetween::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlendBetween_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::BlendBetween *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BlendBetween_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlendBetween_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::BlendBetween *)Piavca::BlendBetween::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__BlendBetween, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlendBetween_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BlendBetween_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__BlendBetween, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlendBetween_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::BlendBetween *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::BlendBetween * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlendBetween_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlendBetween_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::BlendBetween::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlendBetween_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BlendBetween_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__BlendBetween, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlendBetween_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::BlendBetween *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::BlendBetween * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlendBetween_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlendBetween_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::BlendBetween::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlendBetween_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BlendBetween_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__BlendBetween, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlendBetween_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::BlendBetween *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::BlendBetween * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlendBetween_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BlendBetween_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::BlendBetween::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlendBetween_setBlendFactor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BlendBetween_setBlendFactor",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__BlendBetween, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlendBetween_setBlendFactor" "', argument " "1"" of type '" "Piavca::BlendBetween *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::BlendBetween * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BlendBetween_setBlendFactor" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setBlendFactor(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BlendBetween_getBlendFactor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BlendBetween_getBlendFactor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__BlendBetween, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlendBetween_getBlendFactor" "', argument " "1"" of type '" "Piavca::BlendBetween *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::BlendBetween * >(argp1);
  {
    try {
      result = (float)(arg1)->getBlendFactor(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BlendBetween(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BlendBetween",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BlendBetween" "', argument " "1"" of type '" "Piavca::BlendBetween *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::BlendBetween * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_BlendBetween(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_BlendBetween",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__BlendBetween, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_BlendBetween" "', argument " "1"" of type '" "Piavca::BlendBetween *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::BlendBetween * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BlendBetween_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__BlendBetween, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MotionAdder__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionAdder *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MotionAdder",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionAdder *)new SwigDirector_MotionAdder(arg1); 
      } else {
        result = (Piavca::MotionAdder *)new Piavca::MotionAdder(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionAdder, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionAdder__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionVec *arg2 = 0 ;
  Piavca::MotionAdder *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MotionAdder",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionAdder" "', argument " "2"" of type '" "Piavca::MotionVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MotionAdder" "', argument " "2"" of type '" "Piavca::MotionVec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MotionVec * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionAdder *)new SwigDirector_MotionAdder(arg1,(Piavca::MotionVec const &)*arg2); 
      } else {
        result = (Piavca::MotionAdder *)new Piavca::MotionAdder((Piavca::MotionVec const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionAdder, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionAdder__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionAdder *arg2 = 0 ;
  Piavca::MotionAdder *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MotionAdder",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__MotionAdder,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionAdder" "', argument " "2"" of type '" "Piavca::MotionAdder const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MotionAdder" "', argument " "2"" of type '" "Piavca::MotionAdder const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MotionAdder * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionAdder *)new SwigDirector_MotionAdder(arg1,(Piavca::MotionAdder const &)*arg2); 
      } else {
        result = (Piavca::MotionAdder *)new Piavca::MotionAdder((Piavca::MotionAdder const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionAdder, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionAdder(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_MotionAdder__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MotionAdder__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__MotionAdder, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MotionAdder__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_MotionAdder'.\n  Possible C/C++ prototypes are:\n    Piavca::MotionAdder(PyObject *)\n    Piavca::MotionAdder(PyObject *,Piavca::MotionVec const &)\n    Piavca::MotionAdder(PyObject *,Piavca::MotionAdder const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionAdder_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionAdder_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionAdder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionAdder_clone" "', argument " "1"" of type '" "Piavca::MotionAdder *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionAdder * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::MotionAdder::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionAdder_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionAdder_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionAdder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionAdder_getClassName" "', argument " "1"" of type '" "Piavca::MotionAdder *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionAdder * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MotionAdder::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionAdder_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::MotionAdder *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionAdder_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionAdder_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::MotionAdder *)Piavca::MotionAdder::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionAdder, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionAdder_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionAdder_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionAdder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionAdder_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionAdder *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionAdder * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionAdder_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionAdder_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::MotionAdder::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionAdder_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionAdder_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionAdder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionAdder_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionAdder *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionAdder * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionAdder_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionAdder_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MotionAdder::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionAdder_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionAdder_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionAdder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionAdder_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionAdder *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionAdder * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionAdder_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionAdder_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MotionAdder::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MotionAdder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MotionAdder",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionAdder, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MotionAdder" "', argument " "1"" of type '" "Piavca::MotionAdder *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionAdder * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_MotionAdder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_MotionAdder",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionAdder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_MotionAdder" "', argument " "1"" of type '" "Piavca::MotionAdder *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionAdder * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MotionAdder_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__MotionAdder, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Subtract__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  Piavca::Subtract *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_Subtract",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Subtract" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Subtract" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Subtract *)new SwigDirector_Subtract(arg1,arg2,arg3); 
      } else {
        result = (Piavca::Subtract *)new Piavca::Subtract(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Subtract, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Subtract__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Subtract *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Subtract",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Subtract" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Subtract *)new SwigDirector_Subtract(arg1,arg2); 
      } else {
        result = (Piavca::Subtract *)new Piavca::Subtract(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Subtract, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Subtract__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Subtract *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Subtract",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Subtract *)new SwigDirector_Subtract(arg1); 
      } else {
        result = (Piavca::Subtract *)new Piavca::Subtract(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Subtract, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Subtract__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Subtract *arg2 = 0 ;
  Piavca::Subtract *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Subtract",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Subtract,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Subtract" "', argument " "2"" of type '" "Piavca::Subtract const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Subtract" "', argument " "2"" of type '" "Piavca::Subtract const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Subtract * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::Subtract *)new SwigDirector_Subtract(arg1,(Piavca::Subtract const &)*arg2); 
      } else {
        result = (Piavca::Subtract *)new Piavca::Subtract((Piavca::Subtract const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Subtract, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Subtract(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_Subtract__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Subtract, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Subtract__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Subtract__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_Subtract__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Subtract'.\n  Possible C/C++ prototypes are:\n    Piavca::Subtract(PyObject *,Piavca::Motion *,Piavca::Motion *)\n    Piavca::Subtract(PyObject *,Piavca::Motion *)\n    Piavca::Subtract(PyObject *)\n    Piavca::Subtract(PyObject *,Piavca::Subtract const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_Subtract_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Subtract *arg1 = (Piavca::Subtract *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Subtract_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Subtract, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Subtract_clone" "', argument " "1"" of type '" "Piavca::Subtract *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Subtract * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::Subtract::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Subtract_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Subtract *arg1 = (Piavca::Subtract *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Subtract_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Subtract, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Subtract_getClassName" "', argument " "1"" of type '" "Piavca::Subtract *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Subtract * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Subtract::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Subtract_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Subtract *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Subtract_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Subtract_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::Subtract *)Piavca::Subtract::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Subtract, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Subtract_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Subtract *arg1 = (Piavca::Subtract *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Subtract_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Subtract, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Subtract_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Subtract *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Subtract * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Subtract_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Subtract_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::Subtract::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Subtract_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Subtract *arg1 = (Piavca::Subtract *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Subtract_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Subtract, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Subtract_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Subtract *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Subtract * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Subtract_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Subtract_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Subtract::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Subtract_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Subtract *arg1 = (Piavca::Subtract *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Subtract_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Subtract, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Subtract_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::Subtract *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Subtract * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Subtract_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Subtract_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::Subtract::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Subtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Subtract *arg1 = (Piavca::Subtract *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Subtract",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Subtract, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Subtract" "', argument " "1"" of type '" "Piavca::Subtract *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Subtract * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_Subtract(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Subtract *arg1 = (Piavca::Subtract *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_Subtract",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Subtract, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_Subtract" "', argument " "1"" of type '" "Piavca::Subtract *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Subtract * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Subtract_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__Subtract, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TransitionFunction_eval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TransitionFunction *arg1 = (Piavca::TransitionFunction *) 0 ;
  float arg2 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransitionFunction_eval",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TransitionFunction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransitionFunction_eval" "', argument " "1"" of type '" "Piavca::TransitionFunction *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TransitionFunction * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TransitionFunction_eval" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->eval(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TransitionFunction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TransitionFunction *arg1 = (Piavca::TransitionFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TransitionFunction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TransitionFunction, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TransitionFunction" "', argument " "1"" of type '" "Piavca::TransitionFunction *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TransitionFunction * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TransitionFunction_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__TransitionFunction, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_LinearTransition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LinearTransition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_LinearTransition")) SWIG_fail;
  {
    try {
      result = (Piavca::LinearTransition *)new Piavca::LinearTransition(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LinearTransition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearTransition_eval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LinearTransition *arg1 = (Piavca::LinearTransition *) 0 ;
  float arg2 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LinearTransition_eval",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LinearTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearTransition_eval" "', argument " "1"" of type '" "Piavca::LinearTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LinearTransition * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LinearTransition_eval" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->eval(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LinearTransition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LinearTransition *arg1 = (Piavca::LinearTransition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LinearTransition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LinearTransition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LinearTransition" "', argument " "1"" of type '" "Piavca::LinearTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LinearTransition * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LinearTransition_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__LinearTransition, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SmoothTransition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothTransition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SmoothTransition")) SWIG_fail;
  {
    try {
      result = (Piavca::SmoothTransition *)new Piavca::SmoothTransition(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SmoothTransition, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SmoothTransition_eval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothTransition *arg1 = (Piavca::SmoothTransition *) 0 ;
  float arg2 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SmoothTransition_eval",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmoothTransition_eval" "', argument " "1"" of type '" "Piavca::SmoothTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothTransition * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SmoothTransition_eval" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (float)(arg1)->eval(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SmoothTransition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SmoothTransition *arg1 = (Piavca::SmoothTransition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SmoothTransition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SmoothTransition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SmoothTransition" "', argument " "1"" of type '" "Piavca::SmoothTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SmoothTransition * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SmoothTransition_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__SmoothTransition, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MotionTransition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  Piavca::TransitionFunction *arg6 = (Piavca::TransitionFunction *) 0 ;
  Piavca::MotionTransition *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_MotionTransition",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MotionTransition" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionTransition" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_MotionTransition" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_MotionTransition" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_MotionTransition" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Piavca__TransitionFunction, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_MotionTransition" "', argument " "6"" of type '" "Piavca::TransitionFunction *""'"); 
  }
  arg6 = reinterpret_cast< Piavca::TransitionFunction * >(argp6);
  {
    try {
      result = (Piavca::MotionTransition *)new Piavca::MotionTransition(arg1,arg2,arg3,arg4,arg5,arg6); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionTransition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionTransition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  Piavca::MotionTransition *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_MotionTransition",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MotionTransition" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionTransition" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_MotionTransition" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_MotionTransition" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_MotionTransition" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      result = (Piavca::MotionTransition *)new Piavca::MotionTransition(arg1,arg2,arg3,arg4,arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionTransition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionTransition__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  float arg4 ;
  Piavca::MotionTransition *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_MotionTransition",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MotionTransition" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionTransition" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_MotionTransition" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_MotionTransition" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (Piavca::MotionTransition *)new Piavca::MotionTransition(arg1,arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionTransition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionTransition__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  Piavca::MotionTransition *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_MotionTransition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MotionTransition" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionTransition" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_MotionTransition" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (Piavca::MotionTransition *)new Piavca::MotionTransition(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionTransition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionTransition__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::MotionTransition *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MotionTransition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MotionTransition" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionTransition" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      result = (Piavca::MotionTransition *)new Piavca::MotionTransition(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionTransition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionTransition__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::MotionTransition *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MotionTransition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MotionTransition" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::MotionTransition *)new Piavca::MotionTransition(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionTransition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionTransition__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MotionTransition")) SWIG_fail;
  {
    try {
      result = (Piavca::MotionTransition *)new Piavca::MotionTransition(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionTransition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionTransition__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = 0 ;
  Piavca::MotionTransition *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MotionTransition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__MotionTransition,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MotionTransition" "', argument " "1"" of type '" "Piavca::MotionTransition const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MotionTransition" "', argument " "1"" of type '" "Piavca::MotionTransition const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  {
    try {
      result = (Piavca::MotionTransition *)new Piavca::MotionTransition((Piavca::MotionTransition const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionTransition, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionTransition(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_MotionTransition__SWIG_6(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__MotionTransition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MotionTransition__SWIG_7(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MotionTransition__SWIG_5(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MotionTransition__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_MotionTransition__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_MotionTransition__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_MotionTransition__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Piavca__TransitionFunction, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_MotionTransition__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_MotionTransition'.\n  Possible C/C++ prototypes are:\n    Piavca::MotionTransition(Piavca::Motion *,Piavca::Motion *,float,float,float,Piavca::TransitionFunction *)\n    Piavca::MotionTransition(Piavca::Motion *,Piavca::Motion *,float,float,float)\n    Piavca::MotionTransition(Piavca::Motion *,Piavca::Motion *,float,float)\n    Piavca::MotionTransition(Piavca::Motion *,Piavca::Motion *,float)\n    Piavca::MotionTransition(Piavca::Motion *,Piavca::Motion *)\n    Piavca::MotionTransition(Piavca::Motion *)\n    Piavca::MotionTransition()\n    Piavca::MotionTransition(Piavca::MotionTransition const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionTransition_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_clone" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->clone(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionTransition_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_getClassName" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  {
    try {
      result = (arg1)->getClassName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::MotionTransition *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionTransition_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::MotionTransition *)Piavca::MotionTransition::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_setTransitionFunction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  Piavca::TransitionFunction *arg2 = (Piavca::TransitionFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionTransition_setTransitionFunction",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_setTransitionFunction" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__TransitionFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MotionTransition_setTransitionFunction" "', argument " "2"" of type '" "Piavca::TransitionFunction *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::TransitionFunction * >(argp2);
  {
    try {
      (arg1)->setTransitionFunction(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_setTransitionTime1__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionTransition_setTransitionTime1",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_setTransitionTime1" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionTransition_setTransitionTime1" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setTransitionTime1(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_setTransitionTime1__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionTransition_setTransitionTime1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_setTransitionTime1" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  {
    try {
      (arg1)->setTransitionTime1(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_setTransitionTime1(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__MotionTransition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MotionTransition_setTransitionTime1__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__MotionTransition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MotionTransition_setTransitionTime1__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MotionTransition_setTransitionTime1'.\n  Possible C/C++ prototypes are:\n    setTransitionTime1(float)\n    setTransitionTime1()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_getTransitionTime1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionTransition_getTransitionTime1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_getTransitionTime1" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  {
    try {
      result = (float)(arg1)->getTransitionTime1(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_setTransitionTime2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionTransition_setTransitionTime2",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_setTransitionTime2" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionTransition_setTransitionTime2" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setTransitionTime2(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_setTransitionTime2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionTransition_setTransitionTime2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_setTransitionTime2" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  {
    try {
      (arg1)->setTransitionTime2(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_setTransitionTime2(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__MotionTransition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MotionTransition_setTransitionTime2__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__MotionTransition, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MotionTransition_setTransitionTime2__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MotionTransition_setTransitionTime2'.\n  Possible C/C++ prototypes are:\n    setTransitionTime2(float)\n    setTransitionTime2()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_getTransitionTime2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionTransition_getTransitionTime2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_getTransitionTime2" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  {
    try {
      result = (float)(arg1)->getTransitionTime2(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_setWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionTransition_setWindow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_setWindow" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionTransition_setWindow" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setWindow(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_getWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionTransition_getWindow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_getWindow" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  {
    try {
      result = (float)(arg1)->getWindow(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_setMotion1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionTransition_setMotion1",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_setMotion1" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MotionTransition_setMotion1" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->setMotion1(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_setStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionTransition_setStartTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_setStartTime" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionTransition_setStartTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setStartTime(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionTransition_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_getMotionLength" "', argument " "1"" of type '" "Piavca::MotionTransition const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  {
    try {
      result = (float)((Piavca::MotionTransition const *)arg1)->getMotionLength(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionTransition_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionTransition_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionTransition_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionTransition_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionTransition_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionTransition_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (arg1)->getVecValueAtTimeInternal(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionTransition_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionTransition_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionTransition_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionTransition_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionTransition_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MotionTransition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionTransition *arg1 = (Piavca::MotionTransition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MotionTransition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionTransition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MotionTransition" "', argument " "1"" of type '" "Piavca::MotionTransition *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionTransition * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MotionTransition_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__MotionTransition, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ChoiceMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ChoiceMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ChoiceMotion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ChoiceMotion *)new SwigDirector_ChoiceMotion(arg1); 
      } else {
        result = (Piavca::ChoiceMotion *)new Piavca::ChoiceMotion(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChoiceMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ChoiceMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionVec *arg2 = 0 ;
  Piavca::ChoiceMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ChoiceMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ChoiceMotion" "', argument " "2"" of type '" "Piavca::MotionVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ChoiceMotion" "', argument " "2"" of type '" "Piavca::MotionVec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MotionVec * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ChoiceMotion *)new SwigDirector_ChoiceMotion(arg1,(Piavca::MotionVec const &)*arg2); 
      } else {
        result = (Piavca::ChoiceMotion *)new Piavca::ChoiceMotion((Piavca::MotionVec const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChoiceMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ChoiceMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ChoiceMotion *arg2 = 0 ;
  Piavca::ChoiceMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ChoiceMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__ChoiceMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ChoiceMotion" "', argument " "2"" of type '" "Piavca::ChoiceMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ChoiceMotion" "', argument " "2"" of type '" "Piavca::ChoiceMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::ChoiceMotion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ChoiceMotion *)new SwigDirector_ChoiceMotion(arg1,(Piavca::ChoiceMotion const &)*arg2); 
      } else {
        result = (Piavca::ChoiceMotion *)new Piavca::ChoiceMotion((Piavca::ChoiceMotion const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChoiceMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ChoiceMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_ChoiceMotion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ChoiceMotion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__ChoiceMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ChoiceMotion__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_ChoiceMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::ChoiceMotion(PyObject *)\n    Piavca::ChoiceMotion(PyObject *,Piavca::MotionVec const &)\n    Piavca::ChoiceMotion(PyObject *,Piavca::ChoiceMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ChoiceMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ChoiceMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ChoiceMotion" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_clone" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::ChoiceMotion::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getClassName" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ChoiceMotion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::ChoiceMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::ChoiceMotion *)Piavca::ChoiceMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_setSmooth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_setSmooth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_setSmooth" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ChoiceMotion_setSmooth" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setSmooth(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getSmooth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getSmooth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getSmooth" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    try {
      result = (bool)(arg1)->getSmooth(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_setResetTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_setResetTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_setResetTime" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ChoiceMotion_setResetTime" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setResetTime(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getResetTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getResetTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getResetTime" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    try {
      result = (bool)(arg1)->getResetTime(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_setWindowLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_setWindowLength",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_setWindowLength" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ChoiceMotion_setWindowLength" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setWindowLength(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getWindowLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getWindowLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getWindowLength" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    try {
      result = (float)(arg1)->getWindowLength(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_setResetOnEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_setResetOnEvent",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_setResetOnEvent" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ChoiceMotion_setResetOnEvent" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setResetOnEvent(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getResetOnEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getResetOnEvent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getResetOnEvent" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    try {
      result = (bool)(arg1)->getResetOnEvent(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_setAccumulateRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_setAccumulateRoot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_setAccumulateRoot" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ChoiceMotion_setAccumulateRoot" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setAccumulateRoot(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getAccumulateRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getAccumulateRoot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getAccumulateRoot" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    try {
      result = (bool)(arg1)->getAccumulateRoot(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_printInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_printInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_printInfo" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::ChoiceMotion::printInfo();
        } else {
          (arg1)->printInfo();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getMotionLength" "', argument " "1"" of type '" "Piavca::ChoiceMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::ChoiceMotion const *)arg1)->Piavca::ChoiceMotion::getMotionLength();
        } else {
          result = (float)((Piavca::ChoiceMotion const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_addMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_addMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_addMotion" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ChoiceMotion_addMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::ChoiceMotion::addMotion(arg2);
        } else {
          (arg1)->addMotion(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getMotionIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  Piavca::tstring arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_getMotionIndex",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getMotionIndex" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (int)(arg1)->getMotionIndex(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getNumMotions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getNumMotions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getNumMotions" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    try {
      result = (int)(arg1)->getNumMotions(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getMotionByIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  int arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_getMotionByIndex",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getMotionByIndex" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ChoiceMotion_getMotionByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotionByIndex(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getMotion" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getLeafMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getLeafMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getLeafMotion" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getLeafMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  int arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_getMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getMotion" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ChoiceMotion_getMotion" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_getMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getMotion" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      result = (Piavca::Motion *)(arg1)->getMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__ChoiceMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ChoiceMotion_getMotion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__ChoiceMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ChoiceMotion_getMotion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__ChoiceMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ChoiceMotion_getMotion__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'ChoiceMotion_getMotion'.\n  Possible C/C++ prototypes are:\n    getMotion()\n    getMotion(int)\n    getMotion(Piavca::tstring)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_removeMotionByIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_removeMotionByIndex",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_removeMotionByIndex" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ChoiceMotion_removeMotionByIndex" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->removeMotionByIndex(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_clear" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    try {
      (arg1)->clear(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_findSub(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_findSub",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_findSub" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::ChoiceMotion::findSub(arg2);
        } else {
          result = (Piavca::Motion *)(arg1)->findSub(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_findSubByType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  type_info *arg2 = 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_findSubByType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_findSubByType" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__type_info,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ChoiceMotion_findSubByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ChoiceMotion_findSubByType" "', argument " "2"" of type '" "type_info const &""'"); 
  }
  arg2 = reinterpret_cast< type_info * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::ChoiceMotion::findSubByType((type_info const &)*arg2);
        } else {
          result = (Piavca::Motion *)(arg1)->findSubByType((type_info const &)*arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_cleanRecursionState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_cleanRecursionState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_cleanRecursionState" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::ChoiceMotion::cleanRecursionState();
        } else {
          (arg1)->cleanRecursionState();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_setChoice__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_setChoice",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_setChoice" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ChoiceMotion_setChoice" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->setChoice(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_setChoice__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_setChoice",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_setChoice" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->setChoice(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_setChoice(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__ChoiceMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ChoiceMotion_setChoice__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__ChoiceMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ChoiceMotion_setChoice__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'ChoiceMotion_setChoice'.\n  Possible C/C++ prototypes are:\n    setChoice(int)\n    setChoice(Piavca::tstring)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getCurrentChoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getCurrentChoice",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getCurrentChoice" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    try {
      result = (int)(arg1)->getCurrentChoice(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_makeChoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_makeChoice",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_makeChoice" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (int)(arg1)->Piavca::ChoiceMotion::makeChoice();
        } else {
          result = (int)(arg1)->makeChoice();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ChoiceMotion_event",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_event" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::ChoiceMotion::event(arg2);
        } else {
          (arg1)->event(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_getEventNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_getEventNames",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_getEventNames" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ChoiceMotion::getEventNames();
        } else {
          result = (arg1)->getEventNames();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    int len = (&result)->size();
    resultobj = PyList_New(0);
    for (int i = 0; i < len; i++)
    {
      PyList_Append(resultobj,  
        PyString_FromString(((*(&(result)))[i]).c_str()));
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotion_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotion_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotion_reset" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::ChoiceMotion::reset();
        } else {
          (arg1)->reset();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_ChoiceMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotion *arg1 = (Piavca::ChoiceMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_ChoiceMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_ChoiceMotion" "', argument " "1"" of type '" "Piavca::ChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ChoiceMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__ChoiceMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ChoiceMotionWithDefault__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotionWithDefault *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ChoiceMotionWithDefault")) SWIG_fail;
  {
    try {
      result = (Piavca::ChoiceMotionWithDefault *)new Piavca::ChoiceMotionWithDefault(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChoiceMotionWithDefault, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ChoiceMotionWithDefault__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionVec *arg1 = 0 ;
  Piavca::ChoiceMotionWithDefault *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ChoiceMotionWithDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ChoiceMotionWithDefault" "', argument " "1"" of type '" "Piavca::MotionVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ChoiceMotionWithDefault" "', argument " "1"" of type '" "Piavca::MotionVec const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionVec * >(argp1);
  {
    try {
      result = (Piavca::ChoiceMotionWithDefault *)new Piavca::ChoiceMotionWithDefault((Piavca::MotionVec const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChoiceMotionWithDefault, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ChoiceMotionWithDefault__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotionWithDefault *arg1 = 0 ;
  Piavca::ChoiceMotionWithDefault *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ChoiceMotionWithDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__ChoiceMotionWithDefault,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ChoiceMotionWithDefault" "', argument " "1"" of type '" "Piavca::ChoiceMotionWithDefault const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ChoiceMotionWithDefault" "', argument " "1"" of type '" "Piavca::ChoiceMotionWithDefault const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotionWithDefault * >(argp1);
  {
    try {
      result = (Piavca::ChoiceMotionWithDefault *)new Piavca::ChoiceMotionWithDefault((Piavca::ChoiceMotionWithDefault const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChoiceMotionWithDefault, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ChoiceMotionWithDefault(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ChoiceMotionWithDefault__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ChoiceMotionWithDefault__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__ChoiceMotionWithDefault, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ChoiceMotionWithDefault__SWIG_2(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_ChoiceMotionWithDefault'.\n  Possible C/C++ prototypes are:\n    Piavca::ChoiceMotionWithDefault()\n    Piavca::ChoiceMotionWithDefault(Piavca::MotionVec const &)\n    Piavca::ChoiceMotionWithDefault(Piavca::ChoiceMotionWithDefault const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ChoiceMotionWithDefault(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotionWithDefault *arg1 = (Piavca::ChoiceMotionWithDefault *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ChoiceMotionWithDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotionWithDefault, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ChoiceMotionWithDefault" "', argument " "1"" of type '" "Piavca::ChoiceMotionWithDefault *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotionWithDefault * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotionWithDefault_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotionWithDefault *arg1 = (Piavca::ChoiceMotionWithDefault *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotionWithDefault_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotionWithDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotionWithDefault_clone" "', argument " "1"" of type '" "Piavca::ChoiceMotionWithDefault *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotionWithDefault * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->clone(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotionWithDefault_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotionWithDefault *arg1 = (Piavca::ChoiceMotionWithDefault *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotionWithDefault_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotionWithDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotionWithDefault_getClassName" "', argument " "1"" of type '" "Piavca::ChoiceMotionWithDefault *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotionWithDefault * >(argp1);
  {
    try {
      result = (arg1)->getClassName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotionWithDefault_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::ChoiceMotionWithDefault *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotionWithDefault_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotionWithDefault_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::ChoiceMotionWithDefault *)Piavca::ChoiceMotionWithDefault::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ChoiceMotionWithDefault, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ChoiceMotionWithDefault_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ChoiceMotionWithDefault *arg1 = (Piavca::ChoiceMotionWithDefault *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ChoiceMotionWithDefault_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ChoiceMotionWithDefault, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ChoiceMotionWithDefault_reset" "', argument " "1"" of type '" "Piavca::ChoiceMotionWithDefault *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ChoiceMotionWithDefault * >(argp1);
  {
    try {
      (arg1)->reset(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ChoiceMotionWithDefault_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__ChoiceMotionWithDefault, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SequentialChoiceMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SequentialChoiceMotion *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SequentialChoiceMotion")) SWIG_fail;
  {
    try {
      result = (Piavca::SequentialChoiceMotion *)new Piavca::SequentialChoiceMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SequentialChoiceMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SequentialChoiceMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionVec *arg1 = 0 ;
  Piavca::SequentialChoiceMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SequentialChoiceMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SequentialChoiceMotion" "', argument " "1"" of type '" "Piavca::MotionVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SequentialChoiceMotion" "', argument " "1"" of type '" "Piavca::MotionVec const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionVec * >(argp1);
  {
    try {
      result = (Piavca::SequentialChoiceMotion *)new Piavca::SequentialChoiceMotion((Piavca::MotionVec const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SequentialChoiceMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SequentialChoiceMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SequentialChoiceMotion *arg1 = 0 ;
  Piavca::SequentialChoiceMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SequentialChoiceMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__SequentialChoiceMotion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SequentialChoiceMotion" "', argument " "1"" of type '" "Piavca::SequentialChoiceMotion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SequentialChoiceMotion" "', argument " "1"" of type '" "Piavca::SequentialChoiceMotion const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SequentialChoiceMotion * >(argp1);
  {
    try {
      result = (Piavca::SequentialChoiceMotion *)new Piavca::SequentialChoiceMotion((Piavca::SequentialChoiceMotion const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SequentialChoiceMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SequentialChoiceMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SequentialChoiceMotion__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SequentialChoiceMotion__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__SequentialChoiceMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SequentialChoiceMotion__SWIG_2(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SequentialChoiceMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::SequentialChoiceMotion()\n    Piavca::SequentialChoiceMotion(Piavca::MotionVec const &)\n    Piavca::SequentialChoiceMotion(Piavca::SequentialChoiceMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SequentialChoiceMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SequentialChoiceMotion *arg1 = (Piavca::SequentialChoiceMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SequentialChoiceMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SequentialChoiceMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SequentialChoiceMotion" "', argument " "1"" of type '" "Piavca::SequentialChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SequentialChoiceMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SequentialChoiceMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SequentialChoiceMotion *arg1 = (Piavca::SequentialChoiceMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SequentialChoiceMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SequentialChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SequentialChoiceMotion_clone" "', argument " "1"" of type '" "Piavca::SequentialChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SequentialChoiceMotion * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->clone(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SequentialChoiceMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SequentialChoiceMotion *arg1 = (Piavca::SequentialChoiceMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SequentialChoiceMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SequentialChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SequentialChoiceMotion_getClassName" "', argument " "1"" of type '" "Piavca::SequentialChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SequentialChoiceMotion * >(argp1);
  {
    try {
      result = (arg1)->getClassName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SequentialChoiceMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::SequentialChoiceMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SequentialChoiceMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SequentialChoiceMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::SequentialChoiceMotion *)Piavca::SequentialChoiceMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SequentialChoiceMotion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SequentialChoiceMotion_makeChoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SequentialChoiceMotion *arg1 = (Piavca::SequentialChoiceMotion *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SequentialChoiceMotion_makeChoice",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SequentialChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SequentialChoiceMotion_makeChoice" "', argument " "1"" of type '" "Piavca::SequentialChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SequentialChoiceMotion * >(argp1);
  {
    try {
      result = (int)(arg1)->makeChoice(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SequentialChoiceMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__SequentialChoiceMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_RandomChoiceMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomChoiceMotion *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_RandomChoiceMotion")) SWIG_fail;
  {
    try {
      result = (Piavca::RandomChoiceMotion *)new Piavca::RandomChoiceMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomChoiceMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomChoiceMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionVec *arg1 = 0 ;
  SwigValueWrapper<std::vector<float,std::allocator<float > > > arg2 ;
  Piavca::RandomChoiceMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_RandomChoiceMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RandomChoiceMotion" "', argument " "1"" of type '" "Piavca::MotionVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RandomChoiceMotion" "', argument " "1"" of type '" "Piavca::MotionVec const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionVec * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorTfloat_std__allocatorTfloat_t_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RandomChoiceMotion" "', argument " "2"" of type '" "std::vector<float,std::allocator<float > >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RandomChoiceMotion" "', argument " "2"" of type '" "std::vector<float,std::allocator<float > >""'");
    } else {
      std::vector<float,std::allocator<float > > * temp = reinterpret_cast< std::vector<float,std::allocator<float > > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      result = (Piavca::RandomChoiceMotion *)new Piavca::RandomChoiceMotion((Piavca::MotionVec const &)*arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomChoiceMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomChoiceMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomChoiceMotion *arg1 = 0 ;
  Piavca::RandomChoiceMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_RandomChoiceMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__RandomChoiceMotion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RandomChoiceMotion" "', argument " "1"" of type '" "Piavca::RandomChoiceMotion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RandomChoiceMotion" "', argument " "1"" of type '" "Piavca::RandomChoiceMotion const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomChoiceMotion * >(argp1);
  {
    try {
      result = (Piavca::RandomChoiceMotion *)new Piavca::RandomChoiceMotion((Piavca::RandomChoiceMotion const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomChoiceMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomChoiceMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_RandomChoiceMotion__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__RandomChoiceMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_RandomChoiceMotion__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__vectorTfloat_std__allocatorTfloat_t_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_RandomChoiceMotion__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_RandomChoiceMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::RandomChoiceMotion()\n    Piavca::RandomChoiceMotion(Piavca::MotionVec const &,std::vector<float,std::allocator<float > >)\n    Piavca::RandomChoiceMotion(Piavca::RandomChoiceMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RandomChoiceMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomChoiceMotion *arg1 = (Piavca::RandomChoiceMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RandomChoiceMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomChoiceMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RandomChoiceMotion" "', argument " "1"" of type '" "Piavca::RandomChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomChoiceMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomChoiceMotion *arg1 = (Piavca::RandomChoiceMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomChoiceMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomChoiceMotion_clone" "', argument " "1"" of type '" "Piavca::RandomChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomChoiceMotion * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->clone(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomChoiceMotion *arg1 = (Piavca::RandomChoiceMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomChoiceMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomChoiceMotion_getClassName" "', argument " "1"" of type '" "Piavca::RandomChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomChoiceMotion * >(argp1);
  {
    try {
      result = (arg1)->getClassName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::RandomChoiceMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomChoiceMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomChoiceMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::RandomChoiceMotion *)Piavca::RandomChoiceMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomChoiceMotion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_convertTo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::RandomChoiceMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomChoiceMotion_convertTo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomChoiceMotion_convertTo" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::RandomChoiceMotion *)Piavca::RandomChoiceMotion::convertTo(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomChoiceMotion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_addMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomChoiceMotion *arg1 = (Piavca::RandomChoiceMotion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomChoiceMotion_addMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomChoiceMotion_addMotion" "', argument " "1"" of type '" "Piavca::RandomChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomChoiceMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RandomChoiceMotion_addMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RandomChoiceMotion_addMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->addMotion(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_addMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomChoiceMotion *arg1 = (Piavca::RandomChoiceMotion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomChoiceMotion_addMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomChoiceMotion_addMotion" "', argument " "1"" of type '" "Piavca::RandomChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomChoiceMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RandomChoiceMotion_addMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->addMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_addMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__RandomChoiceMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_RandomChoiceMotion_addMotion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__RandomChoiceMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RandomChoiceMotion_addMotion__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RandomChoiceMotion_addMotion'.\n  Possible C/C++ prototypes are:\n    addMotion(Piavca::Motion *,float)\n    addMotion(Piavca::Motion *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_setProbability(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomChoiceMotion *arg1 = (Piavca::RandomChoiceMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomChoiceMotion_setProbability",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomChoiceMotion_setProbability" "', argument " "1"" of type '" "Piavca::RandomChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomChoiceMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomChoiceMotion_setProbability" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RandomChoiceMotion_setProbability" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->setProbability(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_setMotionProb__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomChoiceMotion *arg1 = (Piavca::RandomChoiceMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomChoiceMotion_setMotionProb",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomChoiceMotion_setMotionProb" "', argument " "1"" of type '" "Piavca::RandomChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomChoiceMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomChoiceMotion_setMotionProb" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RandomChoiceMotion_setMotionProb" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->setMotionProb(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_setMotionProb__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomChoiceMotion *arg1 = (Piavca::RandomChoiceMotion *) 0 ;
  Piavca::tstring arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomChoiceMotion_setMotionProb",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomChoiceMotion_setMotionProb" "', argument " "1"" of type '" "Piavca::RandomChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomChoiceMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RandomChoiceMotion_setMotionProb" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->setMotionProb(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_setMotionProb(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__RandomChoiceMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RandomChoiceMotion_setMotionProb__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__RandomChoiceMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RandomChoiceMotion_setMotionProb__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RandomChoiceMotion_setMotionProb'.\n  Possible C/C++ prototypes are:\n    setMotionProb(int,float)\n    setMotionProb(Piavca::tstring,float)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomChoiceMotion_makeChoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomChoiceMotion *arg1 = (Piavca::RandomChoiceMotion *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomChoiceMotion_makeChoice",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomChoiceMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomChoiceMotion_makeChoice" "', argument " "1"" of type '" "Piavca::RandomChoiceMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomChoiceMotion * >(argp1);
  {
    try {
      result = (int)(arg1)->makeChoice(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RandomChoiceMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__RandomChoiceMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PointAt__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::PointAt *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_PointAt",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::PointAt *)new SwigDirector_PointAt(arg1); 
      } else {
        result = (Piavca::PointAt *)new Piavca::PointAt(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__PointAt, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PointAt__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  int arg2 ;
  Piavca::Vec *arg3 = 0 ;
  bool arg4 ;
  Piavca::PointAt *result = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_PointAt",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  arg1 = obj0;
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PointAt" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PointAt" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PointAt" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Vec * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_PointAt" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::PointAt *)new SwigDirector_PointAt(arg1,arg2,(Piavca::Vec const &)*arg3,arg4); 
      } else {
        result = (Piavca::PointAt *)new Piavca::PointAt(arg2,(Piavca::Vec const &)*arg3,arg4); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__PointAt, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PointAt__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  int arg2 ;
  Piavca::Vec *arg3 = 0 ;
  Piavca::PointAt *result = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_PointAt",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PointAt" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PointAt" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PointAt" "', argument " "3"" of type '" "Piavca::Vec const &""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Vec * >(argp3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::PointAt *)new SwigDirector_PointAt(arg1,arg2,(Piavca::Vec const &)*arg3); 
      } else {
        result = (Piavca::PointAt *)new Piavca::PointAt(arg2,(Piavca::Vec const &)*arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__PointAt, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PointAt__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  int arg2 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  int arg4 ;
  Piavca::PointAt *result = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_PointAt",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  arg1 = obj0;
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PointAt" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PointAt" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_PointAt" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::PointAt *)new SwigDirector_PointAt(arg1,arg2,arg3,arg4); 
      } else {
        result = (Piavca::PointAt *)new Piavca::PointAt(arg2,arg3,arg4); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__PointAt, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PointAt__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::PointAt *arg2 = 0 ;
  Piavca::PointAt *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_PointAt",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__PointAt,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PointAt" "', argument " "2"" of type '" "Piavca::PointAt const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PointAt" "', argument " "2"" of type '" "Piavca::PointAt const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::PointAt * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::PointAt *)new SwigDirector_PointAt(arg1,(Piavca::PointAt const &)*arg2); 
      } else {
        result = (Piavca::PointAt *)new Piavca::PointAt((Piavca::PointAt const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__PointAt, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PointAt(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_PointAt__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__PointAt, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_PointAt__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Vec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_PointAt__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_PointAt__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__Vec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_PointAt__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_PointAt'.\n  Possible C/C++ prototypes are:\n    Piavca::PointAt(PyObject *)\n    Piavca::PointAt(PyObject *,int,Piavca::Vec const &,bool)\n    Piavca::PointAt(PyObject *,int,Piavca::Vec const &)\n    Piavca::PointAt(PyObject *,int,Piavca::Motion *,int)\n    Piavca::PointAt(PyObject *,Piavca::PointAt const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PointAt_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_clone" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::PointAt::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PointAt_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_getClassName" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::PointAt::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::PointAt *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PointAt_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::PointAt *)Piavca::PointAt::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_isRandomAccess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PointAt_isRandomAccess",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_isRandomAccess" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::PointAt::isRandomAccess();
        } else {
          result = (bool)(arg1)->isRandomAccess();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_setTarget(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PointAt_setTarget",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_setTarget" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PointAt_setTarget" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PointAt_setTarget" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      (arg1)->setTarget((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_getTarget(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PointAt_getTarget",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_getTarget" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  {
    try {
      result = (arg1)->getTarget(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_setLocal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PointAt_setLocal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_setLocal" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PointAt_setLocal" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setLocal(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_getLocal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PointAt_getLocal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_getLocal" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  {
    try {
      result = (bool)(arg1)->getLocal(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_setJointId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PointAt_setJointId",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_setJointId" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PointAt_setJointId" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->setJointId(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_getJointId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  Piavca::joint_id result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PointAt_getJointId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_getJointId" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  {
    try {
      result = (Piavca::joint_id)(arg1)->getJointId(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_setTargetJointId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PointAt_setTargetJointId",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_setTargetJointId" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PointAt_setTargetJointId" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (arg1)->setTargetJointId(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_getTargetJointId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PointAt_getTargetJointId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_getTargetJointId" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  {
    try {
      result = (int)(arg1)->getTargetJointId(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_setForwardDirection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PointAt_setForwardDirection",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_setForwardDirection" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PointAt_setForwardDirection" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PointAt_setForwardDirection" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      (arg1)->setForwardDirection((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_getForwardDirection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PointAt_getForwardDirection",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_getForwardDirection" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  {
    try {
      result = (arg1)->getForwardDirection(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PointAt_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_isNull" "', argument " "1"" of type '" "Piavca::PointAt const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PointAt_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)((Piavca::PointAt const *)arg1)->Piavca::PointAt::isNull(arg2);
        } else {
          result = (bool)((Piavca::PointAt const *)arg1)->isNull(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_getTrackType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PointAt_getTrackType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_getTrackType" "', argument " "1"" of type '" "Piavca::PointAt const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PointAt_getTrackType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (int)((Piavca::PointAt const *)arg1)->Piavca::PointAt::getTrackType(arg2);
        } else {
          result = (int)((Piavca::PointAt const *)arg1)->getTrackType(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PointAt_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PointAt_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PointAt_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::PointAt::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PointAt_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PointAt_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PointAt_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::PointAt::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PointAt_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PointAt_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PointAt_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PointAt_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PointAt_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::PointAt::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PointAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PointAt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PointAt" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_PointAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::PointAt *arg1 = (Piavca::PointAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_PointAt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__PointAt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_PointAt" "', argument " "1"" of type '" "Piavca::PointAt *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::PointAt * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PointAt_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__PointAt, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Proxemics__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg4 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg5 = (Piavca::Motion *) 0 ;
  float arg6 ;
  Piavca::Proxemics *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_Proxemics",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Proxemics" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Proxemics" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Proxemics" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Proxemics" "', argument " "4"" of type '" "Piavca::Motion *""'"); 
  }
  arg4 = reinterpret_cast< Piavca::Motion * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_Proxemics" "', argument " "5"" of type '" "Piavca::Motion *""'"); 
  }
  arg5 = reinterpret_cast< Piavca::Motion * >(argp5);
  ecode6 = SWIG_AsVal_float(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Proxemics" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  {
    try {
      result = (Piavca::Proxemics *)new Piavca::Proxemics(arg1,arg2,arg3,arg4,arg5,arg6); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Proxemics, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Proxemics__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg4 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg5 = (Piavca::Motion *) 0 ;
  Piavca::Proxemics *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_Proxemics",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Proxemics" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Proxemics" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Proxemics" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Proxemics" "', argument " "4"" of type '" "Piavca::Motion *""'"); 
  }
  arg4 = reinterpret_cast< Piavca::Motion * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_Proxemics" "', argument " "5"" of type '" "Piavca::Motion *""'"); 
  }
  arg5 = reinterpret_cast< Piavca::Motion * >(argp5);
  {
    try {
      result = (Piavca::Proxemics *)new Piavca::Proxemics(arg1,arg2,arg3,arg4,arg5); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Proxemics, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Proxemics__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg4 = (Piavca::Motion *) 0 ;
  Piavca::Proxemics *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_Proxemics",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Proxemics" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Proxemics" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Proxemics" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Proxemics" "', argument " "4"" of type '" "Piavca::Motion *""'"); 
  }
  arg4 = reinterpret_cast< Piavca::Motion * >(argp4);
  {
    try {
      result = (Piavca::Proxemics *)new Piavca::Proxemics(arg1,arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Proxemics, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Proxemics__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  Piavca::Proxemics *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_Proxemics",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Proxemics" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Proxemics" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Proxemics" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  {
    try {
      result = (Piavca::Proxemics *)new Piavca::Proxemics(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Proxemics, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Proxemics__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Proxemics *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Proxemics",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Proxemics" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Proxemics" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      result = (Piavca::Proxemics *)new Piavca::Proxemics(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Proxemics, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Proxemics__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Proxemics *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Proxemics",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Proxemics" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::Proxemics *)new Piavca::Proxemics(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Proxemics, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Proxemics__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Proxemics")) SWIG_fail;
  {
    try {
      result = (Piavca::Proxemics *)new Piavca::Proxemics(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Proxemics, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Proxemics__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = 0 ;
  Piavca::Proxemics *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Proxemics",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__Proxemics,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Proxemics" "', argument " "1"" of type '" "Piavca::Proxemics const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Proxemics" "', argument " "1"" of type '" "Piavca::Proxemics const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  {
    try {
      result = (Piavca::Proxemics *)new Piavca::Proxemics((Piavca::Proxemics const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Proxemics, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Proxemics(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Proxemics__SWIG_6(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__Proxemics, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Proxemics__SWIG_7(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_Proxemics__SWIG_5(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Proxemics__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_Proxemics__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_Proxemics__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_Proxemics__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_Proxemics__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Proxemics'.\n  Possible C/C++ prototypes are:\n    Piavca::Proxemics(Piavca::Motion *,Piavca::Motion *,Piavca::Motion *,Piavca::Motion *,Piavca::Motion *,float)\n    Piavca::Proxemics(Piavca::Motion *,Piavca::Motion *,Piavca::Motion *,Piavca::Motion *,Piavca::Motion *)\n    Piavca::Proxemics(Piavca::Motion *,Piavca::Motion *,Piavca::Motion *,Piavca::Motion *)\n    Piavca::Proxemics(Piavca::Motion *,Piavca::Motion *,Piavca::Motion *)\n    Piavca::Proxemics(Piavca::Motion *,Piavca::Motion *)\n    Piavca::Proxemics(Piavca::Motion *)\n    Piavca::Proxemics()\n    Piavca::Proxemics(Piavca::Proxemics const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Proxemics(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Proxemics",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Proxemics" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Proxemics_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_clone" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->clone(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Proxemics_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_getClassName" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  {
    try {
      result = (arg1)->getClassName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Proxemics *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Proxemics_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::Proxemics *)Piavca::Proxemics::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Proxemics_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_load" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Proxemics_load" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    try {
      (arg1)->load(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_setDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Proxemics_setDistance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_setDistance" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Proxemics_setDistance" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setDistance(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_getDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Proxemics_getDistance",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_getDistance" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  {
    try {
      result = (float)(arg1)->getDistance(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_setThreshold(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Proxemics_setThreshold",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_setThreshold" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Proxemics_setThreshold" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setThreshold(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_getThreshold(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Proxemics_getThreshold",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_getThreshold" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  {
    try {
      result = (float)(arg1)->getThreshold(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_setAngleThreshold(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Proxemics_setAngleThreshold",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_setAngleThreshold" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Proxemics_setAngleThreshold" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setAngleThreshold(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_getAngleThreshold(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Proxemics_getAngleThreshold",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_getAngleThreshold" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  {
    try {
      result = (float)(arg1)->getAngleThreshold(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_turnOff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Proxemics_turnOff",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_turnOff" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Proxemics_turnOff" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->turnOff(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_setMotionFunction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  int arg2 ;
  Piavca::tstring arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Proxemics_setMotionFunction",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_setMotionFunction" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Proxemics_setMotionFunction" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    arg3 = PyString_AsString(obj2);
  }
  {
    try {
      (arg1)->setMotionFunction(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_setOtherPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Proxemics_setOtherPosition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_setOtherPosition" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Proxemics_setOtherPosition" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Proxemics_setOtherPosition" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      (arg1)->setOtherPosition((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_addAvatar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Proxemics_addAvatar",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_addAvatar" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Proxemics_addAvatar" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    try {
      (arg1)->addAvatar(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_removeAvatar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Proxemics_removeAvatar",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_removeAvatar" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->removeAvatar(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_removeAllAvatars(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Proxemics_removeAllAvatars",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_removeAllAvatars" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  {
    try {
      (arg1)->removeAllAvatars(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Proxemics_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Proxemics *arg1 = (Piavca::Proxemics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Proxemics_reset",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Proxemics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Proxemics_reset" "', argument " "1"" of type '" "Piavca::Proxemics *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Proxemics * >(argp1);
  {
    try {
      (arg1)->reset(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Proxemics_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__Proxemics, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::LookAtMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_LookAtMotion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  int arg3 ;
  float arg4 ;
  float arg5 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_LookAtMotion",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_LookAtMotion" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_LookAtMotion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_LookAtMotion" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1,arg2,arg3,arg4,arg5); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg2,arg3,arg4,arg5); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  int arg3 ;
  float arg4 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_LookAtMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_LookAtMotion" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_LookAtMotion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1,arg2,arg3,arg4); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg2,arg3,arg4); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  int arg3 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_LookAtMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_LookAtMotion" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1,arg2,arg3); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Object *arg2 = (Piavca::Object *) 0 ;
  float arg3 ;
  float arg4 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_LookAtMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Object *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Object * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_LookAtMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_LookAtMotion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1,arg2,arg3,arg4); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg2,arg3,arg4); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Object *arg2 = (Piavca::Object *) 0 ;
  float arg3 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_LookAtMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Object *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Object * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_LookAtMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1,arg2,arg3); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Object *arg2 = (Piavca::Object *) 0 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_LookAtMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Object *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Object * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1,arg2); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  float arg3 ;
  bool arg4 ;
  float arg5 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_LookAtMotion",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_LookAtMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_LookAtMotion" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_LookAtMotion" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1,(Piavca::Vec const &)*arg2,arg3,arg4,arg5); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion((Piavca::Vec const &)*arg2,arg3,arg4,arg5); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  float arg3 ;
  bool arg4 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_LookAtMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_LookAtMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_LookAtMotion" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1,(Piavca::Vec const &)*arg2,arg3,arg4); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion((Piavca::Vec const &)*arg2,arg3,arg4); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  float arg3 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_LookAtMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_LookAtMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1,(Piavca::Vec const &)*arg2,arg3); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion((Piavca::Vec const &)*arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_LookAtMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1,(Piavca::Vec const &)*arg2); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion((Piavca::Vec const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::LookAtMotion *arg2 = 0 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_LookAtMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__LookAtMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::LookAtMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LookAtMotion" "', argument " "2"" of type '" "Piavca::LookAtMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::LookAtMotion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::LookAtMotion *)new SwigDirector_LookAtMotion(arg1,(Piavca::LookAtMotion const &)*arg2); 
      } else {
        result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion((Piavca::LookAtMotion const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_LookAtMotion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Object, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_LookAtMotion__SWIG_6(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_LookAtMotion__SWIG_10(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__LookAtMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_LookAtMotion__SWIG_11(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_LookAtMotion__SWIG_9(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Object, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_LookAtMotion__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_LookAtMotion__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_LookAtMotion__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Object, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_LookAtMotion__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_LookAtMotion__SWIG_8(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_LookAtMotion__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_LookAtMotion__SWIG_7(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_LookAtMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::LookAtMotion(PyObject *)\n    Piavca::LookAtMotion(PyObject *,Piavca::Avatar *,int,float,float)\n    Piavca::LookAtMotion(PyObject *,Piavca::Avatar *,int,float)\n    Piavca::LookAtMotion(PyObject *,Piavca::Avatar *,int)\n    Piavca::LookAtMotion(PyObject *,Piavca::Object *,float,float)\n    Piavca::LookAtMotion(PyObject *,Piavca::Object *,float)\n    Piavca::LookAtMotion(PyObject *,Piavca::Object *)\n    Piavca::LookAtMotion(PyObject *,Piavca::Vec const &,float,bool,float)\n    Piavca::LookAtMotion(PyObject *,Piavca::Vec const &,float,bool)\n    Piavca::LookAtMotion(PyObject *,Piavca::Vec const &,float)\n    Piavca::LookAtMotion(PyObject *,Piavca::Vec const &)\n    Piavca::LookAtMotion(PyObject *,Piavca::LookAtMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_clone" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::LookAtMotion::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_getClassName" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::LookAtMotion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::LookAtMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::LookAtMotion *)Piavca::LookAtMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_isFacial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_isFacial",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_isFacial" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::LookAtMotion::isFacial();
        } else {
          result = (bool)(arg1)->isFacial();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_isRandomAccess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_isRandomAccess",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_isRandomAccess" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::LookAtMotion::isRandomAccess();
        } else {
          result = (bool)(arg1)->isRandomAccess();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_load" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LookAtMotion_load" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::LookAtMotion::load(arg2);
        } else {
          (arg1)->load(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_reblend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_reblend",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_reblend" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_reblend" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->reblend(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setTarget__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:LookAtMotion_setTarget",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setTarget" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LookAtMotion_setTarget" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LookAtMotion_setTarget" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      (arg1)->setTarget(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setTarget__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  Piavca::Object *arg2 = (Piavca::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setTarget",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setTarget" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LookAtMotion_setTarget" "', argument " "2"" of type '" "Piavca::Object *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Object * >(argp2);
  {
    try {
      (arg1)->setTarget(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setTarget__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  Piavca::Vec arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:LookAtMotion_setTarget",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setTarget" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LookAtMotion_setTarget" "', argument " "2"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LookAtMotion_setTarget" "', argument " "2"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LookAtMotion_setTarget" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      (arg1)->setTarget(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setTarget__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  Piavca::Vec arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setTarget",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setTarget" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LookAtMotion_setTarget" "', argument " "2"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LookAtMotion_setTarget" "', argument " "2"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (arg1)->setTarget(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setTarget(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Object, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_LookAtMotion_setTarget__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_LookAtMotion_setTarget__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__Vec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_LookAtMotion_setTarget__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_LookAtMotion_setTarget__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'LookAtMotion_setTarget'.\n  Possible C/C++ prototypes are:\n    setTarget(Piavca::Avatar *,int)\n    setTarget(Piavca::Object *)\n    setTarget(Piavca::Vec,bool)\n    setTarget(Piavca::Vec)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_getTargetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_getTargetName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_getTargetName" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    try {
      result = (arg1)->getTargetName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setHeadActive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setHeadActive",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setHeadActive" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_setHeadActive" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setHeadActive(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setHeadActive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_setHeadActive",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setHeadActive" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    try {
      (arg1)->setHeadActive(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setHeadActive(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_LookAtMotion_setHeadActive__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_LookAtMotion_setHeadActive__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'LookAtMotion_setHeadActive'.\n  Possible C/C++ prototypes are:\n    setHeadActive(bool)\n    setHeadActive()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setBodyActive__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setBodyActive",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setBodyActive" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_setBodyActive" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setBodyActive(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setBodyActive__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_setBodyActive",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setBodyActive" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    try {
      (arg1)->setBodyActive(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setBodyActive(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_LookAtMotion_setBodyActive__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_LookAtMotion_setBodyActive__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'LookAtMotion_setBodyActive'.\n  Possible C/C++ prototypes are:\n    setBodyActive(bool)\n    setBodyActive()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setTurnBodyVertical__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setTurnBodyVertical",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setTurnBodyVertical" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_setTurnBodyVertical" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setTurnBodyVertical(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setTurnBodyVertical__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_setTurnBodyVertical",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setTurnBodyVertical" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    try {
      (arg1)->setTurnBodyVertical(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setTurnBodyVertical(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_LookAtMotion_setTurnBodyVertical__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_LookAtMotion_setTurnBodyVertical__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'LookAtMotion_setTurnBodyVertical'.\n  Possible C/C++ prototypes are:\n    setTurnBodyVertical(bool)\n    setTurnBodyVertical()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setTurnBodyFull__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setTurnBodyFull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setTurnBodyFull" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_setTurnBodyFull" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setTurnBodyFull(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setTurnBodyFull__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_setTurnBodyFull",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setTurnBodyFull" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    try {
      (arg1)->setTurnBodyFull(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setTurnBodyFull(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_LookAtMotion_setTurnBodyFull__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_LookAtMotion_setTurnBodyFull__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'LookAtMotion_setTurnBodyFull'.\n  Possible C/C++ prototypes are:\n    setTurnBodyFull(bool)\n    setTurnBodyFull()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setLeanTowards__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setLeanTowards",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setLeanTowards" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_setLeanTowards" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (arg1)->setLeanTowards(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setLeanTowards__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_setLeanTowards",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setLeanTowards" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    try {
      (arg1)->setLeanTowards(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setLeanTowards(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_LookAtMotion_setLeanTowards__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_LookAtMotion_setLeanTowards__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'LookAtMotion_setLeanTowards'.\n  Possible C/C++ prototypes are:\n    setLeanTowards(bool)\n    setLeanTowards()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setEyesLimit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setEyesLimit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setEyesLimit" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_setEyesLimit" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setEyesLimit(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setHeadBodyLimit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setHeadBodyLimit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setHeadBodyLimit" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_setHeadBodyLimit" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setHeadBodyLimit(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setEyesMorphAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setEyesMorphAngle",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setEyesMorphAngle" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_setEyesMorphAngle" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setEyesMorphAngle(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_setEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setEndTime",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_setEndTime" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_setEndTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setEndTime(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_getMotionLength" "', argument " "1"" of type '" "Piavca::LookAtMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::LookAtMotion const *)arg1)->Piavca::LookAtMotion::getMotionLength();
        } else {
          result = (float)((Piavca::LookAtMotion const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_isNull" "', argument " "1"" of type '" "Piavca::LookAtMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)((Piavca::LookAtMotion const *)arg1)->Piavca::LookAtMotion::isNull(arg2);
        } else {
          result = (bool)((Piavca::LookAtMotion const *)arg1)->isNull(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_isNullFacial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_isNullFacial",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_isNullFacial" "', argument " "1"" of type '" "Piavca::LookAtMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_isNullFacial" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (bool)((Piavca::LookAtMotion const *)arg1)->isNullFacial(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_getTrackType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_getTrackType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_getTrackType" "', argument " "1"" of type '" "Piavca::LookAtMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_getTrackType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (int)((Piavca::LookAtMotion const *)arg1)->Piavca::LookAtMotion::getTrackType(arg2);
        } else {
          result = (int)((Piavca::LookAtMotion const *)arg1)->getTrackType(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_canLookAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  Piavca::Vec arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_canLookAt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_canLookAt" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LookAtMotion_canLookAt" "', argument " "2"" of type '" "Piavca::Vec""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LookAtMotion_canLookAt" "', argument " "2"" of type '" "Piavca::Vec""'");
    } else {
      Piavca::Vec * temp = reinterpret_cast< Piavca::Vec * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      result = (bool)(arg1)->canLookAt(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:LookAtMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LookAtMotion_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::LookAtMotion::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:LookAtMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LookAtMotion_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::LookAtMotion::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtMotion_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:LookAtMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtMotion_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtMotion_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LookAtMotion_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::LookAtMotion::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LookAtMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LookAtMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LookAtMotion" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_LookAtMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_LookAtMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_LookAtMotion" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LookAtMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__LookAtMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_LookAtToFacial__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
  Piavca::LookAtToFacial *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_LookAtToFacial",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_LookAtToFacial" "', argument " "1"" of type '" "Piavca::LookAtMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtMotion * >(argp1);
  {
    try {
      result = (Piavca::LookAtToFacial *)new Piavca::LookAtToFacial(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtToFacial__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtToFacial *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_LookAtToFacial")) SWIG_fail;
  {
    try {
      result = (Piavca::LookAtToFacial *)new Piavca::LookAtToFacial(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtToFacial__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtToFacial *arg1 = 0 ;
  Piavca::LookAtToFacial *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_LookAtToFacial",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__LookAtToFacial,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_LookAtToFacial" "', argument " "1"" of type '" "Piavca::LookAtToFacial const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LookAtToFacial" "', argument " "1"" of type '" "Piavca::LookAtToFacial const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtToFacial * >(argp1);
  {
    try {
      result = (Piavca::LookAtToFacial *)new Piavca::LookAtToFacial((Piavca::LookAtToFacial const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LookAtToFacial(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_LookAtToFacial__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__LookAtMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_LookAtToFacial__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__LookAtToFacial, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_LookAtToFacial__SWIG_2(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_LookAtToFacial'.\n  Possible C/C++ prototypes are:\n    Piavca::LookAtToFacial(Piavca::LookAtMotion *)\n    Piavca::LookAtToFacial()\n    Piavca::LookAtToFacial(Piavca::LookAtToFacial const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtToFacial_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtToFacial_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtToFacial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtToFacial_clone" "', argument " "1"" of type '" "Piavca::LookAtToFacial *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtToFacial * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->clone(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtToFacial_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtToFacial_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtToFacial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtToFacial_load" "', argument " "1"" of type '" "Piavca::LookAtToFacial *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtToFacial * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LookAtToFacial_load" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    try {
      (arg1)->load(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtToFacial_isFacial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAtToFacial_isFacial",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtToFacial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtToFacial_isFacial" "', argument " "1"" of type '" "Piavca::LookAtToFacial *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtToFacial * >(argp1);
  {
    try {
      result = (bool)(arg1)->isFacial(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtToFacial_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAtToFacial_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtToFacial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtToFacial_isNull" "', argument " "1"" of type '" "Piavca::LookAtToFacial const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtToFacial * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtToFacial_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (bool)((Piavca::LookAtToFacial const *)arg1)->isNull(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtToFacial_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:LookAtToFacial_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtToFacial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtToFacial_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::LookAtToFacial *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtToFacial * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtToFacial_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LookAtToFacial_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtToFacial_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:LookAtToFacial_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtToFacial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtToFacial_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::LookAtToFacial *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtToFacial * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtToFacial_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LookAtToFacial_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (arg1)->getVecValueAtTimeInternal(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAtToFacial_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:LookAtToFacial_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtToFacial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAtToFacial_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::LookAtToFacial *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtToFacial * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAtToFacial_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LookAtToFacial_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LookAtToFacial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LookAtToFacial",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LookAtToFacial" "', argument " "1"" of type '" "Piavca::LookAtToFacial *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::LookAtToFacial * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LookAtToFacial_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_flagStruct_headActive_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:flagStruct_headActive_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flagStruct_headActive_set" "', argument " "1"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "flagStruct_headActive_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->headActive = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_flagStruct_headActive_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:flagStruct_headActive_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flagStruct_headActive_get" "', argument " "1"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  result = (bool) ((arg1)->headActive);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_flagStruct_bodyActive_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:flagStruct_bodyActive_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flagStruct_bodyActive_set" "', argument " "1"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "flagStruct_bodyActive_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->bodyActive = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_flagStruct_bodyActive_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:flagStruct_bodyActive_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flagStruct_bodyActive_get" "', argument " "1"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  result = (bool) ((arg1)->bodyActive);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_flagStruct_turnBodyVertical_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:flagStruct_turnBodyVertical_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flagStruct_turnBodyVertical_set" "', argument " "1"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "flagStruct_turnBodyVertical_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->turnBodyVertical = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_flagStruct_turnBodyVertical_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:flagStruct_turnBodyVertical_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flagStruct_turnBodyVertical_get" "', argument " "1"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  result = (bool) ((arg1)->turnBodyVertical);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_flagStruct_turnBodyFull_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:flagStruct_turnBodyFull_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flagStruct_turnBodyFull_set" "', argument " "1"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "flagStruct_turnBodyFull_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->turnBodyFull = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_flagStruct_turnBodyFull_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:flagStruct_turnBodyFull_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flagStruct_turnBodyFull_get" "', argument " "1"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  result = (bool) ((arg1)->turnBodyFull);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_flagStruct_leanTowards_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:flagStruct_leanTowards_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flagStruct_leanTowards_set" "', argument " "1"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "flagStruct_leanTowards_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->leanTowards = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_flagStruct_leanTowards_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:flagStruct_leanTowards_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flagStruct_leanTowards_get" "', argument " "1"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  result = (bool) ((arg1)->leanTowards);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_flagStruct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_flagStruct")) SWIG_fail;
  {
    try {
      result = (Piavca::flagStruct *)new Piavca::flagStruct(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_flagStruct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = 0 ;
  Piavca::flagStruct *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_flagStruct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__flagStruct,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_flagStruct" "', argument " "1"" of type '" "Piavca::flagStruct const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_flagStruct" "', argument " "1"" of type '" "Piavca::flagStruct const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  {
    try {
      result = (Piavca::flagStruct *)new Piavca::flagStruct((Piavca::flagStruct const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_flagStruct(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_flagStruct__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__flagStruct, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_flagStruct__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_flagStruct'.\n  Possible C/C++ prototypes are:\n    Piavca::flagStruct()\n    Piavca::flagStruct(Piavca::flagStruct const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_flagStruct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_flagStruct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_flagStruct" "', argument " "1"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::flagStruct * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *flagStruct_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__flagStruct, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AvatarTargetStruct_avatar_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarTargetStruct_avatar_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTargetStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarTargetStruct_avatar_set" "', argument " "1"" of type '" "Piavca::AvatarTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTargetStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarTargetStruct_avatar_set" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  if (arg1) (arg1)->avatar = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarTargetStruct_avatar_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
  Piavca::Avatar *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarTargetStruct_avatar_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTargetStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarTargetStruct_avatar_get" "', argument " "1"" of type '" "Piavca::AvatarTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTargetStruct * >(argp1);
  result = (Piavca::Avatar *) ((arg1)->avatar);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarTargetStruct_joint_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarTargetStruct_joint_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTargetStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarTargetStruct_joint_set" "', argument " "1"" of type '" "Piavca::AvatarTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTargetStruct * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AvatarTargetStruct_joint_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->joint = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarTargetStruct_joint_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarTargetStruct_joint_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTargetStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarTargetStruct_joint_get" "', argument " "1"" of type '" "Piavca::AvatarTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTargetStruct * >(argp1);
  result = (int) ((arg1)->joint);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarTargetStruct_flags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
  Piavca::flagStruct *arg2 = (Piavca::flagStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AvatarTargetStruct_flags_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTargetStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarTargetStruct_flags_set" "', argument " "1"" of type '" "Piavca::AvatarTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTargetStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AvatarTargetStruct_flags_set" "', argument " "2"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::flagStruct * >(argp2);
  if (arg1) (arg1)->flags = *arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AvatarTargetStruct_flags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
  Piavca::flagStruct *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AvatarTargetStruct_flags_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTargetStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AvatarTargetStruct_flags_get" "', argument " "1"" of type '" "Piavca::AvatarTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTargetStruct * >(argp1);
  result = (Piavca::flagStruct *)& ((arg1)->flags);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarTargetStruct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
  int arg2 ;
  Piavca::flagStruct arg3 ;
  Piavca::AvatarTargetStruct *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_AvatarTargetStruct",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AvatarTargetStruct" "', argument " "1"" of type '" "Piavca::Avatar *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Avatar * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AvatarTargetStruct" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__flagStruct,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AvatarTargetStruct" "', argument " "3"" of type '" "Piavca::flagStruct""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AvatarTargetStruct" "', argument " "3"" of type '" "Piavca::flagStruct""'");
    } else {
      Piavca::flagStruct * temp = reinterpret_cast< Piavca::flagStruct * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      result = (Piavca::AvatarTargetStruct *)new Piavca::AvatarTargetStruct(arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarTargetStruct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTargetStruct *arg1 = 0 ;
  Piavca::AvatarTargetStruct *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_AvatarTargetStruct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__AvatarTargetStruct,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AvatarTargetStruct" "', argument " "1"" of type '" "Piavca::AvatarTargetStruct const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AvatarTargetStruct" "', argument " "1"" of type '" "Piavca::AvatarTargetStruct const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTargetStruct * >(argp1);
  {
    try {
      result = (Piavca::AvatarTargetStruct *)new Piavca::AvatarTargetStruct((Piavca::AvatarTargetStruct const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AvatarTargetStruct(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__AvatarTargetStruct, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_AvatarTargetStruct__SWIG_1(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__flagStruct, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_AvatarTargetStruct__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_AvatarTargetStruct'.\n  Possible C/C++ prototypes are:\n    Piavca::AvatarTargetStruct(Piavca::Avatar *,int,Piavca::flagStruct)\n    Piavca::AvatarTargetStruct(Piavca::AvatarTargetStruct const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AvatarTargetStruct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AvatarTargetStruct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AvatarTargetStruct" "', argument " "1"" of type '" "Piavca::AvatarTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::AvatarTargetStruct * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AvatarTargetStruct_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ObjectTargetStruct_object_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ObjectTargetStruct *arg1 = (Piavca::ObjectTargetStruct *) 0 ;
  Piavca::Object *arg2 = (Piavca::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ObjectTargetStruct_object_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ObjectTargetStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ObjectTargetStruct_object_set" "', argument " "1"" of type '" "Piavca::ObjectTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ObjectTargetStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Object, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ObjectTargetStruct_object_set" "', argument " "2"" of type '" "Piavca::Object *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Object * >(argp2);
  if (arg1) (arg1)->object = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ObjectTargetStruct_object_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ObjectTargetStruct *arg1 = (Piavca::ObjectTargetStruct *) 0 ;
  Piavca::Object *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ObjectTargetStruct_object_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ObjectTargetStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ObjectTargetStruct_object_get" "', argument " "1"" of type '" "Piavca::ObjectTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ObjectTargetStruct * >(argp1);
  result = (Piavca::Object *) ((arg1)->object);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Object, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ObjectTargetStruct_flags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ObjectTargetStruct *arg1 = (Piavca::ObjectTargetStruct *) 0 ;
  Piavca::flagStruct *arg2 = (Piavca::flagStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ObjectTargetStruct_flags_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ObjectTargetStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ObjectTargetStruct_flags_set" "', argument " "1"" of type '" "Piavca::ObjectTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ObjectTargetStruct * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ObjectTargetStruct_flags_set" "', argument " "2"" of type '" "Piavca::flagStruct *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::flagStruct * >(argp2);
  if (arg1) (arg1)->flags = *arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ObjectTargetStruct_flags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ObjectTargetStruct *arg1 = (Piavca::ObjectTargetStruct *) 0 ;
  Piavca::flagStruct *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ObjectTargetStruct_flags_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ObjectTargetStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ObjectTargetStruct_flags_get" "', argument " "1"" of type '" "Piavca::ObjectTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ObjectTargetStruct * >(argp1);
  result = (Piavca::flagStruct *)& ((arg1)->flags);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__flagStruct, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ObjectTargetStruct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Object *arg1 = (Piavca::Object *) 0 ;
  Piavca::flagStruct arg2 ;
  Piavca::ObjectTargetStruct *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ObjectTargetStruct",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ObjectTargetStruct" "', argument " "1"" of type '" "Piavca::Object *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Object * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__flagStruct,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ObjectTargetStruct" "', argument " "2"" of type '" "Piavca::flagStruct""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ObjectTargetStruct" "', argument " "2"" of type '" "Piavca::flagStruct""'");
    } else {
      Piavca::flagStruct * temp = reinterpret_cast< Piavca::flagStruct * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      result = (Piavca::ObjectTargetStruct *)new Piavca::ObjectTargetStruct(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ObjectTargetStruct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ObjectTargetStruct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ObjectTargetStruct *arg1 = 0 ;
  Piavca::ObjectTargetStruct *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ObjectTargetStruct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__ObjectTargetStruct,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ObjectTargetStruct" "', argument " "1"" of type '" "Piavca::ObjectTargetStruct const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ObjectTargetStruct" "', argument " "1"" of type '" "Piavca::ObjectTargetStruct const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ObjectTargetStruct * >(argp1);
  {
    try {
      result = (Piavca::ObjectTargetStruct *)new Piavca::ObjectTargetStruct((Piavca::ObjectTargetStruct const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ObjectTargetStruct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ObjectTargetStruct(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__ObjectTargetStruct, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ObjectTargetStruct__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Object, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__flagStruct, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ObjectTargetStruct__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_ObjectTargetStruct'.\n  Possible C/C++ prototypes are:\n    Piavca::ObjectTargetStruct(Piavca::Object *,Piavca::flagStruct)\n    Piavca::ObjectTargetStruct(Piavca::ObjectTargetStruct const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ObjectTargetStruct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ObjectTargetStruct *arg1 = (Piavca::ObjectTargetStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ObjectTargetStruct",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ObjectTargetStruct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ObjectTargetStruct" "', argument " "1"" of type '" "Piavca::ObjectTargetStruct *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ObjectTargetStruct * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ObjectTargetStruct_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__ObjectTargetStruct, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_RandomGazeMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  float arg2 ;
  float arg3 ;
  Piavca::RandomGazeMotion *result = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_RandomGazeMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RandomGazeMotion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RandomGazeMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::RandomGazeMotion *)new SwigDirector_RandomGazeMotion(arg1,arg2,arg3); 
      } else {
        result = (Piavca::RandomGazeMotion *)new Piavca::RandomGazeMotion(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomGazeMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  float arg2 ;
  Piavca::RandomGazeMotion *result = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_RandomGazeMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RandomGazeMotion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::RandomGazeMotion *)new SwigDirector_RandomGazeMotion(arg1,arg2); 
      } else {
        result = (Piavca::RandomGazeMotion *)new Piavca::RandomGazeMotion(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomGazeMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::RandomGazeMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_RandomGazeMotion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::RandomGazeMotion *)new SwigDirector_RandomGazeMotion(arg1); 
      } else {
        result = (Piavca::RandomGazeMotion *)new Piavca::RandomGazeMotion(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomGazeMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::RandomGazeMotion *arg2 = 0 ;
  Piavca::RandomGazeMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_RandomGazeMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__RandomGazeMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RandomGazeMotion" "', argument " "2"" of type '" "Piavca::RandomGazeMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RandomGazeMotion" "', argument " "2"" of type '" "Piavca::RandomGazeMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::RandomGazeMotion *)new SwigDirector_RandomGazeMotion(arg1,(Piavca::RandomGazeMotion const &)*arg2); 
      } else {
        result = (Piavca::RandomGazeMotion *)new Piavca::RandomGazeMotion((Piavca::RandomGazeMotion const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandomGazeMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_RandomGazeMotion__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__RandomGazeMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_RandomGazeMotion__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_RandomGazeMotion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_RandomGazeMotion__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_RandomGazeMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::RandomGazeMotion(PyObject *,float,float)\n    Piavca::RandomGazeMotion(PyObject *,float)\n    Piavca::RandomGazeMotion(PyObject *)\n    Piavca::RandomGazeMotion(PyObject *,Piavca::RandomGazeMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RandomGazeMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RandomGazeMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RandomGazeMotion" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomGazeMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_clone" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::RandomGazeMotion::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomGazeMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_getClassName" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::RandomGazeMotion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::RandomGazeMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomGazeMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::RandomGazeMotion *)Piavca::RandomGazeMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_clearDirectionTable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomGazeMotion_clearDirectionTable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_clearDirectionTable" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  {
    try {
      (arg1)->clearDirectionTable(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_addDirection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_addDirection",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_addDirection" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RandomGazeMotion_addDirection" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RandomGazeMotion_addDirection" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RandomGazeMotion_addDirection" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->addDirection((Piavca::Vec const &)*arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_normaliseDirectionTable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomGazeMotion_normaliseDirectionTable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_normaliseDirectionTable" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  {
    try {
      (arg1)->normaliseDirectionTable(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_addAvatarTarget__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  int arg3 ;
  Piavca::flagStruct arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:RandomGazeMotion_addAvatarTarget",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_addAvatarTarget" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RandomGazeMotion_addAvatarTarget" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RandomGazeMotion_addAvatarTarget" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_Piavca__flagStruct,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "RandomGazeMotion_addAvatarTarget" "', argument " "4"" of type '" "Piavca::flagStruct""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RandomGazeMotion_addAvatarTarget" "', argument " "4"" of type '" "Piavca::flagStruct""'");
    } else {
      Piavca::flagStruct * temp = reinterpret_cast< Piavca::flagStruct * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    try {
      (arg1)->addAvatarTarget(arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_addAvatarTarget__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_addAvatarTarget",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_addAvatarTarget" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RandomGazeMotion_addAvatarTarget" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RandomGazeMotion_addAvatarTarget" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      (arg1)->addAvatarTarget(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_addAvatarTarget(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RandomGazeMotion_addAvatarTarget__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_Piavca__flagStruct, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_RandomGazeMotion_addAvatarTarget__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RandomGazeMotion_addAvatarTarget'.\n  Possible C/C++ prototypes are:\n    addAvatarTarget(Piavca::Avatar *,int,Piavca::flagStruct)\n    addAvatarTarget(Piavca::Avatar *,int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_addObjectTarget__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  Piavca::Object *arg2 = (Piavca::Object *) 0 ;
  Piavca::flagStruct arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_addObjectTarget",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_addObjectTarget" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RandomGazeMotion_addObjectTarget" "', argument " "2"" of type '" "Piavca::Object *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Object * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__flagStruct,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "RandomGazeMotion_addObjectTarget" "', argument " "3"" of type '" "Piavca::flagStruct""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RandomGazeMotion_addObjectTarget" "', argument " "3"" of type '" "Piavca::flagStruct""'");
    } else {
      Piavca::flagStruct * temp = reinterpret_cast< Piavca::flagStruct * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      (arg1)->addObjectTarget(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_addObjectTarget__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  Piavca::Object *arg2 = (Piavca::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_addObjectTarget",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_addObjectTarget" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Object, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RandomGazeMotion_addObjectTarget" "', argument " "2"" of type '" "Piavca::Object *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Object * >(argp2);
  {
    try {
      (arg1)->addObjectTarget(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_addObjectTarget(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Object, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_RandomGazeMotion_addObjectTarget__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Object, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Piavca__flagStruct, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_RandomGazeMotion_addObjectTarget__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RandomGazeMotion_addObjectTarget'.\n  Possible C/C++ prototypes are:\n    addObjectTarget(Piavca::Object *,Piavca::flagStruct)\n    addObjectTarget(Piavca::Object *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_setTargetFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  Piavca::tstring arg2 ;
  Piavca::flagStruct arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_setTargetFlags",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_setTargetFlags" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Piavca__flagStruct,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "RandomGazeMotion_setTargetFlags" "', argument " "3"" of type '" "Piavca::flagStruct""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RandomGazeMotion_setTargetFlags" "', argument " "3"" of type '" "Piavca::flagStruct""'");
    } else {
      Piavca::flagStruct * temp = reinterpret_cast< Piavca::flagStruct * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    try {
      (arg1)->setTargetFlags(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_setGazeParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_setGazeParams",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_setGazeParams" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomGazeMotion_setGazeParams" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RandomGazeMotion_setGazeParams" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (arg1)->setGazeParams(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_setLookAtLocationProb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_setLookAtLocationProb",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_setLookAtLocationProb" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomGazeMotion_setLookAtLocationProb" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setLookAtLocationProb(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_setMeanGazeLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_setMeanGazeLength",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_setMeanGazeLength" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomGazeMotion_setMeanGazeLength" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setMeanGazeLength(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_setEyesLimit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_setEyesLimit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_setEyesLimit" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomGazeMotion_setEyesLimit" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setEyesLimit(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_setHeadBodyLimit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_setHeadBodyLimit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_setHeadBodyLimit" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomGazeMotion_setHeadBodyLimit" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setHeadBodyLimit(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_setEyesMorphAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_setEyesMorphAngle",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_setEyesMorphAngle" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomGazeMotion_setEyesMorphAngle" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setEyesMorphAngle(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_randomLocation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RandomGazeMotion_randomLocation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_randomLocation" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  {
    try {
      result = (arg1)->randomLocation(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_lookAt__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  Piavca::tstring arg2 ;
  bool arg3 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_lookAt",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_lookAt" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RandomGazeMotion_lookAt" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::RandomGazeMotion::lookAt(arg2,arg3);
        } else {
          result = (bool)(arg1)->lookAt(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_lookAt__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  Piavca::tstring arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_lookAt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_lookAt" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::RandomGazeMotion::lookAt(arg2);
        } else {
          result = (bool)(arg1)->lookAt(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_lookAt(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_RandomGazeMotion_lookAt__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_RandomGazeMotion_lookAt__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'RandomGazeMotion_lookAt'.\n  Possible C/C++ prototypes are:\n    lookAt(Piavca::tstring,bool)\n    lookAt(Piavca::tstring)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandomGazeMotion_reblend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_reblend",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandomGazeMotion_reblend" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandomGazeMotion_reblend" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::RandomGazeMotion::reblend(arg2);
        } else {
          (arg1)->reblend(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_RandomGazeMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_RandomGazeMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__RandomGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_RandomGazeMotion" "', argument " "1"" of type '" "Piavca::RandomGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::RandomGazeMotion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RandomGazeMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ZeroMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  bool arg2 ;
  Piavca::ZeroMotion *result = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ZeroMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ZeroMotion" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ZeroMotion *)new SwigDirector_ZeroMotion(arg1,arg2); 
      } else {
        result = (Piavca::ZeroMotion *)new Piavca::ZeroMotion(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ZeroMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ZeroMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ZeroMotion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ZeroMotion *)new SwigDirector_ZeroMotion(arg1); 
      } else {
        result = (Piavca::ZeroMotion *)new Piavca::ZeroMotion(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ZeroMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::ZeroMotion *arg2 = 0 ;
  Piavca::ZeroMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ZeroMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__ZeroMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ZeroMotion" "', argument " "2"" of type '" "Piavca::ZeroMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ZeroMotion" "', argument " "2"" of type '" "Piavca::ZeroMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::ZeroMotion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::ZeroMotion *)new SwigDirector_ZeroMotion(arg1,(Piavca::ZeroMotion const &)*arg2); 
      } else {
        result = (Piavca::ZeroMotion *)new Piavca::ZeroMotion((Piavca::ZeroMotion const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ZeroMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_ZeroMotion__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__ZeroMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ZeroMotion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_ZeroMotion__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_ZeroMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::ZeroMotion(PyObject *,bool)\n    Piavca::ZeroMotion(PyObject *)\n    Piavca::ZeroMotion(PyObject *,Piavca::ZeroMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZeroMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ZeroMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZeroMotion_clone" "', argument " "1"" of type '" "Piavca::ZeroMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::ZeroMotion::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZeroMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ZeroMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZeroMotion_getClassName" "', argument " "1"" of type '" "Piavca::ZeroMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ZeroMotion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZeroMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::ZeroMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ZeroMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZeroMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::ZeroMotion *)Piavca::ZeroMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZeroMotion_isFacial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ZeroMotion_isFacial",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZeroMotion_isFacial" "', argument " "1"" of type '" "Piavca::ZeroMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::ZeroMotion::isFacial();
        } else {
          result = (bool)(arg1)->isFacial();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZeroMotion_isRandomAccess(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ZeroMotion_isRandomAccess",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZeroMotion_isRandomAccess" "', argument " "1"" of type '" "Piavca::ZeroMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::ZeroMotion::isRandomAccess();
        } else {
          result = (bool)(arg1)->isRandomAccess();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZeroMotion_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ZeroMotion_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZeroMotion_getMotionLength" "', argument " "1"" of type '" "Piavca::ZeroMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::ZeroMotion const *)arg1)->Piavca::ZeroMotion::getMotionLength();
        } else {
          result = (float)((Piavca::ZeroMotion const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZeroMotion_isNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ZeroMotion_isNull",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZeroMotion_isNull" "', argument " "1"" of type '" "Piavca::ZeroMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ZeroMotion_isNull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)((Piavca::ZeroMotion const *)arg1)->Piavca::ZeroMotion::isNull(arg2);
        } else {
          result = (bool)((Piavca::ZeroMotion const *)arg1)->isNull(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZeroMotion_getTrackType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ZeroMotion_getTrackType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZeroMotion_getTrackType" "', argument " "1"" of type '" "Piavca::ZeroMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ZeroMotion_getTrackType" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (int)((Piavca::ZeroMotion const *)arg1)->Piavca::ZeroMotion::getTrackType(arg2);
        } else {
          result = (int)((Piavca::ZeroMotion const *)arg1)->getTrackType(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZeroMotion_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ZeroMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZeroMotion_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ZeroMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ZeroMotion_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ZeroMotion_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::ZeroMotion::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZeroMotion_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ZeroMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZeroMotion_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ZeroMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ZeroMotion_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ZeroMotion_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ZeroMotion::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ZeroMotion_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ZeroMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZeroMotion_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::ZeroMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ZeroMotion_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ZeroMotion_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::ZeroMotion::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ZeroMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ZeroMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ZeroMotion" "', argument " "1"" of type '" "Piavca::ZeroMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_ZeroMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_ZeroMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__ZeroMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_ZeroMotion" "', argument " "1"" of type '" "Piavca::ZeroMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::ZeroMotion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ZeroMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__ZeroMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MotionSaver__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::MotionSaver *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MotionSaver",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionSaver" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionSaver *)new SwigDirector_MotionSaver(arg1,arg2); 
      } else {
        result = (Piavca::MotionSaver *)new Piavca::MotionSaver(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionSaver__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionSaver *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MotionSaver",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionSaver *)new SwigDirector_MotionSaver(arg1); 
      } else {
        result = (Piavca::MotionSaver *)new Piavca::MotionSaver(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionSaver__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::MotionSaver *arg2 = 0 ;
  Piavca::MotionSaver *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MotionSaver",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__MotionSaver,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MotionSaver" "', argument " "2"" of type '" "Piavca::MotionSaver const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MotionSaver" "', argument " "2"" of type '" "Piavca::MotionSaver const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MotionSaver * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::MotionSaver *)new SwigDirector_MotionSaver(arg1,(Piavca::MotionSaver const &)*arg2); 
      } else {
        result = (Piavca::MotionSaver *)new Piavca::MotionSaver((Piavca::MotionSaver const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MotionSaver(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_MotionSaver__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__MotionSaver, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MotionSaver__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MotionSaver__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_MotionSaver'.\n  Possible C/C++ prototypes are:\n    Piavca::MotionSaver(PyObject *,Piavca::Motion *)\n    Piavca::MotionSaver(PyObject *)\n    Piavca::MotionSaver(PyObject *,Piavca::MotionSaver const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionSaver_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionSaver_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionSaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionSaver_clone" "', argument " "1"" of type '" "Piavca::MotionSaver *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionSaver * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::MotionSaver::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionSaver_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionSaver_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionSaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionSaver_getClassName" "', argument " "1"" of type '" "Piavca::MotionSaver *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionSaver * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MotionSaver::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionSaver_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::MotionSaver *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionSaver_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionSaver_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::MotionSaver *)Piavca::MotionSaver::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionSaver, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionSaver_setMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionSaver_setMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionSaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionSaver_setMotion" "', argument " "1"" of type '" "Piavca::MotionSaver *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionSaver * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MotionSaver_setMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->setMotion(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionSaver_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionSaver_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionSaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionSaver_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionSaver *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionSaver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionSaver_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionSaver_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::MotionSaver::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionSaver_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionSaver_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionSaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionSaver_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionSaver *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionSaver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionSaver_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionSaver_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MotionSaver::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionSaver_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionSaver_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionSaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionSaver_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::MotionSaver *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionSaver * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionSaver_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionSaver_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::MotionSaver::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionSaver_collectFrames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionSaver_collectFrames",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionSaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionSaver_collectFrames" "', argument " "1"" of type '" "Piavca::MotionSaver *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionSaver * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionSaver_collectFrames" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->collectFrames(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionSaver_save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionSaver_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionSaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionSaver_save" "', argument " "1"" of type '" "Piavca::MotionSaver *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionSaver * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->save(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MotionSaver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MotionSaver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MotionSaver" "', argument " "1"" of type '" "Piavca::MotionSaver *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionSaver * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_MotionSaver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_MotionSaver",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionSaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_MotionSaver" "', argument " "1"" of type '" "Piavca::MotionSaver *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionSaver * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MotionSaver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__MotionSaver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MotionParser_parseMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionParser *arg1 = (Piavca::MotionParser *) 0 ;
  istringstream *arg2 = 0 ;
  std::string arg3 ;
  float arg4 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:MotionParser_parseMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionParser_parseMotion" "', argument " "1"" of type '" "Piavca::MotionParser *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionParser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__istringstream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MotionParser_parseMotion" "', argument " "2"" of type '" "istringstream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MotionParser_parseMotion" "', argument " "2"" of type '" "istringstream &""'"); 
  }
  arg2 = reinterpret_cast< istringstream * >(argp2);
  {
    arg3 = PyString_AsString(obj2);
  }
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MotionParser_parseMotion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      result = (Piavca::Motion *)(arg1)->parseMotion(*arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionParser_editMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionParser *arg1 = (Piavca::MotionParser *) 0 ;
  istringstream *arg2 = 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionParser_editMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionParser_editMotion" "', argument " "1"" of type '" "Piavca::MotionParser *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionParser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__istringstream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MotionParser_editMotion" "', argument " "2"" of type '" "istringstream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MotionParser_editMotion" "', argument " "2"" of type '" "istringstream &""'"); 
  }
  arg2 = reinterpret_cast< istringstream * >(argp2);
  {
    try {
      result = (Piavca::Motion *)(arg1)->editMotion(*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionParser_editAvatarMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionParser *arg1 = (Piavca::MotionParser *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  bool arg3 ;
  istringstream *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:MotionParser_editAvatarMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionParser, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionParser_editAvatarMotion" "', argument " "1"" of type '" "Piavca::MotionParser *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionParser * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MotionParser_editAvatarMotion" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionParser_editAvatarMotion" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_std__istringstream,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MotionParser_editAvatarMotion" "', argument " "4"" of type '" "istringstream &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MotionParser_editAvatarMotion" "', argument " "4"" of type '" "istringstream &""'"); 
  }
  arg4 = reinterpret_cast< istringstream * >(argp4);
  {
    try {
      (arg1)->editAvatarMotion(arg2,arg3,*arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionParser_parseMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  float arg2 ;
  Piavca::Motion *result = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionParser_parseMotion",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionParser_parseMotion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      result = (Piavca::Motion *)Piavca::MotionParser::parseMotion(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionParser_parseMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  Piavca::Motion *result = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionParser_parseMotion",&obj0)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  {
    try {
      result = (Piavca::Motion *)Piavca::MotionParser::parseMotion(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionParser_parseMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  istringstream *arg1 = 0 ;
  float arg2 ;
  Piavca::MotionParser **arg3 = (Piavca::MotionParser **) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MotionParser_parseMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istringstream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionParser_parseMotion" "', argument " "1"" of type '" "istringstream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MotionParser_parseMotion" "', argument " "1"" of type '" "istringstream &""'"); 
  }
  arg1 = reinterpret_cast< istringstream * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MotionParser_parseMotion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_p_Piavca__MotionParser, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MotionParser_parseMotion" "', argument " "3"" of type '" "Piavca::MotionParser **""'"); 
  }
  arg3 = reinterpret_cast< Piavca::MotionParser ** >(argp3);
  {
    try {
      result = (Piavca::Motion *)Piavca::MotionParser::parseMotion(*arg1,arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionParser_parseMotion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  istringstream *arg1 = 0 ;
  std::string arg2 ;
  float arg3 ;
  Piavca::MotionParser **arg4 = (Piavca::MotionParser **) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:MotionParser_parseMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istringstream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MotionParser_parseMotion" "', argument " "1"" of type '" "istringstream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MotionParser_parseMotion" "', argument " "1"" of type '" "istringstream &""'"); 
  }
  arg1 = reinterpret_cast< istringstream * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MotionParser_parseMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_p_Piavca__MotionParser, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MotionParser_parseMotion" "', argument " "4"" of type '" "Piavca::MotionParser **""'"); 
  }
  arg4 = reinterpret_cast< Piavca::MotionParser ** >(argp4);
  {
    try {
      result = (Piavca::Motion *)Piavca::MotionParser::parseMotion(*arg1,arg2,arg3,arg4); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionParser_parseMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_MotionParser_parseMotion__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsCharPtrAndSize(argv[0], 0, NULL, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MotionParser_parseMotion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istringstream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_Piavca__MotionParser, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_MotionParser_parseMotion__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__MotionParser, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__istringstream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsCharPtrAndSize(argv[2], 0, NULL, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_MotionParser_parseMotion__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istringstream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_p_Piavca__MotionParser, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_MotionParser_parseMotion__SWIG_4(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'MotionParser_parseMotion'.\n  Possible C/C++ prototypes are:\n    parseMotion(istringstream &,std::string,float)\n    parseMotion(std::string,float)\n    parseMotion(std::string)\n    parseMotion(istringstream &,float,Piavca::MotionParser **)\n    Piavca::MotionParser::parseMotion(istringstream &,std::string,float,Piavca::MotionParser **)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionParser_addMotionCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::MotionParser *arg2 = (Piavca::MotionParser *) 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MotionParser_addMotionCommand",&obj0,&obj1)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__MotionParser, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MotionParser_addMotionCommand" "', argument " "2"" of type '" "Piavca::MotionParser *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::MotionParser * >(argp2);
  {
    try {
      Piavca::MotionParser::addMotionCommand(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionParser_getMotionCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::tstring arg1 ;
  Piavca::MotionParser *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MotionParser_getMotionCommand",&obj0)) SWIG_fail;
  {
    arg1 = PyString_AsString(obj0);
  }
  {
    try {
      result = (Piavca::MotionParser *)Piavca::MotionParser::getMotionCommand(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__MotionParser, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MotionParser_setUpMotionCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!PyArg_ParseTuple(args,(char *)":MotionParser_setUpMotionCommands")) SWIG_fail;
  {
    try {
      Piavca::MotionParser::setUpMotionCommands(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MotionParser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::MotionParser *arg1 = (Piavca::MotionParser *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MotionParser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__MotionParser, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MotionParser" "', argument " "1"" of type '" "Piavca::MotionParser *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::MotionParser * >(argp1);
  {
    try {
      delete arg1;
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MotionParser_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__MotionParser, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SubMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::SubMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SubMotion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::SubMotion *)new SwigDirector_SubMotion(arg1); 
      } else {
        result = (Piavca::SubMotion *)new Piavca::SubMotion(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SubMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  float arg3 ;
  float arg4 ;
  Piavca::SubMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_SubMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SubMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SubMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_SubMotion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::SubMotion *)new SwigDirector_SubMotion(arg1,arg2,arg3,arg4); 
      } else {
        result = (Piavca::SubMotion *)new Piavca::SubMotion(arg2,arg3,arg4); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SubMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::SubMotion *arg2 = 0 ;
  Piavca::SubMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SubMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__SubMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SubMotion" "', argument " "2"" of type '" "Piavca::SubMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SubMotion" "', argument " "2"" of type '" "Piavca::SubMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::SubMotion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::SubMotion *)new SwigDirector_SubMotion(arg1,(Piavca::SubMotion const &)*arg2); 
      } else {
        result = (Piavca::SubMotion *)new Piavca::SubMotion((Piavca::SubMotion const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SubMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_SubMotion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__SubMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SubMotion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_SubMotion__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SubMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::SubMotion(PyObject *)\n    Piavca::SubMotion(PyObject *,Piavca::Motion *,float,float)\n    Piavca::SubMotion(PyObject *,Piavca::SubMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubMotion_clone" "', argument " "1"" of type '" "Piavca::SubMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::SubMotion::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubMotion_getClassName" "', argument " "1"" of type '" "Piavca::SubMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::SubMotion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::SubMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::SubMotion *)Piavca::SubMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubMotion_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubMotion_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubMotion_getMotionLength" "', argument " "1"" of type '" "Piavca::SubMotion const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::SubMotion const *)arg1)->Piavca::SubMotion::getMotionLength();
        } else {
          result = (float)((Piavca::SubMotion const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubMotion_setStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SubMotion_setStart",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubMotion_setStart" "', argument " "1"" of type '" "Piavca::SubMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubMotion_setStart" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setStart(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubMotion_setEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SubMotion_setEnd",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubMotion_setEnd" "', argument " "1"" of type '" "Piavca::SubMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubMotion_setEnd" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setEnd(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubMotion_getStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubMotion_getStart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubMotion_getStart" "', argument " "1"" of type '" "Piavca::SubMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  {
    try {
      result = (float)(arg1)->getStart(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubMotion_getEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubMotion_getEnd",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubMotion_getEnd" "', argument " "1"" of type '" "Piavca::SubMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  {
    try {
      result = (float)(arg1)->getEnd(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubMotion_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SubMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubMotion_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::SubMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubMotion_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SubMotion_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::SubMotion::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubMotion_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SubMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubMotion_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::SubMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubMotion_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SubMotion_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::SubMotion::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubMotion_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SubMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubMotion_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::SubMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubMotion_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SubMotion_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::SubMotion::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SubMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SubMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SubMotion" "', argument " "1"" of type '" "Piavca::SubMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_SubMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_SubMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__SubMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_SubMotion" "', argument " "1"" of type '" "Piavca::SubMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::SubMotion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SubMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__SubMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_TimeWarp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
  Piavca::TimeWarp *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_TimeWarp",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TimeWarp" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_TimeWarp" "', argument " "3"" of type '" "Piavca::Motion *""'"); 
  }
  arg3 = reinterpret_cast< Piavca::Motion * >(argp3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TimeWarp *)new SwigDirector_TimeWarp(arg1,arg2,arg3); 
      } else {
        result = (Piavca::TimeWarp *)new Piavca::TimeWarp(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TimeWarp, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimeWarp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::TimeWarp *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_TimeWarp",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TimeWarp" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TimeWarp *)new SwigDirector_TimeWarp(arg1,arg2); 
      } else {
        result = (Piavca::TimeWarp *)new Piavca::TimeWarp(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TimeWarp, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimeWarp__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::TimeWarp *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_TimeWarp",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TimeWarp *)new SwigDirector_TimeWarp(arg1); 
      } else {
        result = (Piavca::TimeWarp *)new Piavca::TimeWarp(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TimeWarp, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimeWarp__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::TimeWarp *arg2 = 0 ;
  Piavca::TimeWarp *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_TimeWarp",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__TimeWarp,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_TimeWarp" "', argument " "2"" of type '" "Piavca::TimeWarp const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TimeWarp" "', argument " "2"" of type '" "Piavca::TimeWarp const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::TimeWarp * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::TimeWarp *)new SwigDirector_TimeWarp(arg1,(Piavca::TimeWarp const &)*arg2); 
      } else {
        result = (Piavca::TimeWarp *)new Piavca::TimeWarp((Piavca::TimeWarp const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TimeWarp, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimeWarp(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_TimeWarp__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__TimeWarp, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_TimeWarp__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_TimeWarp__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_TimeWarp__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_TimeWarp'.\n  Possible C/C++ prototypes are:\n    Piavca::TimeWarp(PyObject *,Piavca::Motion *,Piavca::Motion *)\n    Piavca::TimeWarp(PyObject *,Piavca::Motion *)\n    Piavca::TimeWarp(PyObject *)\n    Piavca::TimeWarp(PyObject *,Piavca::TimeWarp const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeWarp_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeWarp *arg1 = (Piavca::TimeWarp *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeWarp_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeWarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeWarp_clone" "', argument " "1"" of type '" "Piavca::TimeWarp *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeWarp * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::TimeWarp::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeWarp_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeWarp *arg1 = (Piavca::TimeWarp *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeWarp_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeWarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeWarp_getClassName" "', argument " "1"" of type '" "Piavca::TimeWarp *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeWarp * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::TimeWarp::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeWarp_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::TimeWarp *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeWarp_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeWarp_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::TimeWarp *)Piavca::TimeWarp::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__TimeWarp, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeWarp_getMotionLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeWarp *arg1 = (Piavca::TimeWarp *) 0 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeWarp_getMotionLength",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeWarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeWarp_getMotionLength" "', argument " "1"" of type '" "Piavca::TimeWarp const *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeWarp * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)((Piavca::TimeWarp const *)arg1)->Piavca::TimeWarp::getMotionLength();
        } else {
          result = (float)((Piavca::TimeWarp const *)arg1)->getMotionLength();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeWarp_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeWarp *arg1 = (Piavca::TimeWarp *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TimeWarp_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeWarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeWarp_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::TimeWarp *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeWarp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TimeWarp_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TimeWarp_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (float)(arg1)->Piavca::TimeWarp::getFloatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeWarp_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeWarp *arg1 = (Piavca::TimeWarp *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TimeWarp_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeWarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeWarp_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::TimeWarp *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeWarp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TimeWarp_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TimeWarp_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::TimeWarp::getVecValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeWarp_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeWarp *arg1 = (Piavca::TimeWarp *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:TimeWarp_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeWarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeWarp_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::TimeWarp *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeWarp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TimeWarp_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TimeWarp_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::TimeWarp::getQuatValueAtTimeInternal(arg2,arg3);
        } else {
          result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeWarp_setWarp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeWarp *arg1 = (Piavca::TimeWarp *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TimeWarp_setWarp",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeWarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeWarp_setWarp" "', argument " "1"" of type '" "Piavca::TimeWarp *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeWarp * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TimeWarp_setWarp" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      (arg1)->setWarp(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TimeWarp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeWarp *arg1 = (Piavca::TimeWarp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TimeWarp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeWarp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TimeWarp" "', argument " "1"" of type '" "Piavca::TimeWarp *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeWarp * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_TimeWarp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::TimeWarp *arg1 = (Piavca::TimeWarp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_TimeWarp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__TimeWarp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_TimeWarp" "', argument " "1"" of type '" "Piavca::TimeWarp *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::TimeWarp * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TimeWarp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__TimeWarp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DiadicGazeMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  float arg3 ;
  float arg4 ;
  Piavca::DiadicGazeMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_DiadicGazeMotion",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DiadicGazeMotion" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DiadicGazeMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DiadicGazeMotion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::DiadicGazeMotion *)new SwigDirector_DiadicGazeMotion(arg1,arg2,arg3,arg4); 
      } else {
        result = (Piavca::DiadicGazeMotion *)new Piavca::DiadicGazeMotion(arg2,arg3,arg4); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__DiadicGazeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DiadicGazeMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  float arg3 ;
  Piavca::DiadicGazeMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_DiadicGazeMotion",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DiadicGazeMotion" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DiadicGazeMotion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::DiadicGazeMotion *)new SwigDirector_DiadicGazeMotion(arg1,arg2,arg3); 
      } else {
        result = (Piavca::DiadicGazeMotion *)new Piavca::DiadicGazeMotion(arg2,arg3); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__DiadicGazeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DiadicGazeMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  Piavca::DiadicGazeMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_DiadicGazeMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DiadicGazeMotion" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::DiadicGazeMotion *)new SwigDirector_DiadicGazeMotion(arg1,arg2); 
      } else {
        result = (Piavca::DiadicGazeMotion *)new Piavca::DiadicGazeMotion(arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__DiadicGazeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DiadicGazeMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::DiadicGazeMotion *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_DiadicGazeMotion",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::DiadicGazeMotion *)new SwigDirector_DiadicGazeMotion(arg1); 
      } else {
        result = (Piavca::DiadicGazeMotion *)new Piavca::DiadicGazeMotion(); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__DiadicGazeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DiadicGazeMotion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  Piavca::DiadicGazeMotion *arg2 = 0 ;
  Piavca::DiadicGazeMotion *result = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_DiadicGazeMotion",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__DiadicGazeMotion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DiadicGazeMotion" "', argument " "2"" of type '" "Piavca::DiadicGazeMotion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DiadicGazeMotion" "', argument " "2"" of type '" "Piavca::DiadicGazeMotion const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp2);
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (Piavca::DiadicGazeMotion *)new SwigDirector_DiadicGazeMotion(arg1,(Piavca::DiadicGazeMotion const &)*arg2); 
      } else {
        result = (Piavca::DiadicGazeMotion *)new Piavca::DiadicGazeMotion((Piavca::DiadicGazeMotion const &)*arg2); 
      }
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__DiadicGazeMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DiadicGazeMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_new_DiadicGazeMotion__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_DiadicGazeMotion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Piavca__DiadicGazeMotion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_DiadicGazeMotion__SWIG_4(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_DiadicGazeMotion__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Avatar, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_DiadicGazeMotion__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_DiadicGazeMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::DiadicGazeMotion(PyObject *,Piavca::Avatar *,float,float)\n    Piavca::DiadicGazeMotion(PyObject *,Piavca::Avatar *,float)\n    Piavca::DiadicGazeMotion(PyObject *,Piavca::Avatar *)\n    Piavca::DiadicGazeMotion(PyObject *)\n    Piavca::DiadicGazeMotion(PyObject *,Piavca::DiadicGazeMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DiadicGazeMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DiadicGazeMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DiadicGazeMotion" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DiadicGazeMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_clone" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (Piavca::Motion *)(arg1)->Piavca::DiadicGazeMotion::clone();
        } else {
          result = (Piavca::Motion *)(arg1)->clone();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  if (director) {
    SWIG_AcquirePtr(resultobj, director->swig_release_ownership(SWIG_as_voidptr(result)));
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DiadicGazeMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_getClassName" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::DiadicGazeMotion::getClassName();
        } else {
          result = (arg1)->getClassName();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::DiadicGazeMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DiadicGazeMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::DiadicGazeMotion *)Piavca::DiadicGazeMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_setTalking(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  Piavca::DiadicGazeMotion::talkingstate arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_setTalking",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_setTalking" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DiadicGazeMotion_setTalking" "', argument " "2"" of type '" "Piavca::DiadicGazeMotion::talkingstate""'");
  } 
  arg2 = static_cast< Piavca::DiadicGazeMotion::talkingstate >(val2);
  {
    try {
      (arg1)->setTalking(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_setTalkingLookAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_setTalkingLookAt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_setTalkingLookAt" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DiadicGazeMotion_setTalkingLookAt" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setTalkingLookAt(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_setTalkingLookAway(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_setTalkingLookAway",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_setTalkingLookAway" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DiadicGazeMotion_setTalkingLookAway" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setTalkingLookAway(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_setListeningLookAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_setListeningLookAt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_setListeningLookAt" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DiadicGazeMotion_setListeningLookAt" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setListeningLookAt(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_setListeningLookAway(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_setListeningLookAway",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_setListeningLookAway" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DiadicGazeMotion_setListeningLookAway" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setListeningLookAway(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_setNeitherLookAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_setNeitherLookAt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_setNeitherLookAt" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DiadicGazeMotion_setNeitherLookAt" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setNeitherLookAt(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_setNeitherLookAway(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_setNeitherLookAway",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_setNeitherLookAway" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DiadicGazeMotion_setNeitherLookAway" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setNeitherLookAway(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_setGazeFollow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_setGazeFollow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_setGazeFollow" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DiadicGazeMotion_setGazeFollow" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (arg1)->setGazeFollow(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_event(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_event",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_event" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::DiadicGazeMotion::event(arg2);
        } else {
          (arg1)->event(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_getEventNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  std::vector<Piavca::tstring,std::allocator<Piavca::tstring > > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DiadicGazeMotion_getEventNames",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_getEventNames" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (arg1)->Piavca::DiadicGazeMotion::getEventNames();
        } else {
          result = (arg1)->getEventNames();
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  {
    int len = (&result)->size();
    resultobj = PyList_New(0);
    for (int i = 0; i < len; i++)
    {
      PyList_Append(resultobj,  
        PyString_FromString(((*(&(result)))[i]).c_str()));
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_setOther(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_setOther",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_setOther" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiadicGazeMotion_setOther" "', argument " "2"" of type '" "Piavca::Avatar *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Avatar * >(argp2);
  {
    try {
      (arg1)->setOther(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_getOther(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  Piavca::Avatar *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DiadicGazeMotion_getOther",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_getOther" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  {
    try {
      result = (Piavca::Avatar *)(arg1)->getOther(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Avatar, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_setOtherPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  Piavca::Vec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_setOtherPosition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_setOtherPosition" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Piavca__Vec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiadicGazeMotion_setOtherPosition" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiadicGazeMotion_setOtherPosition" "', argument " "2"" of type '" "Piavca::Vec const &""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Vec * >(argp2);
  {
    try {
      (arg1)->setOtherPosition((Piavca::Vec const &)*arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_addGazeFollowTarget(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_addGazeFollowTarget",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_addGazeFollowTarget" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->addGazeFollowTarget(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_notifyChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  Piavca::tstring arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_notifyChange",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_notifyChange" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  {
    try {
      (arg1)->notifyChange(arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_lookAt__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  Piavca::tstring arg2 ;
  bool arg3 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:DiadicGazeMotion_lookAt",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_lookAt" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DiadicGazeMotion_lookAt" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::DiadicGazeMotion::lookAt(arg2,arg3);
        } else {
          result = (bool)(arg1)->lookAt(arg2,arg3);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_lookAt__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  Piavca::tstring arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_lookAt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_lookAt" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  {
    arg2 = PyString_AsString(obj1);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (bool)(arg1)->Piavca::DiadicGazeMotion::lookAt(arg2);
        } else {
          result = (bool)(arg1)->lookAt(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_lookAt(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__DiadicGazeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DiadicGazeMotion_lookAt__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__DiadicGazeMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_DiadicGazeMotion_lookAt__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'DiadicGazeMotion_lookAt'.\n  Possible C/C++ prototypes are:\n    lookAt(Piavca::tstring,bool)\n    lookAt(Piavca::tstring)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiadicGazeMotion_reblend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:DiadicGazeMotion_reblend",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiadicGazeMotion_reblend" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DiadicGazeMotion_reblend" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->Piavca::DiadicGazeMotion::reblend(arg2);
        } else {
          (arg1)->reblend(arg2);
        } 
      }
      catch (Swig::DirectorException &e) {
        SWIG_fail; 
      }
      catch (Piavca::Exception &e) 
      {
        std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
        SWIG_fail; 
      }
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_DiadicGazeMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::DiadicGazeMotion *arg1 = (Piavca::DiadicGazeMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_DiadicGazeMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__DiadicGazeMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_DiadicGazeMotion" "', argument " "1"" of type '" "Piavca::DiadicGazeMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::DiadicGazeMotion * >(argp1);
  {
    Swig::Director *director = dynamic_cast<Swig::Director *>(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DiadicGazeMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__DiadicGazeMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_OverrideMotion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
  Piavca::OverrideMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_OverrideMotion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OverrideMotion" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OverrideMotion" "', argument " "2"" of type '" "Piavca::Motion *""'"); 
  }
  arg2 = reinterpret_cast< Piavca::Motion * >(argp2);
  {
    try {
      result = (Piavca::OverrideMotion *)new Piavca::OverrideMotion(arg1,arg2); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__OverrideMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OverrideMotion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::OverrideMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_OverrideMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OverrideMotion" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::OverrideMotion *)new Piavca::OverrideMotion(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__OverrideMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OverrideMotion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::OverrideMotion *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OverrideMotion")) SWIG_fail;
  {
    try {
      result = (Piavca::OverrideMotion *)new Piavca::OverrideMotion(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__OverrideMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OverrideMotion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::OverrideMotion *arg1 = 0 ;
  Piavca::OverrideMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_OverrideMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_Piavca__OverrideMotion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OverrideMotion" "', argument " "1"" of type '" "Piavca::OverrideMotion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OverrideMotion" "', argument " "1"" of type '" "Piavca::OverrideMotion const &""'"); 
  }
  arg1 = reinterpret_cast< Piavca::OverrideMotion * >(argp1);
  {
    try {
      result = (Piavca::OverrideMotion *)new Piavca::OverrideMotion((Piavca::OverrideMotion const &)*arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__OverrideMotion, SWIG_POINTER_NEW |  0 );
  result->Reference();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OverrideMotion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_OverrideMotion__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_Piavca__OverrideMotion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_OverrideMotion__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_OverrideMotion__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_Piavca__Motion, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_OverrideMotion__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_OverrideMotion'.\n  Possible C/C++ prototypes are:\n    Piavca::OverrideMotion(Piavca::Motion *,Piavca::Motion *)\n    Piavca::OverrideMotion(Piavca::Motion *)\n    Piavca::OverrideMotion()\n    Piavca::OverrideMotion(Piavca::OverrideMotion const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_OverrideMotion_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::OverrideMotion *arg1 = (Piavca::OverrideMotion *) 0 ;
  Piavca::Motion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OverrideMotion_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__OverrideMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OverrideMotion_clone" "', argument " "1"" of type '" "Piavca::OverrideMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::OverrideMotion * >(argp1);
  {
    try {
      result = (Piavca::Motion *)(arg1)->clone(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OverrideMotion_getClassName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::OverrideMotion *arg1 = (Piavca::OverrideMotion *) 0 ;
  Piavca::tstring result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OverrideMotion_getClassName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__OverrideMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OverrideMotion_getClassName" "', argument " "1"" of type '" "Piavca::OverrideMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::OverrideMotion * >(argp1);
  {
    try {
      result = (arg1)->getClassName(); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  {
    resultobj = PyString_FromString((&result)->c_str());
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OverrideMotion_castToThisType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
  Piavca::OverrideMotion *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OverrideMotion_castToThisType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__Motion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OverrideMotion_castToThisType" "', argument " "1"" of type '" "Piavca::Motion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::Motion * >(argp1);
  {
    try {
      result = (Piavca::OverrideMotion *)Piavca::OverrideMotion::castToThisType(arg1); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Piavca__OverrideMotion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OverrideMotion_getFloatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::OverrideMotion *arg1 = (Piavca::OverrideMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  float result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:OverrideMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__OverrideMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OverrideMotion_getFloatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::OverrideMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::OverrideMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OverrideMotion_getFloatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OverrideMotion_getFloatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OverrideMotion_getVecValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::OverrideMotion *arg1 = (Piavca::OverrideMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Vec result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:OverrideMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__OverrideMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OverrideMotion_getVecValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::OverrideMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::OverrideMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OverrideMotion_getVecValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OverrideMotion_getVecValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (arg1)->getVecValueAtTimeInternal(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Vec(static_cast< const Piavca::Vec& >(result))), SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OverrideMotion_getQuatValueAtTimeInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::OverrideMotion *arg1 = (Piavca::OverrideMotion *) 0 ;
  int arg2 ;
  float arg3 ;
  Piavca::Quat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:OverrideMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__OverrideMotion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OverrideMotion_getQuatValueAtTimeInternal" "', argument " "1"" of type '" "Piavca::OverrideMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::OverrideMotion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OverrideMotion_getQuatValueAtTimeInternal" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OverrideMotion_getQuatValueAtTimeInternal" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3); 
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_NewPointerObj((new Piavca::Quat(static_cast< const Piavca::Quat& >(result))), SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OverrideMotion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Piavca::OverrideMotion *arg1 = (Piavca::OverrideMotion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OverrideMotion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Piavca__OverrideMotion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OverrideMotion" "', argument " "1"" of type '" "Piavca::OverrideMotion *""'"); 
  }
  arg1 = reinterpret_cast< Piavca::OverrideMotion * >(argp1);
  {
    try {
      arg1->Dispose();
    }
    catch (Swig::DirectorException &e) {
      SWIG_fail; 
    }
    catch (Piavca::Exception &e) 
    {
      std::cout << "Piavca Exception: " << e.getDetails() << std::endl; 
      SWIG_fail; 
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OverrideMotion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Piavca__OverrideMotion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"delete_PySwigIterator", _wrap_delete_PySwigIterator, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator_value", _wrap_PySwigIterator_value, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator_incr", _wrap_PySwigIterator_incr, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator_decr", _wrap_PySwigIterator_decr, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator_distance", _wrap_PySwigIterator_distance, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator_equal", _wrap_PySwigIterator_equal, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator_copy", _wrap_PySwigIterator_copy, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator_next", _wrap_PySwigIterator_next, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator_previous", _wrap_PySwigIterator_previous, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator_advance", _wrap_PySwigIterator_advance, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator___eq__", _wrap_PySwigIterator___eq__, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator___ne__", _wrap_PySwigIterator___ne__, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator___iadd__", _wrap_PySwigIterator___iadd__, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator___isub__", _wrap_PySwigIterator___isub__, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator___add__", _wrap_PySwigIterator___add__, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator___sub__", _wrap_PySwigIterator___sub__, METH_VARARGS, NULL},
	 { (char *)"PySwigIterator_swigregister", PySwigIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"vectorS_iterator", _wrap_vectorS_iterator, METH_VARARGS, NULL},
	 { (char *)"vectorS___nonzero__", _wrap_vectorS___nonzero__, METH_VARARGS, NULL},
	 { (char *)"vectorS___len__", _wrap_vectorS___len__, METH_VARARGS, NULL},
	 { (char *)"vectorS_pop", _wrap_vectorS_pop, METH_VARARGS, NULL},
	 { (char *)"vectorS___getslice__", _wrap_vectorS___getslice__, METH_VARARGS, NULL},
	 { (char *)"vectorS___setslice__", _wrap_vectorS___setslice__, METH_VARARGS, NULL},
	 { (char *)"vectorS___delslice__", _wrap_vectorS___delslice__, METH_VARARGS, NULL},
	 { (char *)"vectorS___delitem__", _wrap_vectorS___delitem__, METH_VARARGS, NULL},
	 { (char *)"vectorS___getitem__", _wrap_vectorS___getitem__, METH_VARARGS, NULL},
	 { (char *)"vectorS___setitem__", _wrap_vectorS___setitem__, METH_VARARGS, NULL},
	 { (char *)"vectorS_append", _wrap_vectorS_append, METH_VARARGS, NULL},
	 { (char *)"vectorS_empty", _wrap_vectorS_empty, METH_VARARGS, NULL},
	 { (char *)"vectorS_size", _wrap_vectorS_size, METH_VARARGS, NULL},
	 { (char *)"vectorS_clear", _wrap_vectorS_clear, METH_VARARGS, NULL},
	 { (char *)"vectorS_swap", _wrap_vectorS_swap, METH_VARARGS, NULL},
	 { (char *)"vectorS_get_allocator", _wrap_vectorS_get_allocator, METH_VARARGS, NULL},
	 { (char *)"vectorS_begin", _wrap_vectorS_begin, METH_VARARGS, NULL},
	 { (char *)"vectorS_end", _wrap_vectorS_end, METH_VARARGS, NULL},
	 { (char *)"vectorS_rbegin", _wrap_vectorS_rbegin, METH_VARARGS, NULL},
	 { (char *)"vectorS_rend", _wrap_vectorS_rend, METH_VARARGS, NULL},
	 { (char *)"vectorS_pop_back", _wrap_vectorS_pop_back, METH_VARARGS, NULL},
	 { (char *)"vectorS_erase", _wrap_vectorS_erase, METH_VARARGS, NULL},
	 { (char *)"new_vectorS", _wrap_new_vectorS, METH_VARARGS, NULL},
	 { (char *)"vectorS_push_back", _wrap_vectorS_push_back, METH_VARARGS, NULL},
	 { (char *)"vectorS_front", _wrap_vectorS_front, METH_VARARGS, NULL},
	 { (char *)"vectorS_back", _wrap_vectorS_back, METH_VARARGS, NULL},
	 { (char *)"vectorS_assign", _wrap_vectorS_assign, METH_VARARGS, NULL},
	 { (char *)"vectorS_resize", _wrap_vectorS_resize, METH_VARARGS, NULL},
	 { (char *)"vectorS_insert", _wrap_vectorS_insert, METH_VARARGS, NULL},
	 { (char *)"vectorS_reserve", _wrap_vectorS_reserve, METH_VARARGS, NULL},
	 { (char *)"vectorS_capacity", _wrap_vectorS_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_vectorS", _wrap_delete_vectorS, METH_VARARGS, NULL},
	 { (char *)"vectorS_swigregister", vectorS_swigregister, METH_VARARGS, NULL},
	 { (char *)"vectorI_iterator", _wrap_vectorI_iterator, METH_VARARGS, NULL},
	 { (char *)"vectorI___nonzero__", _wrap_vectorI___nonzero__, METH_VARARGS, NULL},
	 { (char *)"vectorI___len__", _wrap_vectorI___len__, METH_VARARGS, NULL},
	 { (char *)"vectorI_pop", _wrap_vectorI_pop, METH_VARARGS, NULL},
	 { (char *)"vectorI___getslice__", _wrap_vectorI___getslice__, METH_VARARGS, NULL},
	 { (char *)"vectorI___setslice__", _wrap_vectorI___setslice__, METH_VARARGS, NULL},
	 { (char *)"vectorI___delslice__", _wrap_vectorI___delslice__, METH_VARARGS, NULL},
	 { (char *)"vectorI___delitem__", _wrap_vectorI___delitem__, METH_VARARGS, NULL},
	 { (char *)"vectorI___getitem__", _wrap_vectorI___getitem__, METH_VARARGS, NULL},
	 { (char *)"vectorI___setitem__", _wrap_vectorI___setitem__, METH_VARARGS, NULL},
	 { (char *)"vectorI_append", _wrap_vectorI_append, METH_VARARGS, NULL},
	 { (char *)"vectorI_empty", _wrap_vectorI_empty, METH_VARARGS, NULL},
	 { (char *)"vectorI_size", _wrap_vectorI_size, METH_VARARGS, NULL},
	 { (char *)"vectorI_clear", _wrap_vectorI_clear, METH_VARARGS, NULL},
	 { (char *)"vectorI_swap", _wrap_vectorI_swap, METH_VARARGS, NULL},
	 { (char *)"vectorI_get_allocator", _wrap_vectorI_get_allocator, METH_VARARGS, NULL},
	 { (char *)"vectorI_begin", _wrap_vectorI_begin, METH_VARARGS, NULL},
	 { (char *)"vectorI_end", _wrap_vectorI_end, METH_VARARGS, NULL},
	 { (char *)"vectorI_rbegin", _wrap_vectorI_rbegin, METH_VARARGS, NULL},
	 { (char *)"vectorI_rend", _wrap_vectorI_rend, METH_VARARGS, NULL},
	 { (char *)"vectorI_pop_back", _wrap_vectorI_pop_back, METH_VARARGS, NULL},
	 { (char *)"vectorI_erase", _wrap_vectorI_erase, METH_VARARGS, NULL},
	 { (char *)"new_vectorI", _wrap_new_vectorI, METH_VARARGS, NULL},
	 { (char *)"vectorI_push_back", _wrap_vectorI_push_back, METH_VARARGS, NULL},
	 { (char *)"vectorI_front", _wrap_vectorI_front, METH_VARARGS, NULL},
	 { (char *)"vectorI_back", _wrap_vectorI_back, METH_VARARGS, NULL},
	 { (char *)"vectorI_assign", _wrap_vectorI_assign, METH_VARARGS, NULL},
	 { (char *)"vectorI_resize", _wrap_vectorI_resize, METH_VARARGS, NULL},
	 { (char *)"vectorI_insert", _wrap_vectorI_insert, METH_VARARGS, NULL},
	 { (char *)"vectorI_reserve", _wrap_vectorI_reserve, METH_VARARGS, NULL},
	 { (char *)"vectorI_capacity", _wrap_vectorI_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_vectorI", _wrap_delete_vectorI, METH_VARARGS, NULL},
	 { (char *)"vectorI_swigregister", vectorI_swigregister, METH_VARARGS, NULL},
	 { (char *)"GetAvatarPointer", _wrap_GetAvatarPointer, METH_VARARGS, NULL},
	 { (char *)"GetPiavcaCorePointer", _wrap_GetPiavcaCorePointer, METH_VARARGS, NULL},
	 { (char *)"new_Vec", _wrap_new_Vec, METH_VARARGS, NULL},
	 { (char *)"delete_Vec", _wrap_delete_Vec, METH_VARARGS, NULL},
	 { (char *)"Vec_X", _wrap_Vec_X, METH_VARARGS, NULL},
	 { (char *)"Vec_Y", _wrap_Vec_Y, METH_VARARGS, NULL},
	 { (char *)"Vec_Z", _wrap_Vec_Z, METH_VARARGS, NULL},
	 { (char *)"Vec_XAxis", _wrap_Vec_XAxis, METH_VARARGS, NULL},
	 { (char *)"Vec_YAxis", _wrap_Vec_YAxis, METH_VARARGS, NULL},
	 { (char *)"Vec_ZAxis", _wrap_Vec_ZAxis, METH_VARARGS, NULL},
	 { (char *)"Vec_mag", _wrap_Vec_mag, METH_VARARGS, NULL},
	 { (char *)"Vec___add__", _wrap_Vec___add__, METH_VARARGS, NULL},
	 { (char *)"Vec___iadd__", _wrap_Vec___iadd__, METH_VARARGS, NULL},
	 { (char *)"Vec___sub__", _wrap_Vec___sub__, METH_VARARGS, NULL},
	 { (char *)"Vec___isub__", _wrap_Vec___isub__, METH_VARARGS, NULL},
	 { (char *)"Vec___neg__", _wrap_Vec___neg__, METH_VARARGS, NULL},
	 { (char *)"Vec___mul__", _wrap_Vec___mul__, METH_VARARGS, NULL},
	 { (char *)"Vec___imul__", _wrap_Vec___imul__, METH_VARARGS, NULL},
	 { (char *)"Vec___div__", _wrap_Vec___div__, METH_VARARGS, NULL},
	 { (char *)"Vec___idiv__", _wrap_Vec___idiv__, METH_VARARGS, NULL},
	 { (char *)"Vec___eq__", _wrap_Vec___eq__, METH_VARARGS, NULL},
	 { (char *)"Vec___ne__", _wrap_Vec___ne__, METH_VARARGS, NULL},
	 { (char *)"Vec_inverse", _wrap_Vec_inverse, METH_VARARGS, NULL},
	 { (char *)"Vec_invert", _wrap_Vec_invert, METH_VARARGS, NULL},
	 { (char *)"Vec_dot", _wrap_Vec_dot, METH_VARARGS, NULL},
	 { (char *)"Vec_cross", _wrap_Vec_cross, METH_VARARGS, NULL},
	 { (char *)"Vec_crossinplace", _wrap_Vec_crossinplace, METH_VARARGS, NULL},
	 { (char *)"Vec_normalized", _wrap_Vec_normalized, METH_VARARGS, NULL},
	 { (char *)"Vec_normalize", _wrap_Vec_normalize, METH_VARARGS, NULL},
	 { (char *)"Vec___getitem__", _wrap_Vec___getitem__, METH_VARARGS, NULL},
	 { (char *)"Vec___setitem__", _wrap_Vec___setitem__, METH_VARARGS, NULL},
	 { (char *)"Vec___repr__", _wrap_Vec___repr__, METH_VARARGS, NULL},
	 { (char *)"Vec_swigregister", Vec_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Quat", _wrap_new_Quat, METH_VARARGS, NULL},
	 { (char *)"delete_Quat", _wrap_delete_Quat, METH_VARARGS, NULL},
	 { (char *)"Quat_S", _wrap_Quat_S, METH_VARARGS, NULL},
	 { (char *)"Quat_I", _wrap_Quat_I, METH_VARARGS, NULL},
	 { (char *)"Quat_J", _wrap_Quat_J, METH_VARARGS, NULL},
	 { (char *)"Quat_K", _wrap_Quat_K, METH_VARARGS, NULL},
	 { (char *)"Quat_setAngleAxis", _wrap_Quat_setAngleAxis, METH_VARARGS, NULL},
	 { (char *)"Quat_getAngleAxis", _wrap_Quat_getAngleAxis, METH_VARARGS, NULL},
	 { (char *)"Quat_getAngle", _wrap_Quat_getAngle, METH_VARARGS, NULL},
	 { (char *)"Quat_getAxis", _wrap_Quat_getAxis, METH_VARARGS, NULL},
	 { (char *)"Quat_getEulerAngles", _wrap_Quat_getEulerAngles, METH_VARARGS, NULL},
	 { (char *)"Quat_Xangle", _wrap_Quat_Xangle, METH_VARARGS, NULL},
	 { (char *)"Quat_Yangle", _wrap_Quat_Yangle, METH_VARARGS, NULL},
	 { (char *)"Quat_Zangle", _wrap_Quat_Zangle, METH_VARARGS, NULL},
	 { (char *)"Quat_pointAt", _wrap_Quat_pointAt, METH_VARARGS, NULL},
	 { (char *)"Quat___mul__", _wrap_Quat___mul__, METH_VARARGS, NULL},
	 { (char *)"Quat___imul__", _wrap_Quat___imul__, METH_VARARGS, NULL},
	 { (char *)"Quat___div__", _wrap_Quat___div__, METH_VARARGS, NULL},
	 { (char *)"Quat___idiv__", _wrap_Quat___idiv__, METH_VARARGS, NULL},
	 { (char *)"Quat___eq__", _wrap_Quat___eq__, METH_VARARGS, NULL},
	 { (char *)"Quat___ne__", _wrap_Quat___ne__, METH_VARARGS, NULL},
	 { (char *)"Quat_Scale", _wrap_Quat_Scale, METH_VARARGS, NULL},
	 { (char *)"Quat_inverse", _wrap_Quat_inverse, METH_VARARGS, NULL},
	 { (char *)"Quat_invert", _wrap_Quat_invert, METH_VARARGS, NULL},
	 { (char *)"Quat_normalise", _wrap_Quat_normalise, METH_VARARGS, NULL},
	 { (char *)"Quat_transform", _wrap_Quat_transform, METH_VARARGS, NULL},
	 { (char *)"Quat_transformInPlace", _wrap_Quat_transformInPlace, METH_VARARGS, NULL},
	 { (char *)"Quat_spherical_distance", _wrap_Quat_spherical_distance, METH_VARARGS, NULL},
	 { (char *)"Quat_logMap", _wrap_Quat_logMap, METH_VARARGS, NULL},
	 { (char *)"Quat_expMap", _wrap_Quat_expMap, METH_VARARGS, NULL},
	 { (char *)"Quat___getitem__", _wrap_Quat___getitem__, METH_VARARGS, NULL},
	 { (char *)"Quat___setitem__", _wrap_Quat___setitem__, METH_VARARGS, NULL},
	 { (char *)"Quat___repr__", _wrap_Quat___repr__, METH_VARARGS, NULL},
	 { (char *)"Quat_swigregister", Quat_swigregister, METH_VARARGS, NULL},
	 { (char *)"slerp", _wrap_slerp, METH_VARARGS, NULL},
	 { (char *)"Bound_min_set", _wrap_Bound_min_set, METH_VARARGS, NULL},
	 { (char *)"Bound_min_get", _wrap_Bound_min_get, METH_VARARGS, NULL},
	 { (char *)"Bound_max_set", _wrap_Bound_max_set, METH_VARARGS, NULL},
	 { (char *)"Bound_max_get", _wrap_Bound_max_get, METH_VARARGS, NULL},
	 { (char *)"new_Bound", _wrap_new_Bound, METH_VARARGS, NULL},
	 { (char *)"delete_Bound", _wrap_delete_Bound, METH_VARARGS, NULL},
	 { (char *)"Bound___add__", _wrap_Bound___add__, METH_VARARGS, NULL},
	 { (char *)"Bound___iadd__", _wrap_Bound___iadd__, METH_VARARGS, NULL},
	 { (char *)"Bound___eq__", _wrap_Bound___eq__, METH_VARARGS, NULL},
	 { (char *)"Bound___ne__", _wrap_Bound___ne__, METH_VARARGS, NULL},
	 { (char *)"Bound_swigregister", Bound_swigregister, METH_VARARGS, NULL},
	 { (char *)"checkNaN", _wrap_checkNaN, METH_VARARGS, NULL},
	 { (char *)"StringToWString", _wrap_StringToWString, METH_VARARGS, NULL},
	 { (char *)"WStringToString", _wrap_WStringToString, METH_VARARGS, NULL},
	 { (char *)"new_TimeCallback", _wrap_new_TimeCallback, METH_VARARGS, NULL},
	 { (char *)"delete_TimeCallback", _wrap_delete_TimeCallback, METH_VARARGS, NULL},
	 { (char *)"TimeCallback_getName", _wrap_TimeCallback_getName, METH_VARARGS, NULL},
	 { (char *)"TimeCallback_init", _wrap_TimeCallback_init, METH_VARARGS, NULL},
	 { (char *)"TimeCallback_timeStep", _wrap_TimeCallback_timeStep, METH_VARARGS, NULL},
	 { (char *)"disown_TimeCallback", _wrap_disown_TimeCallback, METH_VARARGS, NULL},
	 { (char *)"TimeCallback_swigregister", TimeCallback_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AvatarTimeCallback", _wrap_new_AvatarTimeCallback, METH_VARARGS, NULL},
	 { (char *)"delete_AvatarTimeCallback", _wrap_delete_AvatarTimeCallback, METH_VARARGS, NULL},
	 { (char *)"AvatarTimeCallback_getName", _wrap_AvatarTimeCallback_getName, METH_VARARGS, NULL},
	 { (char *)"AvatarTimeCallback_init", _wrap_AvatarTimeCallback_init, METH_VARARGS, NULL},
	 { (char *)"AvatarTimeCallback_timeStep", _wrap_AvatarTimeCallback_timeStep, METH_VARARGS, NULL},
	 { (char *)"disown_AvatarTimeCallback", _wrap_disown_AvatarTimeCallback, METH_VARARGS, NULL},
	 { (char *)"AvatarTimeCallback_swigregister", AvatarTimeCallback_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Motion", _wrap_new_Motion, METH_VARARGS, NULL},
	 { (char *)"delete_Motion", _wrap_delete_Motion, METH_VARARGS, NULL},
	 { (char *)"Motion_clone", _wrap_Motion_clone, METH_VARARGS, NULL},
	 { (char *)"Motion_getClassName", _wrap_Motion_getClassName, METH_VARARGS, NULL},
	 { (char *)"Motion_castToThisType", _wrap_Motion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"Motion_create", _wrap_Motion_create, METH_VARARGS, NULL},
	 { (char *)"Motion_printInfo", _wrap_Motion_printInfo, METH_VARARGS, NULL},
	 { (char *)"Motion_getId", _wrap_Motion_getId, METH_VARARGS, NULL},
	 { (char *)"Motion___eq__", _wrap_Motion___eq__, METH_VARARGS, NULL},
	 { (char *)"Motion___ne__", _wrap_Motion___ne__, METH_VARARGS, NULL},
	 { (char *)"Motion_load", _wrap_Motion_load, METH_VARARGS, NULL},
	 { (char *)"Motion_unload", _wrap_Motion_unload, METH_VARARGS, NULL},
	 { (char *)"Motion_loaded", _wrap_Motion_loaded, METH_VARARGS, NULL},
	 { (char *)"Motion_getAvatar", _wrap_Motion_getAvatar, METH_VARARGS, NULL},
	 { (char *)"Motion_setStartTime", _wrap_Motion_setStartTime, METH_VARARGS, NULL},
	 { (char *)"Motion_getStartTime", _wrap_Motion_getStartTime, METH_VARARGS, NULL},
	 { (char *)"Motion_getEndTime", _wrap_Motion_getEndTime, METH_VARARGS, NULL},
	 { (char *)"Motion_reset", _wrap_Motion_reset, METH_VARARGS, NULL},
	 { (char *)"Motion_event", _wrap_Motion_event, METH_VARARGS, NULL},
	 { (char *)"Motion_getEventNames", _wrap_Motion_getEventNames, METH_VARARGS, NULL},
	 { (char *)"Motion_cleanRecursionState", _wrap_Motion_cleanRecursionState, METH_VARARGS, NULL},
	 { (char *)"Motion_wasVisited", _wrap_Motion_wasVisited, METH_VARARGS, NULL},
	 { (char *)"Motion_sendEvent", _wrap_Motion_sendEvent, METH_VARARGS, NULL},
	 { (char *)"Motion_Reference", _wrap_Motion_Reference, METH_VARARGS, NULL},
	 { (char *)"Motion_Dispose", _wrap_Motion_Dispose, METH_VARARGS, NULL},
	 { (char *)"Motion_makeTemp", _wrap_Motion_makeTemp, METH_VARARGS, NULL},
	 { (char *)"Motion_setName", _wrap_Motion_setName, METH_VARARGS, NULL},
	 { (char *)"Motion_getName", _wrap_Motion_getName, METH_VARARGS, NULL},
	 { (char *)"Motion_findSub", _wrap_Motion_findSub, METH_VARARGS, NULL},
	 { (char *)"Motion_findSubByType", _wrap_Motion_findSubByType, METH_VARARGS, NULL},
	 { (char *)"Motion_getMotionLength", _wrap_Motion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"Motion_isFacial", _wrap_Motion_isFacial, METH_VARARGS, NULL},
	 { (char *)"Motion_isRandomAccess", _wrap_Motion_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"Motion_begin", _wrap_Motion_begin, METH_VARARGS, NULL},
	 { (char *)"Motion_end", _wrap_Motion_end, METH_VARARGS, NULL},
	 { (char *)"Motion_next", _wrap_Motion_next, METH_VARARGS, NULL},
	 { (char *)"Motion_isNull", _wrap_Motion_isNull, METH_VARARGS, NULL},
	 { (char *)"Motion_getTrackType", _wrap_Motion_getTrackType, METH_VARARGS, NULL},
	 { (char *)"Motion_pause", _wrap_Motion_pause, METH_VARARGS, NULL},
	 { (char *)"Motion_unpause", _wrap_Motion_unpause, METH_VARARGS, NULL},
	 { (char *)"Motion_preFrame", _wrap_Motion_preFrame, METH_VARARGS, NULL},
	 { (char *)"Motion_getFloatValueAtTime", _wrap_Motion_getFloatValueAtTime, METH_VARARGS, NULL},
	 { (char *)"Motion_getVecValueAtTime", _wrap_Motion_getVecValueAtTime, METH_VARARGS, NULL},
	 { (char *)"Motion_getQuatValueAtTime", _wrap_Motion_getQuatValueAtTime, METH_VARARGS, NULL},
	 { (char *)"Motion_getFloatValueAtTimeInternal", _wrap_Motion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"Motion_getVecValueAtTimeInternal", _wrap_Motion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"Motion_getQuatValueAtTimeInternal", _wrap_Motion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"disown_Motion", _wrap_disown_Motion, METH_VARARGS, NULL},
	 { (char *)"Motion_swigregister", Motion_swigregister, METH_VARARGS, NULL},
	 { (char *)"Core_dir_set", _wrap_Core_dir_set, METH_VARARGS, NULL},
	 { (char *)"Core_dir_get", _wrap_Core_dir_get, METH_VARARGS, NULL},
	 { (char *)"delete_Core", _wrap_delete_Core, METH_VARARGS, NULL},
	 { (char *)"Core_reset", _wrap_Core_reset, METH_VARARGS, NULL},
	 { (char *)"Core_init", _wrap_Core_init, METH_VARARGS, NULL},
	 { (char *)"Core_setCore", _wrap_Core_setCore, METH_VARARGS, NULL},
	 { (char *)"Core_getCore", _wrap_Core_getCore, METH_VARARGS, NULL},
	 { (char *)"Core_getCorePointerAsLong", _wrap_Core_getCorePointerAsLong, METH_VARARGS, NULL},
	 { (char *)"Core_registerCallback", _wrap_Core_registerCallback, METH_VARARGS, NULL},
	 { (char *)"Core_timeStep", _wrap_Core_timeStep, METH_VARARGS, NULL},
	 { (char *)"Core_prerender", _wrap_Core_prerender, METH_VARARGS, NULL},
	 { (char *)"Core_render", _wrap_Core_render, METH_VARARGS, NULL},
	 { (char *)"Core_setHarware", _wrap_Core_setHarware, METH_VARARGS, NULL},
	 { (char *)"Core_getHarware", _wrap_Core_getHarware, METH_VARARGS, NULL},
	 { (char *)"Core_getJointId", _wrap_Core_getJointId, METH_VARARGS, NULL},
	 { (char *)"Core_getMaxJointId", _wrap_Core_getMaxJointId, METH_VARARGS, NULL},
	 { (char *)"Core_addJointNameSet", _wrap_Core_addJointNameSet, METH_VARARGS, NULL},
	 { (char *)"Core_getJointName", _wrap_Core_getJointName, METH_VARARGS, NULL},
	 { (char *)"Core_getJointNameAssociations", _wrap_Core_getJointNameAssociations, METH_VARARGS, NULL},
	 { (char *)"Core_getExpressionId", _wrap_Core_getExpressionId, METH_VARARGS, NULL},
	 { (char *)"Core_getMaxExpressionId", _wrap_Core_getMaxExpressionId, METH_VARARGS, NULL},
	 { (char *)"Core_addExpressionNameSet", _wrap_Core_addExpressionNameSet, METH_VARARGS, NULL},
	 { (char *)"Core_getExpressionName", _wrap_Core_getExpressionName, METH_VARARGS, NULL},
	 { (char *)"Core_getExpressionNameAssociations", _wrap_Core_getExpressionNameAssociations, METH_VARARGS, NULL},
	 { (char *)"Core_getTrackId", _wrap_Core_getTrackId, METH_VARARGS, NULL},
	 { (char *)"Core_getMaxTrackId", _wrap_Core_getMaxTrackId, METH_VARARGS, NULL},
	 { (char *)"Core_getMinTrackId", _wrap_Core_getMinTrackId, METH_VARARGS, NULL},
	 { (char *)"Core_getTrackName", _wrap_Core_getTrackName, METH_VARARGS, NULL},
	 { (char *)"Core_getTrackNameAssociations", _wrap_Core_getTrackNameAssociations, METH_VARARGS, NULL},
	 { (char *)"Core_loadMotion", _wrap_Core_loadMotion, METH_VARARGS, NULL},
	 { (char *)"Core_renameMotion", _wrap_Core_renameMotion, METH_VARARGS, NULL},
	 { (char *)"Core_unloadMotion", _wrap_Core_unloadMotion, METH_VARARGS, NULL},
	 { (char *)"Core_getMotionNames", _wrap_Core_getMotionNames, METH_VARARGS, NULL},
	 { (char *)"Core_getNumberOfMotions", _wrap_Core_getNumberOfMotions, METH_VARARGS, NULL},
	 { (char *)"Core_getAllmotions", _wrap_Core_getAllmotions, METH_VARARGS, NULL},
	 { (char *)"Core_getMotion", _wrap_Core_getMotion, METH_VARARGS, NULL},
	 { (char *)"Core_loadAvatar", _wrap_Core_loadAvatar, METH_VARARGS, NULL},
	 { (char *)"Core_getAvatarNames", _wrap_Core_getAvatarNames, METH_VARARGS, NULL},
	 { (char *)"Core_numAvatars", _wrap_Core_numAvatars, METH_VARARGS, NULL},
	 { (char *)"Core_getAvatar", _wrap_Core_getAvatar, METH_VARARGS, NULL},
	 { (char *)"Core_renameAvatar", _wrap_Core_renameAvatar, METH_VARARGS, NULL},
	 { (char *)"Core_removeAvatar", _wrap_Core_removeAvatar, METH_VARARGS, NULL},
	 { (char *)"Core_initAvatar", _wrap_Core_initAvatar, METH_VARARGS, NULL},
	 { (char *)"Core_numObjects", _wrap_Core_numObjects, METH_VARARGS, NULL},
	 { (char *)"Core_getObject", _wrap_Core_getObject, METH_VARARGS, NULL},
	 { (char *)"Core_renameObject", _wrap_Core_renameObject, METH_VARARGS, NULL},
	 { (char *)"Core_removeObject", _wrap_Core_removeObject, METH_VARARGS, NULL},
	 { (char *)"Core_initObject", _wrap_Core_initObject, METH_VARARGS, NULL},
	 { (char *)"Core_initMotion", _wrap_Core_initMotion, METH_VARARGS, NULL},
	 { (char *)"Core_setDir", _wrap_Core_setDir, METH_VARARGS, NULL},
	 { (char *)"Core_getTime", _wrap_Core_getTime, METH_VARARGS, NULL},
	 { (char *)"Core_getSystemTime", _wrap_Core_getSystemTime, METH_VARARGS, NULL},
	 { (char *)"Core_setAutoTimeOff", _wrap_Core_setAutoTimeOff, METH_VARARGS, NULL},
	 { (char *)"Core_setAutoTimeOn", _wrap_Core_setAutoTimeOn, METH_VARARGS, NULL},
	 { (char *)"Core_setCurrentTime", _wrap_Core_setCurrentTime, METH_VARARGS, NULL},
	 { (char *)"Core_addError", _wrap_Core_addError, METH_VARARGS, NULL},
	 { (char *)"Core_error", _wrap_Core_error, METH_VARARGS, NULL},
	 { (char *)"Core_clearErrors", _wrap_Core_clearErrors, METH_VARARGS, NULL},
	 { (char *)"Core_getErrors", _wrap_Core_getErrors, METH_VARARGS, NULL},
	 { (char *)"Core_errorsPresent", _wrap_Core_errorsPresent, METH_VARARGS, NULL},
	 { (char *)"Core_addWarning", _wrap_Core_addWarning, METH_VARARGS, NULL},
	 { (char *)"Core_Warning", _wrap_Core_Warning, METH_VARARGS, NULL},
	 { (char *)"Core_clearWarnings", _wrap_Core_clearWarnings, METH_VARARGS, NULL},
	 { (char *)"Core_getWarnings", _wrap_Core_getWarnings, METH_VARARGS, NULL},
	 { (char *)"Core_warningsPresent", _wrap_Core_warningsPresent, METH_VARARGS, NULL},
	 { (char *)"Core_exceptionsOn", _wrap_Core_exceptionsOn, METH_VARARGS, NULL},
	 { (char *)"Core_setExceptionsOn", _wrap_Core_setExceptionsOn, METH_VARARGS, NULL},
	 { (char *)"Core_setExceptionsOff", _wrap_Core_setExceptionsOff, METH_VARARGS, NULL},
	 { (char *)"Core_log", _wrap_Core_log, METH_VARARGS, NULL},
	 { (char *)"Core_addProfilePoint", _wrap_Core_addProfilePoint, METH_VARARGS, NULL},
	 { (char *)"Core_profilePointStart", _wrap_Core_profilePointStart, METH_VARARGS, NULL},
	 { (char *)"Core_profilePointEnd", _wrap_Core_profilePointEnd, METH_VARARGS, NULL},
	 { (char *)"Core_printProfileData", _wrap_Core_printProfileData, METH_VARARGS, NULL},
	 { (char *)"Core_output", _wrap_Core_output, METH_VARARGS, NULL},
	 { (char *)"Core_message", _wrap_Core_message, METH_VARARGS, NULL},
	 { (char *)"Core_getMessages", _wrap_Core_getMessages, METH_VARARGS, NULL},
	 { (char *)"Core_swigregister", Core_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_KeyframeMotion", _wrap_new_KeyframeMotion, METH_VARARGS, NULL},
	 { (char *)"delete_KeyframeMotion", _wrap_delete_KeyframeMotion, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_clone", _wrap_KeyframeMotion_clone, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_getClassName", _wrap_KeyframeMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_castToThisType", _wrap_KeyframeMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_getMotionLength", _wrap_KeyframeMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_isFacial", _wrap_KeyframeMotion_isFacial, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_setFacial", _wrap_KeyframeMotion_setFacial, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_isRandomAccess", _wrap_KeyframeMotion_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_isNull", _wrap_KeyframeMotion_isNull, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_getTrackType", _wrap_KeyframeMotion_getTrackType, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_addFloatTrack", _wrap_KeyframeMotion_addFloatTrack, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_addVecTrack", _wrap_KeyframeMotion_addVecTrack, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_addQuatTrack", _wrap_KeyframeMotion_addQuatTrack, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_setFloatKeyframe", _wrap_KeyframeMotion_setFloatKeyframe, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_setVecKeyframe", _wrap_KeyframeMotion_setVecKeyframe, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_setQuatKeyframe", _wrap_KeyframeMotion_setQuatKeyframe, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_getNumKeyframes", _wrap_KeyframeMotion_getNumKeyframes, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_getKeyframeTime", _wrap_KeyframeMotion_getKeyframeTime, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_getFloatValueAtTimeInternal", _wrap_KeyframeMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_getVecValueAtTimeInternal", _wrap_KeyframeMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_getQuatValueAtTimeInternal", _wrap_KeyframeMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_deleteAllTracks", _wrap_KeyframeMotion_deleteAllTracks, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_clearTrack", _wrap_KeyframeMotion_clearTrack, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_clearAllTracks", _wrap_KeyframeMotion_clearAllTracks, METH_VARARGS, NULL},
	 { (char *)"disown_KeyframeMotion", _wrap_disown_KeyframeMotion, METH_VARARGS, NULL},
	 { (char *)"KeyframeMotion_swigregister", KeyframeMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"copyMotionPosture", _wrap_copyMotionPosture, METH_VARARGS, NULL},
	 { (char *)"new_Avatar", _wrap_new_Avatar, METH_VARARGS, NULL},
	 { (char *)"Avatar_isValid", _wrap_Avatar_isValid, METH_VARARGS, NULL},
	 { (char *)"Avatar_activate", _wrap_Avatar_activate, METH_VARARGS, NULL},
	 { (char *)"Avatar_deactivate", _wrap_Avatar_deactivate, METH_VARARGS, NULL},
	 { (char *)"Avatar_getName", _wrap_Avatar_getName, METH_VARARGS, NULL},
	 { (char *)"Avatar_setName", _wrap_Avatar_setName, METH_VARARGS, NULL},
	 { (char *)"Avatar_hideBodyPart", _wrap_Avatar_hideBodyPart, METH_VARARGS, NULL},
	 { (char *)"Avatar_showBodyPart", _wrap_Avatar_showBodyPart, METH_VARARGS, NULL},
	 { (char *)"Avatar_clearFacialExpressionWeights", _wrap_Avatar_clearFacialExpressionWeights, METH_VARARGS, NULL},
	 { (char *)"Avatar_beginExpression", _wrap_Avatar_beginExpression, METH_VARARGS, NULL},
	 { (char *)"Avatar_endExpression", _wrap_Avatar_endExpression, METH_VARARGS, NULL},
	 { (char *)"Avatar_nextExpression", _wrap_Avatar_nextExpression, METH_VARARGS, NULL},
	 { (char *)"Avatar_isExpressionNull", _wrap_Avatar_isExpressionNull, METH_VARARGS, NULL},
	 { (char *)"Avatar_setRootPosition", _wrap_Avatar_setRootPosition, METH_VARARGS, NULL},
	 { (char *)"Avatar_getRootPosition", _wrap_Avatar_getRootPosition, METH_VARARGS, NULL},
	 { (char *)"Avatar_setRootOrientation", _wrap_Avatar_setRootOrientation, METH_VARARGS, NULL},
	 { (char *)"Avatar_setRootAngle", _wrap_Avatar_setRootAngle, METH_VARARGS, NULL},
	 { (char *)"Avatar_setRootAngleDeg", _wrap_Avatar_setRootAngleDeg, METH_VARARGS, NULL},
	 { (char *)"Avatar_getRootOrientation", _wrap_Avatar_getRootOrientation, METH_VARARGS, NULL},
	 { (char *)"Avatar_createJoint", _wrap_Avatar_createJoint, METH_VARARGS, NULL},
	 { (char *)"Avatar_begin", _wrap_Avatar_begin, METH_VARARGS, NULL},
	 { (char *)"Avatar_end", _wrap_Avatar_end, METH_VARARGS, NULL},
	 { (char *)"Avatar_next", _wrap_Avatar_next, METH_VARARGS, NULL},
	 { (char *)"Avatar_getParent", _wrap_Avatar_getParent, METH_VARARGS, NULL},
	 { (char *)"Avatar_getJointName", _wrap_Avatar_getJointName, METH_VARARGS, NULL},
	 { (char *)"Avatar_isNull", _wrap_Avatar_isNull, METH_VARARGS, NULL},
	 { (char *)"Avatar_hasChanged", _wrap_Avatar_hasChanged, METH_VARARGS, NULL},
	 { (char *)"Avatar_clearChange", _wrap_Avatar_clearChange, METH_VARARGS, NULL},
	 { (char *)"Avatar_setJointPosition", _wrap_Avatar_setJointPosition, METH_VARARGS, NULL},
	 { (char *)"Avatar_scaleRoot", _wrap_Avatar_scaleRoot, METH_VARARGS, NULL},
	 { (char *)"Avatar_scaleJoint", _wrap_Avatar_scaleJoint, METH_VARARGS, NULL},
	 { (char *)"Avatar_getBoundBox", _wrap_Avatar_getBoundBox, METH_VARARGS, NULL},
	 { (char *)"Avatar_getBaseBoundBox", _wrap_Avatar_getBaseBoundBox, METH_VARARGS, NULL},
	 { (char *)"Avatar_timeStep", _wrap_Avatar_timeStep, METH_VARARGS, NULL},
	 { (char *)"Avatar_loadMotion", _wrap_Avatar_loadMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_unloadMotion", _wrap_Avatar_unloadMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_getMotion", _wrap_Avatar_getMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_playMotion", _wrap_Avatar_playMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_playMotionDirect", _wrap_Avatar_playMotionDirect, METH_VARARGS, NULL},
	 { (char *)"Avatar_stopMotion", _wrap_Avatar_stopMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_restartMotion", _wrap_Avatar_restartMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_setMotionStartTime", _wrap_Avatar_setMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getMotionStartTime", _wrap_Avatar_getMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getMotionEndTime", _wrap_Avatar_getMotionEndTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_showMotionAtTime", _wrap_Avatar_showMotionAtTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_loadFacialMotion", _wrap_Avatar_loadFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_unloadFacialMotion", _wrap_Avatar_unloadFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_getFacialMotion", _wrap_Avatar_getFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_playFacialMotion", _wrap_Avatar_playFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_stopFacialMotion", _wrap_Avatar_stopFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_restartFacialMotion", _wrap_Avatar_restartFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_setFacialMotionStartTime", _wrap_Avatar_setFacialMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getFacialMotionStartTime", _wrap_Avatar_getFacialMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getFacialMotionEndTime", _wrap_Avatar_getFacialMotionEndTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_showFacialMotionAtTime", _wrap_Avatar_showFacialMotionAtTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_loadScaleMotion", _wrap_Avatar_loadScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_unloadScaleMotion", _wrap_Avatar_unloadScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_getScaleMotion", _wrap_Avatar_getScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_playScaleMotion", _wrap_Avatar_playScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_stopScaleMotion", _wrap_Avatar_stopScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_restartScaleMotion", _wrap_Avatar_restartScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_setScaleMotionStartTime", _wrap_Avatar_setScaleMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getScaleMotionStartTime", _wrap_Avatar_getScaleMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getScaleMotionEndTime", _wrap_Avatar_getScaleMotionEndTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_showScaleMotionAtTime", _wrap_Avatar_showScaleMotionAtTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_registerCallback", _wrap_Avatar_registerCallback, METH_VARARGS, NULL},
	 { (char *)"Avatar_removeCallback", _wrap_Avatar_removeCallback, METH_VARARGS, NULL},
	 { (char *)"Avatar_getNumCallbacks", _wrap_Avatar_getNumCallbacks, METH_VARARGS, NULL},
	 { (char *)"Avatar_getCallback", _wrap_Avatar_getCallback, METH_VARARGS, NULL},
	 { (char *)"Avatar_event", _wrap_Avatar_event, METH_VARARGS, NULL},
	 { (char *)"Avatar_setFacialExpressionWeight", _wrap_Avatar_setFacialExpressionWeight, METH_VARARGS, NULL},
	 { (char *)"Avatar_getFacialExpressionWeight", _wrap_Avatar_getFacialExpressionWeight, METH_VARARGS, NULL},
	 { (char *)"Avatar_setJointOrientation", _wrap_Avatar_setJointOrientation, METH_VARARGS, NULL},
	 { (char *)"Avatar_getJointOrientation", _wrap_Avatar_getJointOrientation, METH_VARARGS, NULL},
	 { (char *)"Avatar_getJointBasePosition", _wrap_Avatar_getJointBasePosition, METH_VARARGS, NULL},
	 { (char *)"Avatar_play_motion", _wrap_Avatar_play_motion, METH_VARARGS, NULL},
	 { (char *)"Avatar_add_background_motion", _wrap_Avatar_add_background_motion, METH_VARARGS, NULL},
	 { (char *)"Avatar_interrupt_motion", _wrap_Avatar_interrupt_motion, METH_VARARGS, NULL},
	 { (char *)"Avatar_stop_motion", _wrap_Avatar_stop_motion, METH_VARARGS, NULL},
	 { (char *)"Avatar_reposition_relative", _wrap_Avatar_reposition_relative, METH_VARARGS, NULL},
	 { (char *)"Avatar_reposition_absolute", _wrap_Avatar_reposition_absolute, METH_VARARGS, NULL},
	 { (char *)"Avatar_swigregister", Avatar_swigregister, METH_VARARGS, NULL},
	 { (char *)"queueElement_mot_set", _wrap_queueElement_mot_set, METH_VARARGS, NULL},
	 { (char *)"queueElement_mot_get", _wrap_queueElement_mot_get, METH_VARARGS, NULL},
	 { (char *)"queueElement_name_set", _wrap_queueElement_name_set, METH_VARARGS, NULL},
	 { (char *)"queueElement_name_get", _wrap_queueElement_name_get, METH_VARARGS, NULL},
	 { (char *)"queueElement_atTime_set", _wrap_queueElement_atTime_set, METH_VARARGS, NULL},
	 { (char *)"queueElement_atTime_get", _wrap_queueElement_atTime_get, METH_VARARGS, NULL},
	 { (char *)"queueElement_background_set", _wrap_queueElement_background_set, METH_VARARGS, NULL},
	 { (char *)"queueElement_background_get", _wrap_queueElement_background_get, METH_VARARGS, NULL},
	 { (char *)"new_queueElement", _wrap_new_queueElement, METH_VARARGS, NULL},
	 { (char *)"delete_queueElement", _wrap_delete_queueElement, METH_VARARGS, NULL},
	 { (char *)"queueElement_swigregister", queueElement_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AvatarMotionQueue", _wrap_new_AvatarMotionQueue, METH_VARARGS, NULL},
	 { (char *)"delete_AvatarMotionQueue", _wrap_delete_AvatarMotionQueue, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_getQueue", _wrap_AvatarMotionQueue_getQueue, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_hasQueue", _wrap_AvatarMotionQueue_hasQueue, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_init", _wrap_AvatarMotionQueue_init, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_timeStep", _wrap_AvatarMotionQueue_timeStep, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_isFacial", _wrap_AvatarMotionQueue_isFacial, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_getCurrentMotionStart", _wrap_AvatarMotionQueue_getCurrentMotionStart, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_reblend", _wrap_AvatarMotionQueue_reblend, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_setBlendInterval", _wrap_AvatarMotionQueue_setBlendInterval, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_enqueueMotion", _wrap_AvatarMotionQueue_enqueueMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_enqueueRandomMotions", _wrap_AvatarMotionQueue_enqueueRandomMotions, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_queueTopIsBackground", _wrap_AvatarMotionQueue_queueTopIsBackground, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_queueTopTime", _wrap_AvatarMotionQueue_queueTopTime, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_dequeueMotion", _wrap_AvatarMotionQueue_dequeueMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_getQueueSize", _wrap_AvatarMotionQueue_getQueueSize, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_updateDelay", _wrap_AvatarMotionQueue_updateDelay, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_clearQueue", _wrap_AvatarMotionQueue_clearQueue, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_removeMotion", _wrap_AvatarMotionQueue_removeMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_pauseMotion", _wrap_AvatarMotionQueue_pauseMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_unpauseMotion", _wrap_AvatarMotionQueue_unpauseMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_clearAllBackgroundMotions", _wrap_AvatarMotionQueue_clearAllBackgroundMotions, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_clearFinishedBackgroundMotions", _wrap_AvatarMotionQueue_clearFinishedBackgroundMotions, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_removeBackgroundMotion", _wrap_AvatarMotionQueue_removeBackgroundMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_removeBackgroundMotionByType", _wrap_AvatarMotionQueue_removeBackgroundMotionByType, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_pauseBackgroundMotion", _wrap_AvatarMotionQueue_pauseBackgroundMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_unpauseBackgroundMotion", _wrap_AvatarMotionQueue_unpauseBackgroundMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_interrupt", _wrap_AvatarMotionQueue_interrupt, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_repositionRelative", _wrap_AvatarMotionQueue_repositionRelative, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_repositionAbsolute", _wrap_AvatarMotionQueue_repositionAbsolute, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_getMotion", _wrap_AvatarMotionQueue_getMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_blendMotion", _wrap_AvatarMotionQueue_blendMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_addBackgroundMotion", _wrap_AvatarMotionQueue_addBackgroundMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_swigregister", AvatarMotionQueue_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Object", _wrap_new_Object, METH_VARARGS, NULL},
	 { (char *)"Object_getName", _wrap_Object_getName, METH_VARARGS, NULL},
	 { (char *)"Object_setName", _wrap_Object_setName, METH_VARARGS, NULL},
	 { (char *)"Object_setPosition", _wrap_Object_setPosition, METH_VARARGS, NULL},
	 { (char *)"Object_getPosition", _wrap_Object_getPosition, METH_VARARGS, NULL},
	 { (char *)"Object_setOrientation", _wrap_Object_setOrientation, METH_VARARGS, NULL},
	 { (char *)"Object_setAngle", _wrap_Object_setAngle, METH_VARARGS, NULL},
	 { (char *)"Object_setAngleDeg", _wrap_Object_setAngleDeg, METH_VARARGS, NULL},
	 { (char *)"Object_getOrientation", _wrap_Object_getOrientation, METH_VARARGS, NULL},
	 { (char *)"Object_scale", _wrap_Object_scale, METH_VARARGS, NULL},
	 { (char *)"Object_swigregister", Object_swigregister, METH_VARARGS, NULL},
	 { (char *)"degToRad", _wrap_degToRad, METH_VARARGS, NULL},
	 { (char *)"radToDeg", _wrap_radToDeg, METH_VARARGS, NULL},
	 { (char *)"new_CurrentValueMotion", _wrap_new_CurrentValueMotion, METH_VARARGS, NULL},
	 { (char *)"CurrentValueMotion_clone", _wrap_CurrentValueMotion_clone, METH_VARARGS, NULL},
	 { (char *)"CurrentValueMotion_getClassName", _wrap_CurrentValueMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"CurrentValueMotion_castToThisType", _wrap_CurrentValueMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"CurrentValueMotion_setFloatValue", _wrap_CurrentValueMotion_setFloatValue, METH_VARARGS, NULL},
	 { (char *)"CurrentValueMotion_setVecValue", _wrap_CurrentValueMotion_setVecValue, METH_VARARGS, NULL},
	 { (char *)"CurrentValueMotion_setQuatValue", _wrap_CurrentValueMotion_setQuatValue, METH_VARARGS, NULL},
	 { (char *)"delete_CurrentValueMotion", _wrap_delete_CurrentValueMotion, METH_VARARGS, NULL},
	 { (char *)"CurrentValueMotion_swigregister", CurrentValueMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MotionFilter", _wrap_new_MotionFilter, METH_VARARGS, NULL},
	 { (char *)"delete_MotionFilter", _wrap_delete_MotionFilter, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_clone", _wrap_MotionFilter_clone, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_getClassName", _wrap_MotionFilter_getClassName, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_castToThisType", _wrap_MotionFilter_castToThisType, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_printInfo", _wrap_MotionFilter_printInfo, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_findSub", _wrap_MotionFilter_findSub, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_findSubByType", _wrap_MotionFilter_findSubByType, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_load", _wrap_MotionFilter_load, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_unload", _wrap_MotionFilter_unload, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_loaded", _wrap_MotionFilter_loaded, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_preFrame", _wrap_MotionFilter_preFrame, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_getAvatar", _wrap_MotionFilter_getAvatar, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_setStartTime", _wrap_MotionFilter_setStartTime, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_reset", _wrap_MotionFilter_reset, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_event", _wrap_MotionFilter_event, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_cleanRecursionState", _wrap_MotionFilter_cleanRecursionState, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_setMotion", _wrap_MotionFilter_setMotion, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_getMotion", _wrap_MotionFilter_getMotion, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_getMotionLength", _wrap_MotionFilter_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_isFacial", _wrap_MotionFilter_isFacial, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_isRandomAccess", _wrap_MotionFilter_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_isNull", _wrap_MotionFilter_isNull, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_getTrackType", _wrap_MotionFilter_getTrackType, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_getFloatValueAtTimeInternal", _wrap_MotionFilter_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_getVecValueAtTimeInternal", _wrap_MotionFilter_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_getQuatValueAtTimeInternal", _wrap_MotionFilter_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"disown_MotionFilter", _wrap_disown_MotionFilter, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_swigregister", MotionFilter_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TwoMotionCombiner", _wrap_new_TwoMotionCombiner, METH_VARARGS, NULL},
	 { (char *)"delete_TwoMotionCombiner", _wrap_delete_TwoMotionCombiner, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_clone", _wrap_TwoMotionCombiner_clone, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_getClassName", _wrap_TwoMotionCombiner_getClassName, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_castToThisType", _wrap_TwoMotionCombiner_castToThisType, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_printInfo", _wrap_TwoMotionCombiner_printInfo, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_findSub", _wrap_TwoMotionCombiner_findSub, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_findSubByType", _wrap_TwoMotionCombiner_findSubByType, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_load", _wrap_TwoMotionCombiner_load, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_unload", _wrap_TwoMotionCombiner_unload, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_loaded", _wrap_TwoMotionCombiner_loaded, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_getAvatar", _wrap_TwoMotionCombiner_getAvatar, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_setStartTime", _wrap_TwoMotionCombiner_setStartTime, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_reset", _wrap_TwoMotionCombiner_reset, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_event", _wrap_TwoMotionCombiner_event, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_cleanRecursionState", _wrap_TwoMotionCombiner_cleanRecursionState, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_getMotionLength", _wrap_TwoMotionCombiner_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_isFacial", _wrap_TwoMotionCombiner_isFacial, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_isRandomAccess", _wrap_TwoMotionCombiner_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_preFrame", _wrap_TwoMotionCombiner_preFrame, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_isNull", _wrap_TwoMotionCombiner_isNull, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_getTrackType", _wrap_TwoMotionCombiner_getTrackType, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_setMotion1", _wrap_TwoMotionCombiner_setMotion1, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_setMotion2", _wrap_TwoMotionCombiner_setMotion2, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_getMotion1", _wrap_TwoMotionCombiner_getMotion1, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_getMotion2", _wrap_TwoMotionCombiner_getMotion2, METH_VARARGS, NULL},
	 { (char *)"disown_TwoMotionCombiner", _wrap_disown_TwoMotionCombiner, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_swigregister", TwoMotionCombiner_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MultiMotionCombiner", _wrap_new_MultiMotionCombiner, METH_VARARGS, NULL},
	 { (char *)"delete_MultiMotionCombiner", _wrap_delete_MultiMotionCombiner, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_clone", _wrap_MultiMotionCombiner_clone, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_getClassName", _wrap_MultiMotionCombiner_getClassName, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_castToThisType", _wrap_MultiMotionCombiner_castToThisType, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_printInfo", _wrap_MultiMotionCombiner_printInfo, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_addMotion", _wrap_MultiMotionCombiner_addMotion, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_getMotionIndex", _wrap_MultiMotionCombiner_getMotionIndex, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_getNumMotions", _wrap_MultiMotionCombiner_getNumMotions, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_getMotionByIndex", _wrap_MultiMotionCombiner_getMotionByIndex, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_getMotion", _wrap_MultiMotionCombiner_getMotion, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_removeMotionByIndex", _wrap_MultiMotionCombiner_removeMotionByIndex, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_clear", _wrap_MultiMotionCombiner_clear, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_findSub", _wrap_MultiMotionCombiner_findSub, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_findSubByType", _wrap_MultiMotionCombiner_findSubByType, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_load", _wrap_MultiMotionCombiner_load, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_unload", _wrap_MultiMotionCombiner_unload, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_loaded", _wrap_MultiMotionCombiner_loaded, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_getAvatar", _wrap_MultiMotionCombiner_getAvatar, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_event", _wrap_MultiMotionCombiner_event, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_cleanRecursionState", _wrap_MultiMotionCombiner_cleanRecursionState, METH_VARARGS, NULL},
	 { (char *)"disown_MultiMotionCombiner", _wrap_disown_MultiMotionCombiner, METH_VARARGS, NULL},
	 { (char *)"MultiMotionCombiner_swigregister", MultiMotionCombiner_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MotionMask", _wrap_new_MotionMask, METH_VARARGS, NULL},
	 { (char *)"MotionMask_setMask", _wrap_MotionMask_setMask, METH_VARARGS, NULL},
	 { (char *)"MotionMask_setAllMask", _wrap_MotionMask_setAllMask, METH_VARARGS, NULL},
	 { (char *)"MotionMask_getMask", _wrap_MotionMask_getMask, METH_VARARGS, NULL},
	 { (char *)"MotionMask_clearMask", _wrap_MotionMask_clearMask, METH_VARARGS, NULL},
	 { (char *)"delete_MotionMask", _wrap_delete_MotionMask, METH_VARARGS, NULL},
	 { (char *)"MotionMask_swigregister", MotionMask_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MaskedMotion", _wrap_new_MaskedMotion, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_isNull", _wrap_MaskedMotion_isNull, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_clone", _wrap_MaskedMotion_clone, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_getClassName", _wrap_MaskedMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_castToThisType", _wrap_MaskedMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_setMask", _wrap_MaskedMotion_setMask, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_getMask", _wrap_MaskedMotion_getMask, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_addToMask", _wrap_MaskedMotion_addToMask, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_removeFromMask", _wrap_MaskedMotion_removeFromMask, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_addAllToMask", _wrap_MaskedMotion_addAllToMask, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_removeAllFromMask", _wrap_MaskedMotion_removeAllFromMask, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_setMotionMask", _wrap_MaskedMotion_setMotionMask, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_getMotionMask", _wrap_MaskedMotion_getMotionMask, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_getFloatValueAtTimeInternal", _wrap_MaskedMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_getVecValueAtTimeInternal", _wrap_MaskedMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_getQuatValueAtTimeInternal", _wrap_MaskedMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_MaskedMotion", _wrap_delete_MaskedMotion, METH_VARARGS, NULL},
	 { (char *)"disown_MaskedMotion", _wrap_disown_MaskedMotion, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_swigregister", MaskedMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ScaleMotion", _wrap_new_ScaleMotion, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_clone", _wrap_ScaleMotion_clone, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_getClassName", _wrap_ScaleMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_castToThisType", _wrap_ScaleMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_getFloatValueAtTimeInternal", _wrap_ScaleMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_getVecValueAtTimeInternal", _wrap_ScaleMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_getQuatValueAtTimeInternal", _wrap_ScaleMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_setScaleFactor", _wrap_ScaleMotion_setScaleFactor, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_getScaleFactor", _wrap_ScaleMotion_getScaleFactor, METH_VARARGS, NULL},
	 { (char *)"delete_ScaleMotion", _wrap_delete_ScaleMotion, METH_VARARGS, NULL},
	 { (char *)"disown_ScaleMotion", _wrap_disown_ScaleMotion, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_swigregister", ScaleMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ScaleMotionSpeed", _wrap_new_ScaleMotionSpeed, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_clone", _wrap_ScaleMotionSpeed_clone, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_getClassName", _wrap_ScaleMotionSpeed_getClassName, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_castToThisType", _wrap_ScaleMotionSpeed_castToThisType, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_getMotionLength", _wrap_ScaleMotionSpeed_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_getFloatValueAtTimeInternal", _wrap_ScaleMotionSpeed_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_getVecValueAtTimeInternal", _wrap_ScaleMotionSpeed_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_getQuatValueAtTimeInternal", _wrap_ScaleMotionSpeed_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_setScaleFactor", _wrap_ScaleMotionSpeed_setScaleFactor, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_getScaleFactor", _wrap_ScaleMotionSpeed_getScaleFactor, METH_VARARGS, NULL},
	 { (char *)"delete_ScaleMotionSpeed", _wrap_delete_ScaleMotionSpeed, METH_VARARGS, NULL},
	 { (char *)"disown_ScaleMotionSpeed", _wrap_disown_ScaleMotionSpeed, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_swigregister", ScaleMotionSpeed_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ChangeMotionLength", _wrap_new_ChangeMotionLength, METH_VARARGS, NULL},
	 { (char *)"ChangeMotionLength_clone", _wrap_ChangeMotionLength_clone, METH_VARARGS, NULL},
	 { (char *)"ChangeMotionLength_getClassName", _wrap_ChangeMotionLength_getClassName, METH_VARARGS, NULL},
	 { (char *)"ChangeMotionLength_castToThisType", _wrap_ChangeMotionLength_castToThisType, METH_VARARGS, NULL},
	 { (char *)"ChangeMotionLength_setLength", _wrap_ChangeMotionLength_setLength, METH_VARARGS, NULL},
	 { (char *)"ChangeMotionLength_getLength", _wrap_ChangeMotionLength_getLength, METH_VARARGS, NULL},
	 { (char *)"ChangeMotionLength_getMotionLength", _wrap_ChangeMotionLength_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"ChangeMotionLength_setMotion", _wrap_ChangeMotionLength_setMotion, METH_VARARGS, NULL},
	 { (char *)"delete_ChangeMotionLength", _wrap_delete_ChangeMotionLength, METH_VARARGS, NULL},
	 { (char *)"disown_ChangeMotionLength", _wrap_disown_ChangeMotionLength, METH_VARARGS, NULL},
	 { (char *)"ChangeMotionLength_swigregister", ChangeMotionLength_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ScaleMotionRoot", _wrap_new_ScaleMotionRoot, METH_VARARGS, NULL},
	 { (char *)"delete_ScaleMotionRoot", _wrap_delete_ScaleMotionRoot, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_clone", _wrap_ScaleMotionRoot_clone, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_getClassName", _wrap_ScaleMotionRoot_getClassName, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_castToThisType", _wrap_ScaleMotionRoot_castToThisType, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_getFloatValueAtTimeInternal", _wrap_ScaleMotionRoot_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_getVecValueAtTimeInternal", _wrap_ScaleMotionRoot_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_getQuatValueAtTimeInternal", _wrap_ScaleMotionRoot_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_setScaleFactor", _wrap_ScaleMotionRoot_setScaleFactor, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_getScaleFactor", _wrap_ScaleMotionRoot_getScaleFactor, METH_VARARGS, NULL},
	 { (char *)"disown_ScaleMotionRoot", _wrap_disown_ScaleMotionRoot, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_swigregister", ScaleMotionRoot_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TimeOffset", _wrap_new_TimeOffset, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_clone", _wrap_TimeOffset_clone, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_getClassName", _wrap_TimeOffset_getClassName, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_castToThisType", _wrap_TimeOffset_castToThisType, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_setStartTime", _wrap_TimeOffset_setStartTime, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_getFloatValueAtTimeInternal", _wrap_TimeOffset_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_getVecValueAtTimeInternal", _wrap_TimeOffset_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_getQuatValueAtTimeInternal", _wrap_TimeOffset_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_setOffset", _wrap_TimeOffset_setOffset, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_getOffset", _wrap_TimeOffset_getOffset, METH_VARARGS, NULL},
	 { (char *)"delete_TimeOffset", _wrap_delete_TimeOffset, METH_VARARGS, NULL},
	 { (char *)"disown_TimeOffset", _wrap_disown_TimeOffset, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_swigregister", TimeOffset_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Sequence", _wrap_new_Sequence, METH_VARARGS, NULL},
	 { (char *)"Sequence_clone", _wrap_Sequence_clone, METH_VARARGS, NULL},
	 { (char *)"Sequence_getClassName", _wrap_Sequence_getClassName, METH_VARARGS, NULL},
	 { (char *)"Sequence_castToThisType", _wrap_Sequence_castToThisType, METH_VARARGS, NULL},
	 { (char *)"Sequence_setStartTime", _wrap_Sequence_setStartTime, METH_VARARGS, NULL},
	 { (char *)"Sequence_getMotionLength", _wrap_Sequence_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"Sequence_getFloatValueAtTimeInternal", _wrap_Sequence_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"Sequence_getVecValueAtTimeInternal", _wrap_Sequence_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"Sequence_getQuatValueAtTimeInternal", _wrap_Sequence_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_Sequence", _wrap_delete_Sequence, METH_VARARGS, NULL},
	 { (char *)"disown_Sequence", _wrap_disown_Sequence, METH_VARARGS, NULL},
	 { (char *)"Sequence_swigregister", Sequence_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SmoothSequence", _wrap_new_SmoothSequence, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_clone", _wrap_SmoothSequence_clone, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_getClassName", _wrap_SmoothSequence_getClassName, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_castToThisType", _wrap_SmoothSequence_castToThisType, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_create", _wrap_SmoothSequence_create, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_setMaintainY", _wrap_SmoothSequence_setMaintainY, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_setAccumulateRoot", _wrap_SmoothSequence_setAccumulateRoot, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_setMotion1", _wrap_SmoothSequence_setMotion1, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_setMotion2", _wrap_SmoothSequence_setMotion2, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_setBlendStart", _wrap_SmoothSequence_setBlendStart, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_setBlendInterval", _wrap_SmoothSequence_setBlendInterval, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_getBlendStart", _wrap_SmoothSequence_getBlendStart, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_getBlendInterval", _wrap_SmoothSequence_getBlendInterval, METH_VARARGS, NULL},
	 { (char *)"delete_SmoothSequence", _wrap_delete_SmoothSequence, METH_VARARGS, NULL},
	 { (char *)"SmoothSequence_swigregister", SmoothSequence_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MotionPosture", _wrap_new_MotionPosture, METH_VARARGS, NULL},
	 { (char *)"MotionPosture_clone", _wrap_MotionPosture_clone, METH_VARARGS, NULL},
	 { (char *)"MotionPosture_getClassName", _wrap_MotionPosture_getClassName, METH_VARARGS, NULL},
	 { (char *)"MotionPosture_castToThisType", _wrap_MotionPosture_castToThisType, METH_VARARGS, NULL},
	 { (char *)"MotionPosture_getPostureFromMotion", _wrap_MotionPosture_getPostureFromMotion, METH_VARARGS, NULL},
	 { (char *)"delete_MotionPosture", _wrap_delete_MotionPosture, METH_VARARGS, NULL},
	 { (char *)"disown_MotionPosture", _wrap_disown_MotionPosture, METH_VARARGS, NULL},
	 { (char *)"MotionPosture_swigregister", MotionPosture_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AvatarPosture", _wrap_new_AvatarPosture, METH_VARARGS, NULL},
	 { (char *)"AvatarPosture_clone", _wrap_AvatarPosture_clone, METH_VARARGS, NULL},
	 { (char *)"AvatarPosture_getClassName", _wrap_AvatarPosture_getClassName, METH_VARARGS, NULL},
	 { (char *)"AvatarPosture_castToThisType", _wrap_AvatarPosture_castToThisType, METH_VARARGS, NULL},
	 { (char *)"AvatarPosture_load", _wrap_AvatarPosture_load, METH_VARARGS, NULL},
	 { (char *)"AvatarPosture_getPostureFromAvatar", _wrap_AvatarPosture_getPostureFromAvatar, METH_VARARGS, NULL},
	 { (char *)"delete_AvatarPosture", _wrap_delete_AvatarPosture, METH_VARARGS, NULL},
	 { (char *)"disown_AvatarPosture", _wrap_disown_AvatarPosture, METH_VARARGS, NULL},
	 { (char *)"AvatarPosture_swigregister", AvatarPosture_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PostureBlend", _wrap_new_PostureBlend, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_clone", _wrap_PostureBlend_clone, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_getClassName", _wrap_PostureBlend_getClassName, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_castToThisType", _wrap_PostureBlend_castToThisType, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_setBlendInterval", _wrap_PostureBlend_setBlendInterval, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_getBlendInterval", _wrap_PostureBlend_getBlendInterval, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_setAccumulateRoot", _wrap_PostureBlend_setAccumulateRoot, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_getAccumulateRoot", _wrap_PostureBlend_getAccumulateRoot, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_reset", _wrap_PostureBlend_reset, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_reblend", _wrap_PostureBlend_reblend, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_setMotion", _wrap_PostureBlend_setMotion, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_getMotion", _wrap_PostureBlend_getMotion, METH_VARARGS, NULL},
	 { (char *)"delete_PostureBlend", _wrap_delete_PostureBlend, METH_VARARGS, NULL},
	 { (char *)"disown_PostureBlend", _wrap_disown_PostureBlend, METH_VARARGS, NULL},
	 { (char *)"PostureBlend_swigregister", PostureBlend_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Reposition", _wrap_new_Reposition, METH_VARARGS, NULL},
	 { (char *)"Reposition_clone", _wrap_Reposition_clone, METH_VARARGS, NULL},
	 { (char *)"Reposition_getClassName", _wrap_Reposition_getClassName, METH_VARARGS, NULL},
	 { (char *)"Reposition_castToThisType", _wrap_Reposition_castToThisType, METH_VARARGS, NULL},
	 { (char *)"Reposition_setStartPosition", _wrap_Reposition_setStartPosition, METH_VARARGS, NULL},
	 { (char *)"Reposition_setStartOrientation", _wrap_Reposition_setStartOrientation, METH_VARARGS, NULL},
	 { (char *)"Reposition_setPosOffset", _wrap_Reposition_setPosOffset, METH_VARARGS, NULL},
	 { (char *)"Reposition_getPosOffset", _wrap_Reposition_getPosOffset, METH_VARARGS, NULL},
	 { (char *)"Reposition_getStartPosition", _wrap_Reposition_getStartPosition, METH_VARARGS, NULL},
	 { (char *)"Reposition_getStartOrientation", _wrap_Reposition_getStartOrientation, METH_VARARGS, NULL},
	 { (char *)"Reposition_setStartFromMotion", _wrap_Reposition_setStartFromMotion, METH_VARARGS, NULL},
	 { (char *)"Reposition_setMotion", _wrap_Reposition_setMotion, METH_VARARGS, NULL},
	 { (char *)"Reposition_setMaintainY", _wrap_Reposition_setMaintainY, METH_VARARGS, NULL},
	 { (char *)"Reposition_isNull", _wrap_Reposition_isNull, METH_VARARGS, NULL},
	 { (char *)"Reposition_getTrackType", _wrap_Reposition_getTrackType, METH_VARARGS, NULL},
	 { (char *)"Reposition_getFloatValueAtTimeInternal", _wrap_Reposition_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"Reposition_getVecValueAtTimeInternal", _wrap_Reposition_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"Reposition_getQuatValueAtTimeInternal", _wrap_Reposition_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_Reposition", _wrap_delete_Reposition, METH_VARARGS, NULL},
	 { (char *)"disown_Reposition", _wrap_disown_Reposition, METH_VARARGS, NULL},
	 { (char *)"Reposition_swigregister", Reposition_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LoopMotion", _wrap_new_LoopMotion, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_clone", _wrap_LoopMotion_clone, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_getClassName", _wrap_LoopMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_castToThisType", _wrap_LoopMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_getMotionLength", _wrap_LoopMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_setEndTime", _wrap_LoopMotion_setEndTime, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_preFrame", _wrap_LoopMotion_preFrame, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_reset", _wrap_LoopMotion_reset, METH_VARARGS, NULL},
	 { (char *)"delete_LoopMotion", _wrap_delete_LoopMotion, METH_VARARGS, NULL},
	 { (char *)"disown_LoopMotion", _wrap_disown_LoopMotion, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_swigregister", LoopMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SmoothLoop", _wrap_new_SmoothLoop, METH_VARARGS, NULL},
	 { (char *)"SmoothLoop_clone", _wrap_SmoothLoop_clone, METH_VARARGS, NULL},
	 { (char *)"SmoothLoop_getClassName", _wrap_SmoothLoop_getClassName, METH_VARARGS, NULL},
	 { (char *)"SmoothLoop_castToThisType", _wrap_SmoothLoop_castToThisType, METH_VARARGS, NULL},
	 { (char *)"SmoothLoop_setMotion", _wrap_SmoothLoop_setMotion, METH_VARARGS, NULL},
	 { (char *)"SmoothLoop_getMotion", _wrap_SmoothLoop_getMotion, METH_VARARGS, NULL},
	 { (char *)"SmoothLoop_setAccumulateRoot", _wrap_SmoothLoop_setAccumulateRoot, METH_VARARGS, NULL},
	 { (char *)"SmoothLoop_getAccumulateRoot", _wrap_SmoothLoop_getAccumulateRoot, METH_VARARGS, NULL},
	 { (char *)"SmoothLoop_setBlendInterval", _wrap_SmoothLoop_setBlendInterval, METH_VARARGS, NULL},
	 { (char *)"SmoothLoop_getBlendInterval", _wrap_SmoothLoop_getBlendInterval, METH_VARARGS, NULL},
	 { (char *)"delete_SmoothLoop", _wrap_delete_SmoothLoop, METH_VARARGS, NULL},
	 { (char *)"SmoothLoop_swigregister", SmoothLoop_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RandomTimingsMotion", _wrap_new_RandomTimingsMotion, METH_VARARGS, NULL},
	 { (char *)"delete_RandomTimingsMotion", _wrap_delete_RandomTimingsMotion, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsMotion_clone", _wrap_RandomTimingsMotion_clone, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsMotion_getClassName", _wrap_RandomTimingsMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsMotion_castToThisType", _wrap_RandomTimingsMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsMotion_setTimingParams", _wrap_RandomTimingsMotion_setTimingParams, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsMotion_setMinTimeScale", _wrap_RandomTimingsMotion_setMinTimeScale, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsMotion_getMinTimeScale", _wrap_RandomTimingsMotion_getMinTimeScale, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsMotion_setMaxTimeScale", _wrap_RandomTimingsMotion_setMaxTimeScale, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsMotion_getMaxTimeScale", _wrap_RandomTimingsMotion_getMaxTimeScale, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsMotion_reset", _wrap_RandomTimingsMotion_reset, METH_VARARGS, NULL},
	 { (char *)"disown_RandomTimingsMotion", _wrap_disown_RandomTimingsMotion, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsMotion_swigregister", RandomTimingsMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AvatarPostureBlend", _wrap_new_AvatarPostureBlend, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_clone", _wrap_AvatarPostureBlend_clone, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_getClassName", _wrap_AvatarPostureBlend_getClassName, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_castToThisType", _wrap_AvatarPostureBlend_castToThisType, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_load", _wrap_AvatarPostureBlend_load, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_setBlendInterval", _wrap_AvatarPostureBlend_setBlendInterval, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_getBlendInterval", _wrap_AvatarPostureBlend_getBlendInterval, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_isNull", _wrap_AvatarPostureBlend_isNull, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_setMotion", _wrap_AvatarPostureBlend_setMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_getMotion", _wrap_AvatarPostureBlend_getMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_repositionRelative", _wrap_AvatarPostureBlend_repositionRelative, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_repositionAbsolute", _wrap_AvatarPostureBlend_repositionAbsolute, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_reblend", _wrap_AvatarPostureBlend_reblend, METH_VARARGS, NULL},
	 { (char *)"delete_AvatarPostureBlend", _wrap_delete_AvatarPostureBlend, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_swigregister", AvatarPostureBlend_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_BlendBetween", _wrap_new_BlendBetween, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_clone", _wrap_BlendBetween_clone, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_getClassName", _wrap_BlendBetween_getClassName, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_castToThisType", _wrap_BlendBetween_castToThisType, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_getFloatValueAtTimeInternal", _wrap_BlendBetween_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_getVecValueAtTimeInternal", _wrap_BlendBetween_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_getQuatValueAtTimeInternal", _wrap_BlendBetween_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_setBlendFactor", _wrap_BlendBetween_setBlendFactor, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_getBlendFactor", _wrap_BlendBetween_getBlendFactor, METH_VARARGS, NULL},
	 { (char *)"delete_BlendBetween", _wrap_delete_BlendBetween, METH_VARARGS, NULL},
	 { (char *)"disown_BlendBetween", _wrap_disown_BlendBetween, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_swigregister", BlendBetween_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MotionAdder", _wrap_new_MotionAdder, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_clone", _wrap_MotionAdder_clone, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_getClassName", _wrap_MotionAdder_getClassName, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_castToThisType", _wrap_MotionAdder_castToThisType, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_getFloatValueAtTimeInternal", _wrap_MotionAdder_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_getVecValueAtTimeInternal", _wrap_MotionAdder_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_getQuatValueAtTimeInternal", _wrap_MotionAdder_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_MotionAdder", _wrap_delete_MotionAdder, METH_VARARGS, NULL},
	 { (char *)"disown_MotionAdder", _wrap_disown_MotionAdder, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_swigregister", MotionAdder_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Subtract", _wrap_new_Subtract, METH_VARARGS, NULL},
	 { (char *)"Subtract_clone", _wrap_Subtract_clone, METH_VARARGS, NULL},
	 { (char *)"Subtract_getClassName", _wrap_Subtract_getClassName, METH_VARARGS, NULL},
	 { (char *)"Subtract_castToThisType", _wrap_Subtract_castToThisType, METH_VARARGS, NULL},
	 { (char *)"Subtract_getFloatValueAtTimeInternal", _wrap_Subtract_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"Subtract_getVecValueAtTimeInternal", _wrap_Subtract_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"Subtract_getQuatValueAtTimeInternal", _wrap_Subtract_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_Subtract", _wrap_delete_Subtract, METH_VARARGS, NULL},
	 { (char *)"disown_Subtract", _wrap_disown_Subtract, METH_VARARGS, NULL},
	 { (char *)"Subtract_swigregister", Subtract_swigregister, METH_VARARGS, NULL},
	 { (char *)"TransitionFunction_eval", _wrap_TransitionFunction_eval, METH_VARARGS, NULL},
	 { (char *)"delete_TransitionFunction", _wrap_delete_TransitionFunction, METH_VARARGS, NULL},
	 { (char *)"TransitionFunction_swigregister", TransitionFunction_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LinearTransition", _wrap_new_LinearTransition, METH_VARARGS, NULL},
	 { (char *)"LinearTransition_eval", _wrap_LinearTransition_eval, METH_VARARGS, NULL},
	 { (char *)"delete_LinearTransition", _wrap_delete_LinearTransition, METH_VARARGS, NULL},
	 { (char *)"LinearTransition_swigregister", LinearTransition_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SmoothTransition", _wrap_new_SmoothTransition, METH_VARARGS, NULL},
	 { (char *)"SmoothTransition_eval", _wrap_SmoothTransition_eval, METH_VARARGS, NULL},
	 { (char *)"delete_SmoothTransition", _wrap_delete_SmoothTransition, METH_VARARGS, NULL},
	 { (char *)"SmoothTransition_swigregister", SmoothTransition_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MotionTransition", _wrap_new_MotionTransition, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_clone", _wrap_MotionTransition_clone, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_getClassName", _wrap_MotionTransition_getClassName, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_castToThisType", _wrap_MotionTransition_castToThisType, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_setTransitionFunction", _wrap_MotionTransition_setTransitionFunction, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_setTransitionTime1", _wrap_MotionTransition_setTransitionTime1, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_getTransitionTime1", _wrap_MotionTransition_getTransitionTime1, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_setTransitionTime2", _wrap_MotionTransition_setTransitionTime2, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_getTransitionTime2", _wrap_MotionTransition_getTransitionTime2, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_setWindow", _wrap_MotionTransition_setWindow, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_getWindow", _wrap_MotionTransition_getWindow, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_setMotion1", _wrap_MotionTransition_setMotion1, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_setStartTime", _wrap_MotionTransition_setStartTime, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_getMotionLength", _wrap_MotionTransition_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_getFloatValueAtTimeInternal", _wrap_MotionTransition_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_getVecValueAtTimeInternal", _wrap_MotionTransition_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_getQuatValueAtTimeInternal", _wrap_MotionTransition_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_MotionTransition", _wrap_delete_MotionTransition, METH_VARARGS, NULL},
	 { (char *)"MotionTransition_swigregister", MotionTransition_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ChoiceMotion", _wrap_new_ChoiceMotion, METH_VARARGS, NULL},
	 { (char *)"delete_ChoiceMotion", _wrap_delete_ChoiceMotion, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_clone", _wrap_ChoiceMotion_clone, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getClassName", _wrap_ChoiceMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_castToThisType", _wrap_ChoiceMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_setSmooth", _wrap_ChoiceMotion_setSmooth, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getSmooth", _wrap_ChoiceMotion_getSmooth, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_setResetTime", _wrap_ChoiceMotion_setResetTime, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getResetTime", _wrap_ChoiceMotion_getResetTime, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_setWindowLength", _wrap_ChoiceMotion_setWindowLength, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getWindowLength", _wrap_ChoiceMotion_getWindowLength, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_setResetOnEvent", _wrap_ChoiceMotion_setResetOnEvent, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getResetOnEvent", _wrap_ChoiceMotion_getResetOnEvent, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_setAccumulateRoot", _wrap_ChoiceMotion_setAccumulateRoot, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getAccumulateRoot", _wrap_ChoiceMotion_getAccumulateRoot, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_printInfo", _wrap_ChoiceMotion_printInfo, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getMotionLength", _wrap_ChoiceMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_addMotion", _wrap_ChoiceMotion_addMotion, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getMotionIndex", _wrap_ChoiceMotion_getMotionIndex, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getNumMotions", _wrap_ChoiceMotion_getNumMotions, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getMotionByIndex", _wrap_ChoiceMotion_getMotionByIndex, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getLeafMotion", _wrap_ChoiceMotion_getLeafMotion, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getMotion", _wrap_ChoiceMotion_getMotion, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_removeMotionByIndex", _wrap_ChoiceMotion_removeMotionByIndex, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_clear", _wrap_ChoiceMotion_clear, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_findSub", _wrap_ChoiceMotion_findSub, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_findSubByType", _wrap_ChoiceMotion_findSubByType, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_cleanRecursionState", _wrap_ChoiceMotion_cleanRecursionState, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_setChoice", _wrap_ChoiceMotion_setChoice, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getCurrentChoice", _wrap_ChoiceMotion_getCurrentChoice, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_makeChoice", _wrap_ChoiceMotion_makeChoice, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_event", _wrap_ChoiceMotion_event, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_getEventNames", _wrap_ChoiceMotion_getEventNames, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_reset", _wrap_ChoiceMotion_reset, METH_VARARGS, NULL},
	 { (char *)"disown_ChoiceMotion", _wrap_disown_ChoiceMotion, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotion_swigregister", ChoiceMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ChoiceMotionWithDefault", _wrap_new_ChoiceMotionWithDefault, METH_VARARGS, NULL},
	 { (char *)"delete_ChoiceMotionWithDefault", _wrap_delete_ChoiceMotionWithDefault, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotionWithDefault_clone", _wrap_ChoiceMotionWithDefault_clone, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotionWithDefault_getClassName", _wrap_ChoiceMotionWithDefault_getClassName, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotionWithDefault_castToThisType", _wrap_ChoiceMotionWithDefault_castToThisType, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotionWithDefault_reset", _wrap_ChoiceMotionWithDefault_reset, METH_VARARGS, NULL},
	 { (char *)"ChoiceMotionWithDefault_swigregister", ChoiceMotionWithDefault_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SequentialChoiceMotion", _wrap_new_SequentialChoiceMotion, METH_VARARGS, NULL},
	 { (char *)"delete_SequentialChoiceMotion", _wrap_delete_SequentialChoiceMotion, METH_VARARGS, NULL},
	 { (char *)"SequentialChoiceMotion_clone", _wrap_SequentialChoiceMotion_clone, METH_VARARGS, NULL},
	 { (char *)"SequentialChoiceMotion_getClassName", _wrap_SequentialChoiceMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"SequentialChoiceMotion_castToThisType", _wrap_SequentialChoiceMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"SequentialChoiceMotion_makeChoice", _wrap_SequentialChoiceMotion_makeChoice, METH_VARARGS, NULL},
	 { (char *)"SequentialChoiceMotion_swigregister", SequentialChoiceMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RandomChoiceMotion", _wrap_new_RandomChoiceMotion, METH_VARARGS, NULL},
	 { (char *)"delete_RandomChoiceMotion", _wrap_delete_RandomChoiceMotion, METH_VARARGS, NULL},
	 { (char *)"RandomChoiceMotion_clone", _wrap_RandomChoiceMotion_clone, METH_VARARGS, NULL},
	 { (char *)"RandomChoiceMotion_getClassName", _wrap_RandomChoiceMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"RandomChoiceMotion_castToThisType", _wrap_RandomChoiceMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"RandomChoiceMotion_convertTo", _wrap_RandomChoiceMotion_convertTo, METH_VARARGS, NULL},
	 { (char *)"RandomChoiceMotion_addMotion", _wrap_RandomChoiceMotion_addMotion, METH_VARARGS, NULL},
	 { (char *)"RandomChoiceMotion_setProbability", _wrap_RandomChoiceMotion_setProbability, METH_VARARGS, NULL},
	 { (char *)"RandomChoiceMotion_setMotionProb", _wrap_RandomChoiceMotion_setMotionProb, METH_VARARGS, NULL},
	 { (char *)"RandomChoiceMotion_makeChoice", _wrap_RandomChoiceMotion_makeChoice, METH_VARARGS, NULL},
	 { (char *)"RandomChoiceMotion_swigregister", RandomChoiceMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PointAt", _wrap_new_PointAt, METH_VARARGS, NULL},
	 { (char *)"PointAt_clone", _wrap_PointAt_clone, METH_VARARGS, NULL},
	 { (char *)"PointAt_getClassName", _wrap_PointAt_getClassName, METH_VARARGS, NULL},
	 { (char *)"PointAt_castToThisType", _wrap_PointAt_castToThisType, METH_VARARGS, NULL},
	 { (char *)"PointAt_isRandomAccess", _wrap_PointAt_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"PointAt_setTarget", _wrap_PointAt_setTarget, METH_VARARGS, NULL},
	 { (char *)"PointAt_getTarget", _wrap_PointAt_getTarget, METH_VARARGS, NULL},
	 { (char *)"PointAt_setLocal", _wrap_PointAt_setLocal, METH_VARARGS, NULL},
	 { (char *)"PointAt_getLocal", _wrap_PointAt_getLocal, METH_VARARGS, NULL},
	 { (char *)"PointAt_setJointId", _wrap_PointAt_setJointId, METH_VARARGS, NULL},
	 { (char *)"PointAt_getJointId", _wrap_PointAt_getJointId, METH_VARARGS, NULL},
	 { (char *)"PointAt_setTargetJointId", _wrap_PointAt_setTargetJointId, METH_VARARGS, NULL},
	 { (char *)"PointAt_getTargetJointId", _wrap_PointAt_getTargetJointId, METH_VARARGS, NULL},
	 { (char *)"PointAt_setForwardDirection", _wrap_PointAt_setForwardDirection, METH_VARARGS, NULL},
	 { (char *)"PointAt_getForwardDirection", _wrap_PointAt_getForwardDirection, METH_VARARGS, NULL},
	 { (char *)"PointAt_isNull", _wrap_PointAt_isNull, METH_VARARGS, NULL},
	 { (char *)"PointAt_getTrackType", _wrap_PointAt_getTrackType, METH_VARARGS, NULL},
	 { (char *)"PointAt_getFloatValueAtTimeInternal", _wrap_PointAt_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"PointAt_getVecValueAtTimeInternal", _wrap_PointAt_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"PointAt_getQuatValueAtTimeInternal", _wrap_PointAt_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_PointAt", _wrap_delete_PointAt, METH_VARARGS, NULL},
	 { (char *)"disown_PointAt", _wrap_disown_PointAt, METH_VARARGS, NULL},
	 { (char *)"PointAt_swigregister", PointAt_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Proxemics", _wrap_new_Proxemics, METH_VARARGS, NULL},
	 { (char *)"delete_Proxemics", _wrap_delete_Proxemics, METH_VARARGS, NULL},
	 { (char *)"Proxemics_clone", _wrap_Proxemics_clone, METH_VARARGS, NULL},
	 { (char *)"Proxemics_getClassName", _wrap_Proxemics_getClassName, METH_VARARGS, NULL},
	 { (char *)"Proxemics_castToThisType", _wrap_Proxemics_castToThisType, METH_VARARGS, NULL},
	 { (char *)"Proxemics_load", _wrap_Proxemics_load, METH_VARARGS, NULL},
	 { (char *)"Proxemics_setDistance", _wrap_Proxemics_setDistance, METH_VARARGS, NULL},
	 { (char *)"Proxemics_getDistance", _wrap_Proxemics_getDistance, METH_VARARGS, NULL},
	 { (char *)"Proxemics_setThreshold", _wrap_Proxemics_setThreshold, METH_VARARGS, NULL},
	 { (char *)"Proxemics_getThreshold", _wrap_Proxemics_getThreshold, METH_VARARGS, NULL},
	 { (char *)"Proxemics_setAngleThreshold", _wrap_Proxemics_setAngleThreshold, METH_VARARGS, NULL},
	 { (char *)"Proxemics_getAngleThreshold", _wrap_Proxemics_getAngleThreshold, METH_VARARGS, NULL},
	 { (char *)"Proxemics_turnOff", _wrap_Proxemics_turnOff, METH_VARARGS, NULL},
	 { (char *)"Proxemics_setMotionFunction", _wrap_Proxemics_setMotionFunction, METH_VARARGS, NULL},
	 { (char *)"Proxemics_setOtherPosition", _wrap_Proxemics_setOtherPosition, METH_VARARGS, NULL},
	 { (char *)"Proxemics_addAvatar", _wrap_Proxemics_addAvatar, METH_VARARGS, NULL},
	 { (char *)"Proxemics_removeAvatar", _wrap_Proxemics_removeAvatar, METH_VARARGS, NULL},
	 { (char *)"Proxemics_removeAllAvatars", _wrap_Proxemics_removeAllAvatars, METH_VARARGS, NULL},
	 { (char *)"Proxemics_reset", _wrap_Proxemics_reset, METH_VARARGS, NULL},
	 { (char *)"Proxemics_swigregister", Proxemics_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LookAtMotion", _wrap_new_LookAtMotion, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_clone", _wrap_LookAtMotion_clone, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getClassName", _wrap_LookAtMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_castToThisType", _wrap_LookAtMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_isFacial", _wrap_LookAtMotion_isFacial, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_isRandomAccess", _wrap_LookAtMotion_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_load", _wrap_LookAtMotion_load, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_reblend", _wrap_LookAtMotion_reblend, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setTarget", _wrap_LookAtMotion_setTarget, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getTargetName", _wrap_LookAtMotion_getTargetName, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setHeadActive", _wrap_LookAtMotion_setHeadActive, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setBodyActive", _wrap_LookAtMotion_setBodyActive, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setTurnBodyVertical", _wrap_LookAtMotion_setTurnBodyVertical, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setTurnBodyFull", _wrap_LookAtMotion_setTurnBodyFull, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setLeanTowards", _wrap_LookAtMotion_setLeanTowards, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setEyesLimit", _wrap_LookAtMotion_setEyesLimit, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setHeadBodyLimit", _wrap_LookAtMotion_setHeadBodyLimit, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setEyesMorphAngle", _wrap_LookAtMotion_setEyesMorphAngle, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setEndTime", _wrap_LookAtMotion_setEndTime, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getMotionLength", _wrap_LookAtMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_isNull", _wrap_LookAtMotion_isNull, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_isNullFacial", _wrap_LookAtMotion_isNullFacial, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getTrackType", _wrap_LookAtMotion_getTrackType, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_canLookAt", _wrap_LookAtMotion_canLookAt, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getFloatValueAtTimeInternal", _wrap_LookAtMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getVecValueAtTimeInternal", _wrap_LookAtMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getQuatValueAtTimeInternal", _wrap_LookAtMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_LookAtMotion", _wrap_delete_LookAtMotion, METH_VARARGS, NULL},
	 { (char *)"disown_LookAtMotion", _wrap_disown_LookAtMotion, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_swigregister", LookAtMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LookAtToFacial", _wrap_new_LookAtToFacial, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_clone", _wrap_LookAtToFacial_clone, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_load", _wrap_LookAtToFacial_load, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_isFacial", _wrap_LookAtToFacial_isFacial, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_isNull", _wrap_LookAtToFacial_isNull, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_getFloatValueAtTimeInternal", _wrap_LookAtToFacial_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_getVecValueAtTimeInternal", _wrap_LookAtToFacial_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_getQuatValueAtTimeInternal", _wrap_LookAtToFacial_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_LookAtToFacial", _wrap_delete_LookAtToFacial, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_swigregister", LookAtToFacial_swigregister, METH_VARARGS, NULL},
	 { (char *)"flagStruct_headActive_set", _wrap_flagStruct_headActive_set, METH_VARARGS, NULL},
	 { (char *)"flagStruct_headActive_get", _wrap_flagStruct_headActive_get, METH_VARARGS, NULL},
	 { (char *)"flagStruct_bodyActive_set", _wrap_flagStruct_bodyActive_set, METH_VARARGS, NULL},
	 { (char *)"flagStruct_bodyActive_get", _wrap_flagStruct_bodyActive_get, METH_VARARGS, NULL},
	 { (char *)"flagStruct_turnBodyVertical_set", _wrap_flagStruct_turnBodyVertical_set, METH_VARARGS, NULL},
	 { (char *)"flagStruct_turnBodyVertical_get", _wrap_flagStruct_turnBodyVertical_get, METH_VARARGS, NULL},
	 { (char *)"flagStruct_turnBodyFull_set", _wrap_flagStruct_turnBodyFull_set, METH_VARARGS, NULL},
	 { (char *)"flagStruct_turnBodyFull_get", _wrap_flagStruct_turnBodyFull_get, METH_VARARGS, NULL},
	 { (char *)"flagStruct_leanTowards_set", _wrap_flagStruct_leanTowards_set, METH_VARARGS, NULL},
	 { (char *)"flagStruct_leanTowards_get", _wrap_flagStruct_leanTowards_get, METH_VARARGS, NULL},
	 { (char *)"new_flagStruct", _wrap_new_flagStruct, METH_VARARGS, NULL},
	 { (char *)"delete_flagStruct", _wrap_delete_flagStruct, METH_VARARGS, NULL},
	 { (char *)"flagStruct_swigregister", flagStruct_swigregister, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_avatar_set", _wrap_AvatarTargetStruct_avatar_set, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_avatar_get", _wrap_AvatarTargetStruct_avatar_get, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_joint_set", _wrap_AvatarTargetStruct_joint_set, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_joint_get", _wrap_AvatarTargetStruct_joint_get, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_flags_set", _wrap_AvatarTargetStruct_flags_set, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_flags_get", _wrap_AvatarTargetStruct_flags_get, METH_VARARGS, NULL},
	 { (char *)"new_AvatarTargetStruct", _wrap_new_AvatarTargetStruct, METH_VARARGS, NULL},
	 { (char *)"delete_AvatarTargetStruct", _wrap_delete_AvatarTargetStruct, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_swigregister", AvatarTargetStruct_swigregister, METH_VARARGS, NULL},
	 { (char *)"ObjectTargetStruct_object_set", _wrap_ObjectTargetStruct_object_set, METH_VARARGS, NULL},
	 { (char *)"ObjectTargetStruct_object_get", _wrap_ObjectTargetStruct_object_get, METH_VARARGS, NULL},
	 { (char *)"ObjectTargetStruct_flags_set", _wrap_ObjectTargetStruct_flags_set, METH_VARARGS, NULL},
	 { (char *)"ObjectTargetStruct_flags_get", _wrap_ObjectTargetStruct_flags_get, METH_VARARGS, NULL},
	 { (char *)"new_ObjectTargetStruct", _wrap_new_ObjectTargetStruct, METH_VARARGS, NULL},
	 { (char *)"delete_ObjectTargetStruct", _wrap_delete_ObjectTargetStruct, METH_VARARGS, NULL},
	 { (char *)"ObjectTargetStruct_swigregister", ObjectTargetStruct_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RandomGazeMotion", _wrap_new_RandomGazeMotion, METH_VARARGS, NULL},
	 { (char *)"delete_RandomGazeMotion", _wrap_delete_RandomGazeMotion, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_clone", _wrap_RandomGazeMotion_clone, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_getClassName", _wrap_RandomGazeMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_castToThisType", _wrap_RandomGazeMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_clearDirectionTable", _wrap_RandomGazeMotion_clearDirectionTable, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_addDirection", _wrap_RandomGazeMotion_addDirection, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_normaliseDirectionTable", _wrap_RandomGazeMotion_normaliseDirectionTable, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_addAvatarTarget", _wrap_RandomGazeMotion_addAvatarTarget, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_addObjectTarget", _wrap_RandomGazeMotion_addObjectTarget, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setTargetFlags", _wrap_RandomGazeMotion_setTargetFlags, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setGazeParams", _wrap_RandomGazeMotion_setGazeParams, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setLookAtLocationProb", _wrap_RandomGazeMotion_setLookAtLocationProb, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setMeanGazeLength", _wrap_RandomGazeMotion_setMeanGazeLength, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setEyesLimit", _wrap_RandomGazeMotion_setEyesLimit, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setHeadBodyLimit", _wrap_RandomGazeMotion_setHeadBodyLimit, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setEyesMorphAngle", _wrap_RandomGazeMotion_setEyesMorphAngle, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_randomLocation", _wrap_RandomGazeMotion_randomLocation, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_lookAt", _wrap_RandomGazeMotion_lookAt, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_reblend", _wrap_RandomGazeMotion_reblend, METH_VARARGS, NULL},
	 { (char *)"disown_RandomGazeMotion", _wrap_disown_RandomGazeMotion, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_swigregister", RandomGazeMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ZeroMotion", _wrap_new_ZeroMotion, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_clone", _wrap_ZeroMotion_clone, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_getClassName", _wrap_ZeroMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_castToThisType", _wrap_ZeroMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_isFacial", _wrap_ZeroMotion_isFacial, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_isRandomAccess", _wrap_ZeroMotion_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_getMotionLength", _wrap_ZeroMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_isNull", _wrap_ZeroMotion_isNull, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_getTrackType", _wrap_ZeroMotion_getTrackType, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_getFloatValueAtTimeInternal", _wrap_ZeroMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_getVecValueAtTimeInternal", _wrap_ZeroMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_getQuatValueAtTimeInternal", _wrap_ZeroMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_ZeroMotion", _wrap_delete_ZeroMotion, METH_VARARGS, NULL},
	 { (char *)"disown_ZeroMotion", _wrap_disown_ZeroMotion, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_swigregister", ZeroMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MotionSaver", _wrap_new_MotionSaver, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_clone", _wrap_MotionSaver_clone, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_getClassName", _wrap_MotionSaver_getClassName, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_castToThisType", _wrap_MotionSaver_castToThisType, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_setMotion", _wrap_MotionSaver_setMotion, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_getFloatValueAtTimeInternal", _wrap_MotionSaver_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_getVecValueAtTimeInternal", _wrap_MotionSaver_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_getQuatValueAtTimeInternal", _wrap_MotionSaver_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_collectFrames", _wrap_MotionSaver_collectFrames, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_save", _wrap_MotionSaver_save, METH_VARARGS, NULL},
	 { (char *)"delete_MotionSaver", _wrap_delete_MotionSaver, METH_VARARGS, NULL},
	 { (char *)"disown_MotionSaver", _wrap_disown_MotionSaver, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_swigregister", MotionSaver_swigregister, METH_VARARGS, NULL},
	 { (char *)"MotionParser_editMotion", _wrap_MotionParser_editMotion, METH_VARARGS, NULL},
	 { (char *)"MotionParser_editAvatarMotion", _wrap_MotionParser_editAvatarMotion, METH_VARARGS, NULL},
	 { (char *)"MotionParser_parseMotion", _wrap_MotionParser_parseMotion, METH_VARARGS, NULL},
	 { (char *)"MotionParser_addMotionCommand", _wrap_MotionParser_addMotionCommand, METH_VARARGS, NULL},
	 { (char *)"MotionParser_getMotionCommand", _wrap_MotionParser_getMotionCommand, METH_VARARGS, NULL},
	 { (char *)"MotionParser_setUpMotionCommands", _wrap_MotionParser_setUpMotionCommands, METH_VARARGS, NULL},
	 { (char *)"delete_MotionParser", _wrap_delete_MotionParser, METH_VARARGS, NULL},
	 { (char *)"MotionParser_swigregister", MotionParser_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SubMotion", _wrap_new_SubMotion, METH_VARARGS, NULL},
	 { (char *)"SubMotion_clone", _wrap_SubMotion_clone, METH_VARARGS, NULL},
	 { (char *)"SubMotion_getClassName", _wrap_SubMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"SubMotion_castToThisType", _wrap_SubMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"SubMotion_getMotionLength", _wrap_SubMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"SubMotion_setStart", _wrap_SubMotion_setStart, METH_VARARGS, NULL},
	 { (char *)"SubMotion_setEnd", _wrap_SubMotion_setEnd, METH_VARARGS, NULL},
	 { (char *)"SubMotion_getStart", _wrap_SubMotion_getStart, METH_VARARGS, NULL},
	 { (char *)"SubMotion_getEnd", _wrap_SubMotion_getEnd, METH_VARARGS, NULL},
	 { (char *)"SubMotion_getFloatValueAtTimeInternal", _wrap_SubMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"SubMotion_getVecValueAtTimeInternal", _wrap_SubMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"SubMotion_getQuatValueAtTimeInternal", _wrap_SubMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_SubMotion", _wrap_delete_SubMotion, METH_VARARGS, NULL},
	 { (char *)"disown_SubMotion", _wrap_disown_SubMotion, METH_VARARGS, NULL},
	 { (char *)"SubMotion_swigregister", SubMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TimeWarp", _wrap_new_TimeWarp, METH_VARARGS, NULL},
	 { (char *)"TimeWarp_clone", _wrap_TimeWarp_clone, METH_VARARGS, NULL},
	 { (char *)"TimeWarp_getClassName", _wrap_TimeWarp_getClassName, METH_VARARGS, NULL},
	 { (char *)"TimeWarp_castToThisType", _wrap_TimeWarp_castToThisType, METH_VARARGS, NULL},
	 { (char *)"TimeWarp_getMotionLength", _wrap_TimeWarp_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"TimeWarp_getFloatValueAtTimeInternal", _wrap_TimeWarp_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TimeWarp_getVecValueAtTimeInternal", _wrap_TimeWarp_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TimeWarp_getQuatValueAtTimeInternal", _wrap_TimeWarp_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TimeWarp_setWarp", _wrap_TimeWarp_setWarp, METH_VARARGS, NULL},
	 { (char *)"delete_TimeWarp", _wrap_delete_TimeWarp, METH_VARARGS, NULL},
	 { (char *)"disown_TimeWarp", _wrap_disown_TimeWarp, METH_VARARGS, NULL},
	 { (char *)"TimeWarp_swigregister", TimeWarp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DiadicGazeMotion", _wrap_new_DiadicGazeMotion, METH_VARARGS, NULL},
	 { (char *)"delete_DiadicGazeMotion", _wrap_delete_DiadicGazeMotion, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_clone", _wrap_DiadicGazeMotion_clone, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_getClassName", _wrap_DiadicGazeMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_castToThisType", _wrap_DiadicGazeMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_setTalking", _wrap_DiadicGazeMotion_setTalking, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_setTalkingLookAt", _wrap_DiadicGazeMotion_setTalkingLookAt, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_setTalkingLookAway", _wrap_DiadicGazeMotion_setTalkingLookAway, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_setListeningLookAt", _wrap_DiadicGazeMotion_setListeningLookAt, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_setListeningLookAway", _wrap_DiadicGazeMotion_setListeningLookAway, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_setNeitherLookAt", _wrap_DiadicGazeMotion_setNeitherLookAt, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_setNeitherLookAway", _wrap_DiadicGazeMotion_setNeitherLookAway, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_setGazeFollow", _wrap_DiadicGazeMotion_setGazeFollow, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_event", _wrap_DiadicGazeMotion_event, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_getEventNames", _wrap_DiadicGazeMotion_getEventNames, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_setOther", _wrap_DiadicGazeMotion_setOther, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_getOther", _wrap_DiadicGazeMotion_getOther, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_setOtherPosition", _wrap_DiadicGazeMotion_setOtherPosition, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_addGazeFollowTarget", _wrap_DiadicGazeMotion_addGazeFollowTarget, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_notifyChange", _wrap_DiadicGazeMotion_notifyChange, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_lookAt", _wrap_DiadicGazeMotion_lookAt, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_reblend", _wrap_DiadicGazeMotion_reblend, METH_VARARGS, NULL},
	 { (char *)"disown_DiadicGazeMotion", _wrap_disown_DiadicGazeMotion, METH_VARARGS, NULL},
	 { (char *)"DiadicGazeMotion_swigregister", DiadicGazeMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_OverrideMotion", _wrap_new_OverrideMotion, METH_VARARGS, NULL},
	 { (char *)"OverrideMotion_clone", _wrap_OverrideMotion_clone, METH_VARARGS, NULL},
	 { (char *)"OverrideMotion_getClassName", _wrap_OverrideMotion_getClassName, METH_VARARGS, NULL},
	 { (char *)"OverrideMotion_castToThisType", _wrap_OverrideMotion_castToThisType, METH_VARARGS, NULL},
	 { (char *)"OverrideMotion_getFloatValueAtTimeInternal", _wrap_OverrideMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"OverrideMotion_getVecValueAtTimeInternal", _wrap_OverrideMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"OverrideMotion_getQuatValueAtTimeInternal", _wrap_OverrideMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_OverrideMotion", _wrap_delete_OverrideMotion, METH_VARARGS, NULL},
	 { (char *)"OverrideMotion_swigregister", OverrideMotion_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_Piavca__CurrentValueMotionTo_p_Piavca__KeyframeMotion(void *x) {
    return (void *)((Piavca::KeyframeMotion *)  ((Piavca::CurrentValueMotion *) x));
}
static void *_p_Piavca__MotionPostureTo_p_Piavca__KeyframeMotion(void *x) {
    return (void *)((Piavca::KeyframeMotion *)  ((Piavca::MotionPosture *) x));
}
static void *_p_Piavca__AvatarPostureTo_p_Piavca__KeyframeMotion(void *x) {
    return (void *)((Piavca::KeyframeMotion *)  ((Piavca::AvatarPosture *) x));
}
static void *_p_Piavca__DiadicGazeMotionTo_p_Piavca__RandomGazeMotion(void *x) {
    return (void *)((Piavca::RandomGazeMotion *)  ((Piavca::DiadicGazeMotion *) x));
}
static void *_p_Piavca__SequentialChoiceMotionTo_p_Piavca__ChoiceMotion(void *x) {
    return (void *)((Piavca::ChoiceMotion *)  ((Piavca::SequentialChoiceMotion *) x));
}
static void *_p_Piavca__RandomChoiceMotionTo_p_Piavca__ChoiceMotion(void *x) {
    return (void *)((Piavca::ChoiceMotion *)  ((Piavca::RandomChoiceMotion *) x));
}
static void *_p_Piavca__ChoiceMotionWithDefaultTo_p_Piavca__ChoiceMotion(void *x) {
    return (void *)((Piavca::ChoiceMotion *)  ((Piavca::ChoiceMotionWithDefault *) x));
}
static void *_p_Piavca__SubtractTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *)  ((Piavca::Subtract *) x));
}
static void *_p_Piavca__OverrideMotionTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *)  ((Piavca::OverrideMotion *) x));
}
static void *_p_Piavca__BlendBetweenTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *)  ((Piavca::BlendBetween *) x));
}
static void *_p_Piavca__MotionTransitionTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *)  ((Piavca::MotionTransition *) x));
}
static void *_p_Piavca__SequenceTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *)  ((Piavca::Sequence *) x));
}
static void *_p_Piavca__SmoothSequenceTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::Sequence *) ((Piavca::SmoothSequence *) x));
}
static void *_p_Piavca__PostureBlendTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::Sequence *) ((Piavca::PostureBlend *) x));
}
static void *_p_Piavca__AvatarPostureBlendTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::Sequence *) ((Piavca::AvatarPostureBlend *) x));
}
static void *_p_Piavca__MotionAdderTo_p_Piavca__MultiMotionCombiner(void *x) {
    return (void *)((Piavca::MultiMotionCombiner *)  ((Piavca::MotionAdder *) x));
}
static void *_p_Piavca__ProxemicsTo_p_Piavca__MultiMotionCombiner(void *x) {
    return (void *)((Piavca::MultiMotionCombiner *)  ((Piavca::Proxemics *) x));
}
static void *_p_Piavca__BlendBetweenTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *) ((Piavca::BlendBetween *) x));
}
static void *_p_Piavca__SequenceTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *) ((Piavca::Sequence *) x));
}
static void *_p_Piavca__SmoothSequenceTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::Sequence *) ((Piavca::SmoothSequence *) x));
}
static void *_p_Piavca__LookAtMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *)  ((Piavca::LookAtMotion *) x));
}
static void *_p_Piavca__LoopMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::LoopMotion *) x));
}
static void *_p_Piavca__MaskedMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::MaskedMotion *) x));
}
static void *_p_Piavca__MotionSaverTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::MotionSaver *) x));
}
static void *_p_Piavca__SubMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::SubMotion *) x));
}
static void *_p_Piavca__AvatarPostureBlendTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::Sequence *) ((Piavca::AvatarPostureBlend *) x));
}
static void *_p_Piavca__PostureBlendTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::Sequence *) ((Piavca::PostureBlend *) x));
}
static void *_p_Piavca__PointAtTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::PointAt *) x));
}
static void *_p_Piavca__MotionTransitionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *) ((Piavca::MotionTransition *) x));
}
static void *_p_Piavca__ScaleMotionRootTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::ScaleMotionRoot *) x));
}
static void *_p_Piavca__LookAtToFacialTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::LookAtToFacial *) x));
}
static void *_p_Piavca__RandomGazeMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *)(Piavca::LoopMotion *)(Piavca::SmoothLoop *) ((Piavca::RandomGazeMotion *) x));
}
static void *_p_Piavca__RandomChoiceMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *)(Piavca::ChoiceMotion *) ((Piavca::RandomChoiceMotion *) x));
}
static void *_p_Piavca__SequentialChoiceMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *)(Piavca::ChoiceMotion *) ((Piavca::SequentialChoiceMotion *) x));
}
static void *_p_Piavca__ChoiceMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::ChoiceMotion *) x));
}
static void *_p_Piavca__RandomTimingsMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *)(Piavca::ScaleMotionSpeed *) ((Piavca::RandomTimingsMotion *) x));
}
static void *_p_Piavca__KeyframeMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *)  ((Piavca::KeyframeMotion *) x));
}
static void *_p_Piavca__CurrentValueMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::KeyframeMotion *) ((Piavca::CurrentValueMotion *) x));
}
static void *_p_Piavca__ScaleMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::ScaleMotion *) x));
}
static void *_p_Piavca__ZeroMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *)  ((Piavca::ZeroMotion *) x));
}
static void *_p_Piavca__TimeWarpTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::TimeWarp *) x));
}
static void *_p_Piavca__DiadicGazeMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *)(Piavca::LoopMotion *)(Piavca::SmoothLoop *)(Piavca::RandomGazeMotion *) ((Piavca::DiadicGazeMotion *) x));
}
static void *_p_Piavca__OverrideMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *) ((Piavca::OverrideMotion *) x));
}
static void *_p_Piavca__AvatarPostureTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::KeyframeMotion *) ((Piavca::AvatarPosture *) x));
}
static void *_p_Piavca__MotionPostureTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::KeyframeMotion *) ((Piavca::MotionPosture *) x));
}
static void *_p_Piavca__TwoMotionCombinerTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *)  ((Piavca::TwoMotionCombiner *) x));
}
static void *_p_Piavca__MultiMotionCombinerTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::MultiMotionCombiner *) x));
}
static void *_p_Piavca__ProxemicsTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *)(Piavca::MultiMotionCombiner *) ((Piavca::Proxemics *) x));
}
static void *_p_Piavca__ScaleMotionSpeedTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::ScaleMotionSpeed *) x));
}
static void *_p_Piavca__ChangeMotionLengthTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *)(Piavca::ScaleMotionSpeed *) ((Piavca::ChangeMotionLength *) x));
}
static void *_p_Piavca__SubtractTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *) ((Piavca::Subtract *) x));
}
static void *_p_Piavca__MotionAdderTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *)(Piavca::MultiMotionCombiner *) ((Piavca::MotionAdder *) x));
}
static void *_p_Piavca__MotionFilterTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *)  ((Piavca::MotionFilter *) x));
}
static void *_p_Piavca__SmoothLoopTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *)(Piavca::LoopMotion *) ((Piavca::SmoothLoop *) x));
}
static void *_p_Piavca__ChoiceMotionWithDefaultTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *)(Piavca::ChoiceMotion *) ((Piavca::ChoiceMotionWithDefault *) x));
}
static void *_p_Piavca__RepositionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::Reposition *) x));
}
static void *_p_Piavca__TimeOffsetTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::TimeOffset *) x));
}
static void *_p_Piavca__RandomGazeMotionTo_p_Piavca__LoopMotion(void *x) {
    return (void *)((Piavca::LoopMotion *) (Piavca::SmoothLoop *) ((Piavca::RandomGazeMotion *) x));
}
static void *_p_Piavca__DiadicGazeMotionTo_p_Piavca__LoopMotion(void *x) {
    return (void *)((Piavca::LoopMotion *) (Piavca::SmoothLoop *)(Piavca::RandomGazeMotion *) ((Piavca::DiadicGazeMotion *) x));
}
static void *_p_Piavca__SmoothLoopTo_p_Piavca__LoopMotion(void *x) {
    return (void *)((Piavca::LoopMotion *)  ((Piavca::SmoothLoop *) x));
}
static void *_p_Piavca__MultiMotionCombinerTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::MultiMotionCombiner *) x));
}
static void *_p_Piavca__PointAtTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::PointAt *) x));
}
static void *_p_Piavca__SmoothLoopTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *) (Piavca::LoopMotion *) ((Piavca::SmoothLoop *) x));
}
static void *_p_Piavca__MotionAdderTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *) (Piavca::MultiMotionCombiner *) ((Piavca::MotionAdder *) x));
}
static void *_p_Piavca__ChoiceMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::ChoiceMotion *) x));
}
static void *_p_Piavca__RandomTimingsMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *) (Piavca::ScaleMotionSpeed *) ((Piavca::RandomTimingsMotion *) x));
}
static void *_p_Piavca__ScaleMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::ScaleMotion *) x));
}
static void *_p_Piavca__SequentialChoiceMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *) (Piavca::ChoiceMotion *) ((Piavca::SequentialChoiceMotion *) x));
}
static void *_p_Piavca__RandomChoiceMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *) (Piavca::ChoiceMotion *) ((Piavca::RandomChoiceMotion *) x));
}
static void *_p_Piavca__RandomGazeMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *) (Piavca::LoopMotion *)(Piavca::SmoothLoop *) ((Piavca::RandomGazeMotion *) x));
}
static void *_p_Piavca__DiadicGazeMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *) (Piavca::LoopMotion *)(Piavca::SmoothLoop *)(Piavca::RandomGazeMotion *) ((Piavca::DiadicGazeMotion *) x));
}
static void *_p_Piavca__ChoiceMotionWithDefaultTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *) (Piavca::ChoiceMotion *) ((Piavca::ChoiceMotionWithDefault *) x));
}
static void *_p_Piavca__ChangeMotionLengthTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *) (Piavca::ScaleMotionSpeed *) ((Piavca::ChangeMotionLength *) x));
}
static void *_p_Piavca__ProxemicsTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *) (Piavca::MultiMotionCombiner *) ((Piavca::Proxemics *) x));
}
static void *_p_Piavca__LoopMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::LoopMotion *) x));
}
static void *_p_Piavca__MaskedMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::MaskedMotion *) x));
}
static void *_p_Piavca__TimeOffsetTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::TimeOffset *) x));
}
static void *_p_Piavca__SubMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::SubMotion *) x));
}
static void *_p_Piavca__ScaleMotionRootTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::ScaleMotionRoot *) x));
}
static void *_p_Piavca__RepositionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::Reposition *) x));
}
static void *_p_Piavca__TimeWarpTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::TimeWarp *) x));
}
static void *_p_Piavca__MotionSaverTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::MotionSaver *) x));
}
static void *_p_Piavca__ScaleMotionSpeedTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::ScaleMotionSpeed *) x));
}
static void *_p_Piavca__LookAtToFacialTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::LookAtToFacial *) x));
}
static void *_p_Piavca__RandomGazeMotionTo_p_Piavca__SmoothLoop(void *x) {
    return (void *)((Piavca::SmoothLoop *)  ((Piavca::RandomGazeMotion *) x));
}
static void *_p_Piavca__DiadicGazeMotionTo_p_Piavca__SmoothLoop(void *x) {
    return (void *)((Piavca::SmoothLoop *) (Piavca::RandomGazeMotion *) ((Piavca::DiadicGazeMotion *) x));
}
static void *_p_Piavca__LinearTransitionTo_p_Piavca__TransitionFunction(void *x) {
    return (void *)((Piavca::TransitionFunction *)  ((Piavca::LinearTransition *) x));
}
static void *_p_Piavca__SmoothTransitionTo_p_Piavca__TransitionFunction(void *x) {
    return (void *)((Piavca::TransitionFunction *)  ((Piavca::SmoothTransition *) x));
}
static void *_p_Piavca__AvatarMotionQueueTo_p_Piavca__AvatarTimeCallback(void *x) {
    return (void *)((Piavca::AvatarTimeCallback *)  ((Piavca::AvatarMotionQueue *) x));
}
static void *_p_Piavca__RandomTimingsMotionTo_p_Piavca__ScaleMotionSpeed(void *x) {
    return (void *)((Piavca::ScaleMotionSpeed *)  ((Piavca::RandomTimingsMotion *) x));
}
static void *_p_Piavca__ChangeMotionLengthTo_p_Piavca__ScaleMotionSpeed(void *x) {
    return (void *)((Piavca::ScaleMotionSpeed *)  ((Piavca::ChangeMotionLength *) x));
}
static void *_p_Piavca__SmoothSequenceTo_p_Piavca__Sequence(void *x) {
    return (void *)((Piavca::Sequence *)  ((Piavca::SmoothSequence *) x));
}
static void *_p_Piavca__PostureBlendTo_p_Piavca__Sequence(void *x) {
    return (void *)((Piavca::Sequence *)  ((Piavca::PostureBlend *) x));
}
static void *_p_Piavca__AvatarPostureBlendTo_p_Piavca__Sequence(void *x) {
    return (void *)((Piavca::Sequence *)  ((Piavca::AvatarPostureBlend *) x));
}
static swig_type_info _swigt__p_Piavca__Avatar = {"_p_Piavca__Avatar", "Piavca::Avatar *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__AvatarImp = {"_p_Piavca__AvatarImp", "Piavca::AvatarImp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__AvatarMotionQueue = {"_p_Piavca__AvatarMotionQueue", "Piavca::AvatarMotionQueue *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__AvatarPosture = {"_p_Piavca__AvatarPosture", "Piavca::AvatarPosture *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__AvatarPostureBlend = {"_p_Piavca__AvatarPostureBlend", "Piavca::AvatarPostureBlend *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__AvatarTargetStruct = {"_p_Piavca__AvatarTargetStruct", "Piavca::AvatarTargetStruct *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__AvatarTimeCallback = {"_p_Piavca__AvatarTimeCallback", "Piavca::AvatarTimeCallback *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__BlendBetween = {"_p_Piavca__BlendBetween", "Piavca::BlendBetween *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__Bound = {"_p_Piavca__Bound", "Piavca::Bound *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__ChangeMotionLength = {"_p_Piavca__ChangeMotionLength", "Piavca::ChangeMotionLength *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__ChoiceMotion = {"_p_Piavca__ChoiceMotion", "Piavca::ChoiceMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__ChoiceMotionWithDefault = {"_p_Piavca__ChoiceMotionWithDefault", "Piavca::ChoiceMotionWithDefault *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__Core = {"_p_Piavca__Core", "Piavca::Core *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__CurrentValueMotion = {"_p_Piavca__CurrentValueMotion", "Piavca::CurrentValueMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__DiadicGazeMotion = {"_p_Piavca__DiadicGazeMotion", "Piavca::DiadicGazeMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__KeyframeMotion = {"_p_Piavca__KeyframeMotion", "Piavca::KeyframeMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__LinearTransition = {"_p_Piavca__LinearTransition", "Piavca::LinearTransition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__LookAtMotion = {"_p_Piavca__LookAtMotion", "Piavca::LookAtMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__LookAtToFacial = {"_p_Piavca__LookAtToFacial", "Piavca::LookAtToFacial *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__LoopMotion = {"_p_Piavca__LoopMotion", "Piavca::LoopMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__MaskedMotion = {"_p_Piavca__MaskedMotion", "Piavca::MaskedMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__Motion = {"_p_Piavca__Motion", "Piavca::Motion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__MotionAdder = {"_p_Piavca__MotionAdder", "Piavca::MotionAdder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__MotionFilter = {"_p_Piavca__MotionFilter", "Piavca::MotionFilter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__MotionImp = {"_p_Piavca__MotionImp", "Piavca::MotionImp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__MotionMask = {"_p_Piavca__MotionMask", "Piavca::MotionMask *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__MotionParser = {"_p_Piavca__MotionParser", "Piavca::MotionParser *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__MotionPosture = {"_p_Piavca__MotionPosture", "Piavca::MotionPosture *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__MotionSaver = {"_p_Piavca__MotionSaver", "Piavca::MotionSaver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__MotionTransition = {"_p_Piavca__MotionTransition", "Piavca::MotionTransition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__MultiMotionCombiner = {"_p_Piavca__MultiMotionCombiner", "Piavca::MultiMotionCombiner *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__Object = {"_p_Piavca__Object", "Piavca::Object *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__ObjectTargetStruct = {"_p_Piavca__ObjectTargetStruct", "Piavca::ObjectTargetStruct *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__OverrideMotion = {"_p_Piavca__OverrideMotion", "Piavca::OverrideMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__PointAt = {"_p_Piavca__PointAt", "Piavca::PointAt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__PostureBlend = {"_p_Piavca__PostureBlend", "Piavca::PostureBlend *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__Proxemics = {"_p_Piavca__Proxemics", "Piavca::Proxemics *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__Quat = {"_p_Piavca__Quat", "Piavca::Quat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__RandomChoiceMotion = {"_p_Piavca__RandomChoiceMotion", "Piavca::RandomChoiceMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__RandomGazeMotion = {"_p_Piavca__RandomGazeMotion", "Piavca::RandomGazeMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__RandomTimingsMotion = {"_p_Piavca__RandomTimingsMotion", "Piavca::RandomTimingsMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__Reposition = {"_p_Piavca__Reposition", "Piavca::Reposition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__ScaleMotion = {"_p_Piavca__ScaleMotion", "Piavca::ScaleMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__ScaleMotionRoot = {"_p_Piavca__ScaleMotionRoot", "Piavca::ScaleMotionRoot *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__ScaleMotionSpeed = {"_p_Piavca__ScaleMotionSpeed", "Piavca::ScaleMotionSpeed *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__Sequence = {"_p_Piavca__Sequence", "Piavca::Sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__SequentialChoiceMotion = {"_p_Piavca__SequentialChoiceMotion", "Piavca::SequentialChoiceMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__SmoothLoop = {"_p_Piavca__SmoothLoop", "Piavca::SmoothLoop *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__SmoothSequence = {"_p_Piavca__SmoothSequence", "Piavca::SmoothSequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__SmoothTransition = {"_p_Piavca__SmoothTransition", "Piavca::SmoothTransition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__SubMotion = {"_p_Piavca__SubMotion", "Piavca::SubMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__Subtract = {"_p_Piavca__Subtract", "Piavca::Subtract *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__TimeCallback = {"_p_Piavca__TimeCallback", "Piavca::TimeCallback *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__TimeOffset = {"_p_Piavca__TimeOffset", "Piavca::TimeOffset *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__TimeWarp = {"_p_Piavca__TimeWarp", "Piavca::TimeWarp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__TransitionFunction = {"_p_Piavca__TransitionFunction", "Piavca::TransitionFunction *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__TwoMotionCombiner = {"_p_Piavca__TwoMotionCombiner", "Piavca::TwoMotionCombiner *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__Vec = {"_p_Piavca__Vec", "Piavca::Vec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__ZeroMotion = {"_p_Piavca__ZeroMotion", "Piavca::ZeroMotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__flagStruct = {"_p_Piavca__flagStruct", "Piavca::flagStruct *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Piavca__queueElement = {"_p_Piavca__queueElement", "Piavca::queueElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *|_TCHAR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|Piavca::joint_id *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_Piavca__MotionParser = {"_p_p_Piavca__MotionParser", "Piavca::MotionParser **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_PyObject = {"_p_p_PyObject", "PyObject **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__fstream = {"_p_std__fstream", "std::fstream *|Piavca::tfstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ifstream = {"_p_std__ifstream", "std::ifstream *|Piavca::tifstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__istringstream = {"_p_std__istringstream", "std::istringstream *|istringstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listTstd__string_t = {"_p_std__listTstd__string_t", "std::list<std::string > *|std::list<Piavca::tstring > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ofstream = {"_p_std__ofstream", "std::ofstream *|Piavca::tofstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostream = {"_p_std__ostream", "std::ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostringstream = {"_p_std__ostringstream", "std::ostringstream *|Piavca::tostringstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *|Piavca::tstring *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__stringstream = {"_p_std__stringstream", "std::stringstream *|Piavca::tstringstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__type_info = {"_p_std__type_info", "std::type_info *|type_info *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTPiavca__AvatarTargetStruct_std__allocatorTPiavca__AvatarTargetStruct_t_t = {"_p_std__vectorTPiavca__AvatarTargetStruct_std__allocatorTPiavca__AvatarTargetStruct_t_t", "std::vector<Piavca::AvatarTargetStruct,std::allocator<Piavca::AvatarTargetStruct > > *|Piavca::AvatarTargetVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t = {"_p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t", "std::vector<Piavca::Motion *,std::allocator<Piavca::Motion * > > *|Piavca::MotionVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTPiavca__ObjectTargetStruct_std__allocatorTPiavca__ObjectTargetStruct_t_t = {"_p_std__vectorTPiavca__ObjectTargetStruct_std__allocatorTPiavca__ObjectTargetStruct_t_t", "std::vector<Piavca::ObjectTargetStruct,std::allocator<Piavca::ObjectTargetStruct > > *|Piavca::ObjectTargetVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTfloat_std__allocatorTfloat_t_t = {"_p_std__vectorTfloat_std__allocatorTfloat_t_t", "std::vector<float,std::allocator<float > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTint_std__allocatorTint_t_t = {"_p_std__vectorTint_std__allocatorTint_t_t", "std::vector<int > *|std::vector<int,std::allocator<int > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTint_std__allocatorTint_t_t__allocator_type = {"_p_std__vectorTint_std__allocatorTint_t_t__allocator_type", "std::allocator<int > *|std::vector<int >::allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTstd__pairTint_Piavca__Quat_t_std__allocatorTstd__pairTint_Piavca__Quat_t_t_t = {"_p_std__vectorTstd__pairTint_Piavca__Quat_t_std__allocatorTstd__pairTint_Piavca__Quat_t_t_t", "std::vector<std::pair<int,Piavca::Quat >,std::allocator<std::pair<int,Piavca::Quat > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTstd__pairTstd__string_int_t_std__allocatorTstd__pairTstd__string_int_t_t_t = {"_p_std__vectorTstd__pairTstd__string_int_t_std__allocatorTstd__pairTstd__string_int_t_t_t", "std::vector<std::pair<std::string,int >,std::allocator<std::pair<std::string,int > > > *|std::vector<std::pair<Piavca::tstring,int >,std::allocator<std::pair<Piavca::tstring,int > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTstd__string_std__allocatorTstd__string_t_t = {"_p_std__vectorTstd__string_std__allocatorTstd__string_t_t", "std::vector<std::string,std::allocator<std::string > > *|Piavca::StringVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTstd__string_std__allocatorTstd__string_t_t__allocator_type = {"_p_std__vectorTstd__string_std__allocatorTstd__string_t_t__allocator_type", "std::allocator<std::string > *|std::vector<std::string >::allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__wstring = {"_p_std__wstring", "std::wstring *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__PySwigIterator = {"_p_swig__PySwigIterator", "swig::PySwigIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_Piavca__Avatar,
  &_swigt__p_Piavca__AvatarImp,
  &_swigt__p_Piavca__AvatarMotionQueue,
  &_swigt__p_Piavca__AvatarPosture,
  &_swigt__p_Piavca__AvatarPostureBlend,
  &_swigt__p_Piavca__AvatarTargetStruct,
  &_swigt__p_Piavca__AvatarTimeCallback,
  &_swigt__p_Piavca__BlendBetween,
  &_swigt__p_Piavca__Bound,
  &_swigt__p_Piavca__ChangeMotionLength,
  &_swigt__p_Piavca__ChoiceMotion,
  &_swigt__p_Piavca__ChoiceMotionWithDefault,
  &_swigt__p_Piavca__Core,
  &_swigt__p_Piavca__CurrentValueMotion,
  &_swigt__p_Piavca__DiadicGazeMotion,
  &_swigt__p_Piavca__KeyframeMotion,
  &_swigt__p_Piavca__LinearTransition,
  &_swigt__p_Piavca__LookAtMotion,
  &_swigt__p_Piavca__LookAtToFacial,
  &_swigt__p_Piavca__LoopMotion,
  &_swigt__p_Piavca__MaskedMotion,
  &_swigt__p_Piavca__Motion,
  &_swigt__p_Piavca__MotionAdder,
  &_swigt__p_Piavca__MotionFilter,
  &_swigt__p_Piavca__MotionImp,
  &_swigt__p_Piavca__MotionMask,
  &_swigt__p_Piavca__MotionParser,
  &_swigt__p_Piavca__MotionPosture,
  &_swigt__p_Piavca__MotionSaver,
  &_swigt__p_Piavca__MotionTransition,
  &_swigt__p_Piavca__MultiMotionCombiner,
  &_swigt__p_Piavca__Object,
  &_swigt__p_Piavca__ObjectTargetStruct,
  &_swigt__p_Piavca__OverrideMotion,
  &_swigt__p_Piavca__PointAt,
  &_swigt__p_Piavca__PostureBlend,
  &_swigt__p_Piavca__Proxemics,
  &_swigt__p_Piavca__Quat,
  &_swigt__p_Piavca__RandomChoiceMotion,
  &_swigt__p_Piavca__RandomGazeMotion,
  &_swigt__p_Piavca__RandomTimingsMotion,
  &_swigt__p_Piavca__Reposition,
  &_swigt__p_Piavca__ScaleMotion,
  &_swigt__p_Piavca__ScaleMotionRoot,
  &_swigt__p_Piavca__ScaleMotionSpeed,
  &_swigt__p_Piavca__Sequence,
  &_swigt__p_Piavca__SequentialChoiceMotion,
  &_swigt__p_Piavca__SmoothLoop,
  &_swigt__p_Piavca__SmoothSequence,
  &_swigt__p_Piavca__SmoothTransition,
  &_swigt__p_Piavca__SubMotion,
  &_swigt__p_Piavca__Subtract,
  &_swigt__p_Piavca__TimeCallback,
  &_swigt__p_Piavca__TimeOffset,
  &_swigt__p_Piavca__TimeWarp,
  &_swigt__p_Piavca__TransitionFunction,
  &_swigt__p_Piavca__TwoMotionCombiner,
  &_swigt__p_Piavca__Vec,
  &_swigt__p_Piavca__ZeroMotion,
  &_swigt__p_Piavca__flagStruct,
  &_swigt__p_Piavca__queueElement,
  &_swigt__p_allocator_type,
  &_swigt__p_char,
  &_swigt__p_difference_type,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_p_Piavca__MotionParser,
  &_swigt__p_p_PyObject,
  &_swigt__p_size_type,
  &_swigt__p_std__fstream,
  &_swigt__p_std__ifstream,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__istringstream,
  &_swigt__p_std__listTstd__string_t,
  &_swigt__p_std__ofstream,
  &_swigt__p_std__ostream,
  &_swigt__p_std__ostringstream,
  &_swigt__p_std__string,
  &_swigt__p_std__stringstream,
  &_swigt__p_std__type_info,
  &_swigt__p_std__vectorTPiavca__AvatarTargetStruct_std__allocatorTPiavca__AvatarTargetStruct_t_t,
  &_swigt__p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t,
  &_swigt__p_std__vectorTPiavca__ObjectTargetStruct_std__allocatorTPiavca__ObjectTargetStruct_t_t,
  &_swigt__p_std__vectorTfloat_std__allocatorTfloat_t_t,
  &_swigt__p_std__vectorTint_std__allocatorTint_t_t,
  &_swigt__p_std__vectorTint_std__allocatorTint_t_t__allocator_type,
  &_swigt__p_std__vectorTstd__pairTint_Piavca__Quat_t_std__allocatorTstd__pairTint_Piavca__Quat_t_t_t,
  &_swigt__p_std__vectorTstd__pairTstd__string_int_t_std__allocatorTstd__pairTstd__string_int_t_t_t,
  &_swigt__p_std__vectorTstd__string_std__allocatorTstd__string_t_t,
  &_swigt__p_std__vectorTstd__string_std__allocatorTstd__string_t_t__allocator_type,
  &_swigt__p_std__wstring,
  &_swigt__p_swig__PySwigIterator,
  &_swigt__p_value_type,
};

static swig_cast_info _swigc__p_Piavca__Avatar[] = {  {&_swigt__p_Piavca__Avatar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__AvatarImp[] = {  {&_swigt__p_Piavca__AvatarImp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__AvatarMotionQueue[] = {  {&_swigt__p_Piavca__AvatarMotionQueue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__AvatarPosture[] = {  {&_swigt__p_Piavca__AvatarPosture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__AvatarPostureBlend[] = {  {&_swigt__p_Piavca__AvatarPostureBlend, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__AvatarTargetStruct[] = {  {&_swigt__p_Piavca__AvatarTargetStruct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__AvatarTimeCallback[] = {  {&_swigt__p_Piavca__AvatarMotionQueue, _p_Piavca__AvatarMotionQueueTo_p_Piavca__AvatarTimeCallback, 0, 0},  {&_swigt__p_Piavca__AvatarTimeCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__BlendBetween[] = {  {&_swigt__p_Piavca__BlendBetween, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Bound[] = {  {&_swigt__p_Piavca__Bound, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ChangeMotionLength[] = {  {&_swigt__p_Piavca__ChangeMotionLength, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ChoiceMotion[] = {  {&_swigt__p_Piavca__ChoiceMotion, 0, 0, 0},  {&_swigt__p_Piavca__SequentialChoiceMotion, _p_Piavca__SequentialChoiceMotionTo_p_Piavca__ChoiceMotion, 0, 0},  {&_swigt__p_Piavca__RandomChoiceMotion, _p_Piavca__RandomChoiceMotionTo_p_Piavca__ChoiceMotion, 0, 0},  {&_swigt__p_Piavca__ChoiceMotionWithDefault, _p_Piavca__ChoiceMotionWithDefaultTo_p_Piavca__ChoiceMotion, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ChoiceMotionWithDefault[] = {  {&_swigt__p_Piavca__ChoiceMotionWithDefault, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Core[] = {  {&_swigt__p_Piavca__Core, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__CurrentValueMotion[] = {  {&_swigt__p_Piavca__CurrentValueMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__DiadicGazeMotion[] = {  {&_swigt__p_Piavca__DiadicGazeMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__KeyframeMotion[] = {  {&_swigt__p_Piavca__KeyframeMotion, 0, 0, 0},  {&_swigt__p_Piavca__CurrentValueMotion, _p_Piavca__CurrentValueMotionTo_p_Piavca__KeyframeMotion, 0, 0},  {&_swigt__p_Piavca__MotionPosture, _p_Piavca__MotionPostureTo_p_Piavca__KeyframeMotion, 0, 0},  {&_swigt__p_Piavca__AvatarPosture, _p_Piavca__AvatarPostureTo_p_Piavca__KeyframeMotion, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__LinearTransition[] = {  {&_swigt__p_Piavca__LinearTransition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__LookAtMotion[] = {  {&_swigt__p_Piavca__LookAtMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__LookAtToFacial[] = {  {&_swigt__p_Piavca__LookAtToFacial, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__LoopMotion[] = {  {&_swigt__p_Piavca__RandomGazeMotion, _p_Piavca__RandomGazeMotionTo_p_Piavca__LoopMotion, 0, 0},  {&_swigt__p_Piavca__DiadicGazeMotion, _p_Piavca__DiadicGazeMotionTo_p_Piavca__LoopMotion, 0, 0},  {&_swigt__p_Piavca__SmoothLoop, _p_Piavca__SmoothLoopTo_p_Piavca__LoopMotion, 0, 0},  {&_swigt__p_Piavca__LoopMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MaskedMotion[] = {  {&_swigt__p_Piavca__MaskedMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Motion[] = {  {&_swigt__p_Piavca__BlendBetween, _p_Piavca__BlendBetweenTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__Sequence, _p_Piavca__SequenceTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__SmoothSequence, _p_Piavca__SmoothSequenceTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MotionSaver, _p_Piavca__MotionSaverTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__LookAtMotion, _p_Piavca__LookAtMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__LoopMotion, _p_Piavca__LoopMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MaskedMotion, _p_Piavca__MaskedMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__SubMotion, _p_Piavca__SubMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__PostureBlend, _p_Piavca__PostureBlendTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__AvatarPostureBlend, _p_Piavca__AvatarPostureBlendTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__PointAt, _p_Piavca__PointAtTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MotionTransition, _p_Piavca__MotionTransitionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ScaleMotionRoot, _p_Piavca__ScaleMotionRootTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__LookAtToFacial, _p_Piavca__LookAtToFacialTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__TimeWarp, _p_Piavca__TimeWarpTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__RandomChoiceMotion, _p_Piavca__RandomChoiceMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__SequentialChoiceMotion, _p_Piavca__SequentialChoiceMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ChoiceMotion, _p_Piavca__ChoiceMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__RandomTimingsMotion, _p_Piavca__RandomTimingsMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__KeyframeMotion, _p_Piavca__KeyframeMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__CurrentValueMotion, _p_Piavca__CurrentValueMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ScaleMotion, _p_Piavca__ScaleMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ZeroMotion, _p_Piavca__ZeroMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__OverrideMotion, _p_Piavca__OverrideMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__Motion, 0, 0, 0},  {&_swigt__p_Piavca__RandomGazeMotion, _p_Piavca__RandomGazeMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__DiadicGazeMotion, _p_Piavca__DiadicGazeMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__AvatarPosture, _p_Piavca__AvatarPostureTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MotionPosture, _p_Piavca__MotionPostureTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MultiMotionCombiner, _p_Piavca__MultiMotionCombinerTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__TwoMotionCombiner, _p_Piavca__TwoMotionCombinerTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__Proxemics, _p_Piavca__ProxemicsTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ScaleMotionSpeed, _p_Piavca__ScaleMotionSpeedTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ChangeMotionLength, _p_Piavca__ChangeMotionLengthTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MotionAdder, _p_Piavca__MotionAdderTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__Subtract, _p_Piavca__SubtractTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__SmoothLoop, _p_Piavca__SmoothLoopTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MotionFilter, _p_Piavca__MotionFilterTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ChoiceMotionWithDefault, _p_Piavca__ChoiceMotionWithDefaultTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__Reposition, _p_Piavca__RepositionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__TimeOffset, _p_Piavca__TimeOffsetTo_p_Piavca__Motion, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionAdder[] = {  {&_swigt__p_Piavca__MotionAdder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionFilter[] = {  {&_swigt__p_Piavca__MultiMotionCombiner, _p_Piavca__MultiMotionCombinerTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__PointAt, _p_Piavca__PointAtTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__SmoothLoop, _p_Piavca__SmoothLoopTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__MotionAdder, _p_Piavca__MotionAdderTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__ChoiceMotion, _p_Piavca__ChoiceMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__RandomTimingsMotion, _p_Piavca__RandomTimingsMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__ScaleMotion, _p_Piavca__ScaleMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__SequentialChoiceMotion, _p_Piavca__SequentialChoiceMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__RandomChoiceMotion, _p_Piavca__RandomChoiceMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__DiadicGazeMotion, _p_Piavca__DiadicGazeMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__RandomGazeMotion, _p_Piavca__RandomGazeMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__ChoiceMotionWithDefault, _p_Piavca__ChoiceMotionWithDefaultTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__Proxemics, _p_Piavca__ProxemicsTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__ChangeMotionLength, _p_Piavca__ChangeMotionLengthTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__LoopMotion, _p_Piavca__LoopMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__MaskedMotion, _p_Piavca__MaskedMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__TimeOffset, _p_Piavca__TimeOffsetTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__SubMotion, _p_Piavca__SubMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__ScaleMotionRoot, _p_Piavca__ScaleMotionRootTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__Reposition, _p_Piavca__RepositionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__TimeWarp, _p_Piavca__TimeWarpTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__MotionSaver, _p_Piavca__MotionSaverTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__MotionFilter, 0, 0, 0},  {&_swigt__p_Piavca__ScaleMotionSpeed, _p_Piavca__ScaleMotionSpeedTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__LookAtToFacial, _p_Piavca__LookAtToFacialTo_p_Piavca__MotionFilter, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionImp[] = {  {&_swigt__p_Piavca__MotionImp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionMask[] = {  {&_swigt__p_Piavca__MotionMask, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionParser[] = {  {&_swigt__p_Piavca__MotionParser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionPosture[] = {  {&_swigt__p_Piavca__MotionPosture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionSaver[] = {  {&_swigt__p_Piavca__MotionSaver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionTransition[] = {  {&_swigt__p_Piavca__MotionTransition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MultiMotionCombiner[] = {  {&_swigt__p_Piavca__MotionAdder, _p_Piavca__MotionAdderTo_p_Piavca__MultiMotionCombiner, 0, 0},  {&_swigt__p_Piavca__MultiMotionCombiner, 0, 0, 0},  {&_swigt__p_Piavca__Proxemics, _p_Piavca__ProxemicsTo_p_Piavca__MultiMotionCombiner, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Object[] = {  {&_swigt__p_Piavca__Object, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ObjectTargetStruct[] = {  {&_swigt__p_Piavca__ObjectTargetStruct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__OverrideMotion[] = {  {&_swigt__p_Piavca__OverrideMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__PointAt[] = {  {&_swigt__p_Piavca__PointAt, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__PostureBlend[] = {  {&_swigt__p_Piavca__PostureBlend, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Proxemics[] = {  {&_swigt__p_Piavca__Proxemics, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Quat[] = {  {&_swigt__p_Piavca__Quat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__RandomChoiceMotion[] = {  {&_swigt__p_Piavca__RandomChoiceMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__RandomGazeMotion[] = {  {&_swigt__p_Piavca__RandomGazeMotion, 0, 0, 0},  {&_swigt__p_Piavca__DiadicGazeMotion, _p_Piavca__DiadicGazeMotionTo_p_Piavca__RandomGazeMotion, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__RandomTimingsMotion[] = {  {&_swigt__p_Piavca__RandomTimingsMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Reposition[] = {  {&_swigt__p_Piavca__Reposition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ScaleMotion[] = {  {&_swigt__p_Piavca__ScaleMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ScaleMotionRoot[] = {  {&_swigt__p_Piavca__ScaleMotionRoot, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ScaleMotionSpeed[] = {  {&_swigt__p_Piavca__RandomTimingsMotion, _p_Piavca__RandomTimingsMotionTo_p_Piavca__ScaleMotionSpeed, 0, 0},  {&_swigt__p_Piavca__ScaleMotionSpeed, 0, 0, 0},  {&_swigt__p_Piavca__ChangeMotionLength, _p_Piavca__ChangeMotionLengthTo_p_Piavca__ScaleMotionSpeed, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Sequence[] = {  {&_swigt__p_Piavca__Sequence, 0, 0, 0},  {&_swigt__p_Piavca__SmoothSequence, _p_Piavca__SmoothSequenceTo_p_Piavca__Sequence, 0, 0},  {&_swigt__p_Piavca__PostureBlend, _p_Piavca__PostureBlendTo_p_Piavca__Sequence, 0, 0},  {&_swigt__p_Piavca__AvatarPostureBlend, _p_Piavca__AvatarPostureBlendTo_p_Piavca__Sequence, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__SequentialChoiceMotion[] = {  {&_swigt__p_Piavca__SequentialChoiceMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__SmoothLoop[] = {  {&_swigt__p_Piavca__RandomGazeMotion, _p_Piavca__RandomGazeMotionTo_p_Piavca__SmoothLoop, 0, 0},  {&_swigt__p_Piavca__DiadicGazeMotion, _p_Piavca__DiadicGazeMotionTo_p_Piavca__SmoothLoop, 0, 0},  {&_swigt__p_Piavca__SmoothLoop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__SmoothSequence[] = {  {&_swigt__p_Piavca__SmoothSequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__SmoothTransition[] = {  {&_swigt__p_Piavca__SmoothTransition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__SubMotion[] = {  {&_swigt__p_Piavca__SubMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Subtract[] = {  {&_swigt__p_Piavca__Subtract, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__TimeCallback[] = {  {&_swigt__p_Piavca__TimeCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__TimeOffset[] = {  {&_swigt__p_Piavca__TimeOffset, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__TimeWarp[] = {  {&_swigt__p_Piavca__TimeWarp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__TransitionFunction[] = {  {&_swigt__p_Piavca__TransitionFunction, 0, 0, 0},  {&_swigt__p_Piavca__LinearTransition, _p_Piavca__LinearTransitionTo_p_Piavca__TransitionFunction, 0, 0},  {&_swigt__p_Piavca__SmoothTransition, _p_Piavca__SmoothTransitionTo_p_Piavca__TransitionFunction, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__TwoMotionCombiner[] = {  {&_swigt__p_Piavca__Subtract, _p_Piavca__SubtractTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__OverrideMotion, _p_Piavca__OverrideMotionTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__TwoMotionCombiner, 0, 0, 0},  {&_swigt__p_Piavca__BlendBetween, _p_Piavca__BlendBetweenTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__MotionTransition, _p_Piavca__MotionTransitionTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__Sequence, _p_Piavca__SequenceTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__SmoothSequence, _p_Piavca__SmoothSequenceTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__PostureBlend, _p_Piavca__PostureBlendTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__AvatarPostureBlend, _p_Piavca__AvatarPostureBlendTo_p_Piavca__TwoMotionCombiner, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Vec[] = {  {&_swigt__p_Piavca__Vec, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ZeroMotion[] = {  {&_swigt__p_Piavca__ZeroMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__flagStruct[] = {  {&_swigt__p_Piavca__flagStruct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__queueElement[] = {  {&_swigt__p_Piavca__queueElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_Piavca__MotionParser[] = {  {&_swigt__p_p_Piavca__MotionParser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_PyObject[] = {  {&_swigt__p_p_PyObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__fstream[] = {  {&_swigt__p_std__fstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ifstream[] = {  {&_swigt__p_std__ifstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__istringstream[] = {  {&_swigt__p_std__istringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listTstd__string_t[] = {  {&_swigt__p_std__listTstd__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ofstream[] = {  {&_swigt__p_std__ofstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostream[] = {  {&_swigt__p_std__ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostringstream[] = {  {&_swigt__p_std__ostringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__stringstream[] = {  {&_swigt__p_std__stringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__type_info[] = {  {&_swigt__p_std__type_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTPiavca__AvatarTargetStruct_std__allocatorTPiavca__AvatarTargetStruct_t_t[] = {  {&_swigt__p_std__vectorTPiavca__AvatarTargetStruct_std__allocatorTPiavca__AvatarTargetStruct_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t[] = {  {&_swigt__p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTPiavca__ObjectTargetStruct_std__allocatorTPiavca__ObjectTargetStruct_t_t[] = {  {&_swigt__p_std__vectorTPiavca__ObjectTargetStruct_std__allocatorTPiavca__ObjectTargetStruct_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTfloat_std__allocatorTfloat_t_t[] = {  {&_swigt__p_std__vectorTfloat_std__allocatorTfloat_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTint_std__allocatorTint_t_t[] = {  {&_swigt__p_std__vectorTint_std__allocatorTint_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTint_std__allocatorTint_t_t__allocator_type[] = {  {&_swigt__p_std__vectorTint_std__allocatorTint_t_t__allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__pairTint_Piavca__Quat_t_std__allocatorTstd__pairTint_Piavca__Quat_t_t_t[] = {  {&_swigt__p_std__vectorTstd__pairTint_Piavca__Quat_t_std__allocatorTstd__pairTint_Piavca__Quat_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__pairTstd__string_int_t_std__allocatorTstd__pairTstd__string_int_t_t_t[] = {  {&_swigt__p_std__vectorTstd__pairTstd__string_int_t_std__allocatorTstd__pairTstd__string_int_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__string_std__allocatorTstd__string_t_t[] = {  {&_swigt__p_std__vectorTstd__string_std__allocatorTstd__string_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__string_std__allocatorTstd__string_t_t__allocator_type[] = {  {&_swigt__p_std__vectorTstd__string_std__allocatorTstd__string_t_t__allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__wstring[] = {  {&_swigt__p_std__wstring, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__PySwigIterator[] = {  {&_swigt__p_swig__PySwigIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_Piavca__Avatar,
  _swigc__p_Piavca__AvatarImp,
  _swigc__p_Piavca__AvatarMotionQueue,
  _swigc__p_Piavca__AvatarPosture,
  _swigc__p_Piavca__AvatarPostureBlend,
  _swigc__p_Piavca__AvatarTargetStruct,
  _swigc__p_Piavca__AvatarTimeCallback,
  _swigc__p_Piavca__BlendBetween,
  _swigc__p_Piavca__Bound,
  _swigc__p_Piavca__ChangeMotionLength,
  _swigc__p_Piavca__ChoiceMotion,
  _swigc__p_Piavca__ChoiceMotionWithDefault,
  _swigc__p_Piavca__Core,
  _swigc__p_Piavca__CurrentValueMotion,
  _swigc__p_Piavca__DiadicGazeMotion,
  _swigc__p_Piavca__KeyframeMotion,
  _swigc__p_Piavca__LinearTransition,
  _swigc__p_Piavca__LookAtMotion,
  _swigc__p_Piavca__LookAtToFacial,
  _swigc__p_Piavca__LoopMotion,
  _swigc__p_Piavca__MaskedMotion,
  _swigc__p_Piavca__Motion,
  _swigc__p_Piavca__MotionAdder,
  _swigc__p_Piavca__MotionFilter,
  _swigc__p_Piavca__MotionImp,
  _swigc__p_Piavca__MotionMask,
  _swigc__p_Piavca__MotionParser,
  _swigc__p_Piavca__MotionPosture,
  _swigc__p_Piavca__MotionSaver,
  _swigc__p_Piavca__MotionTransition,
  _swigc__p_Piavca__MultiMotionCombiner,
  _swigc__p_Piavca__Object,
  _swigc__p_Piavca__ObjectTargetStruct,
  _swigc__p_Piavca__OverrideMotion,
  _swigc__p_Piavca__PointAt,
  _swigc__p_Piavca__PostureBlend,
  _swigc__p_Piavca__Proxemics,
  _swigc__p_Piavca__Quat,
  _swigc__p_Piavca__RandomChoiceMotion,
  _swigc__p_Piavca__RandomGazeMotion,
  _swigc__p_Piavca__RandomTimingsMotion,
  _swigc__p_Piavca__Reposition,
  _swigc__p_Piavca__ScaleMotion,
  _swigc__p_Piavca__ScaleMotionRoot,
  _swigc__p_Piavca__ScaleMotionSpeed,
  _swigc__p_Piavca__Sequence,
  _swigc__p_Piavca__SequentialChoiceMotion,
  _swigc__p_Piavca__SmoothLoop,
  _swigc__p_Piavca__SmoothSequence,
  _swigc__p_Piavca__SmoothTransition,
  _swigc__p_Piavca__SubMotion,
  _swigc__p_Piavca__Subtract,
  _swigc__p_Piavca__TimeCallback,
  _swigc__p_Piavca__TimeOffset,
  _swigc__p_Piavca__TimeWarp,
  _swigc__p_Piavca__TransitionFunction,
  _swigc__p_Piavca__TwoMotionCombiner,
  _swigc__p_Piavca__Vec,
  _swigc__p_Piavca__ZeroMotion,
  _swigc__p_Piavca__flagStruct,
  _swigc__p_Piavca__queueElement,
  _swigc__p_allocator_type,
  _swigc__p_char,
  _swigc__p_difference_type,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_p_Piavca__MotionParser,
  _swigc__p_p_PyObject,
  _swigc__p_size_type,
  _swigc__p_std__fstream,
  _swigc__p_std__ifstream,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__istringstream,
  _swigc__p_std__listTstd__string_t,
  _swigc__p_std__ofstream,
  _swigc__p_std__ostream,
  _swigc__p_std__ostringstream,
  _swigc__p_std__string,
  _swigc__p_std__stringstream,
  _swigc__p_std__type_info,
  _swigc__p_std__vectorTPiavca__AvatarTargetStruct_std__allocatorTPiavca__AvatarTargetStruct_t_t,
  _swigc__p_std__vectorTPiavca__Motion_p_std__allocatorTPiavca__Motion_p_t_t,
  _swigc__p_std__vectorTPiavca__ObjectTargetStruct_std__allocatorTPiavca__ObjectTargetStruct_t_t,
  _swigc__p_std__vectorTfloat_std__allocatorTfloat_t_t,
  _swigc__p_std__vectorTint_std__allocatorTint_t_t,
  _swigc__p_std__vectorTint_std__allocatorTint_t_t__allocator_type,
  _swigc__p_std__vectorTstd__pairTint_Piavca__Quat_t_std__allocatorTstd__pairTint_Piavca__Quat_t_t_t,
  _swigc__p_std__vectorTstd__pairTstd__string_int_t_std__allocatorTstd__pairTstd__string_int_t_t_t,
  _swigc__p_std__vectorTstd__string_std__allocatorTstd__string_t_t,
  _swigc__p_std__vectorTstd__string_std__allocatorTstd__string_t_t__allocator_type,
  _swigc__p_std__wstring,
  _swigc__p_swig__PySwigIterator,
  _swigc__p_value_type,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
    return PyString_FromString("<Swig global variables>");
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
    PyObject *str = PyString_FromString("(");
    swig_globalvar  *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", PyString_AsString(str));
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;  
    if (!type_init) {
      const PyTypeObject tmp
      = {
        PyObject_HEAD_INIT(NULL)
        0,                                  /* Number of items in variable part (ob_size) */
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        (destructor) swig_varlink_dealloc,   /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc)swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      varlink_type.ob_type = &PyType_Type;
      type_init = 1;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          size_t shift = (ci->ptype) - types;
          swig_type_info *ty = types_initial[shift];
          size_t ldoc = (c - methods[i].ml_doc);
          size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
          char *ndoc = (char*)malloc(ldoc + lptr + 10);
          if (ndoc) {
            char *buff = ndoc;
            void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
            if (ptr) {
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIG_init(void) {
  PyObject *m, *d;
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
  d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  SWIG_InstallConstants(d,swig_const_table);
  
  
  SWIG_Python_SetConstant(d, "LOCAL_COORD",SWIG_From_int(static_cast< int >(Piavca::LOCAL_COORD)));
  SWIG_Python_SetConstant(d, "JOINTLOCAL_COORD",SWIG_From_int(static_cast< int >(Piavca::JOINTLOCAL_COORD)));
  SWIG_Python_SetConstant(d, "BASE_COORD",SWIG_From_int(static_cast< int >(Piavca::BASE_COORD)));
  SWIG_Python_SetConstant(d, "INCLUDINGBASE_COORD",SWIG_From_int(static_cast< int >(Piavca::INCLUDINGBASE_COORD)));
  SWIG_Python_SetConstant(d, "WORLD_COORD",SWIG_From_int(static_cast< int >(Piavca::WORLD_COORD)));
  SWIG_Python_SetConstant(d, "root_position_id",SWIG_From_int(static_cast< int >(Piavca::root_position_id)));
  SWIG_Python_SetConstant(d, "root_orientation_id",SWIG_From_int(static_cast< int >(Piavca::root_orientation_id)));
  SWIG_Python_SetConstant(d, "NULL_TYPE",SWIG_From_int(static_cast< int >(Piavca::NULL_TYPE)));
  SWIG_Python_SetConstant(d, "FLOAT_TYPE",SWIG_From_int(static_cast< int >(Piavca::FLOAT_TYPE)));
  SWIG_Python_SetConstant(d, "VEC_TYPE",SWIG_From_int(static_cast< int >(Piavca::VEC_TYPE)));
  SWIG_Python_SetConstant(d, "QUAT_TYPE",SWIG_From_int(static_cast< int >(Piavca::QUAT_TYPE)));
  SWIG_Python_SetConstant(d, "TRANS_NONE",SWIG_From_int(static_cast< int >(Piavca::TRANS_NONE)));
  SWIG_Python_SetConstant(d, "TRANS_SWAP_XZ",SWIG_From_int(static_cast< int >(Piavca::TRANS_SWAP_XZ)));
  SWIG_Python_SetConstant(d, "TRANS_SWAP_XY",SWIG_From_int(static_cast< int >(Piavca::TRANS_SWAP_XY)));
  SWIG_Python_SetConstant(d, "TRANS_SWAP_YZ",SWIG_From_int(static_cast< int >(Piavca::TRANS_SWAP_YZ)));
  SWIG_Python_SetConstant(d, "TRANS_CYCLE_YZX",SWIG_From_int(static_cast< int >(Piavca::TRANS_CYCLE_YZX)));
  SWIG_Python_SetConstant(d, "TRANS_CYCLE_ZXY",SWIG_From_int(static_cast< int >(Piavca::TRANS_CYCLE_ZXY)));
  SWIG_Python_SetConstant(d, "TRANS_NEG_X",SWIG_From_int(static_cast< int >(Piavca::TRANS_NEG_X)));
  SWIG_Python_SetConstant(d, "TRANS_NEG_Y",SWIG_From_int(static_cast< int >(Piavca::TRANS_NEG_Y)));
  SWIG_Python_SetConstant(d, "TRANS_NEG_Z",SWIG_From_int(static_cast< int >(Piavca::TRANS_NEG_Z)));
  SWIG_Python_SetConstant(d, "TRANS_ARM_UP",SWIG_From_int(static_cast< int >(Piavca::TRANS_ARM_UP)));
  SWIG_Python_SetConstant(d, "TRANS_ARM_DOWN",SWIG_From_int(static_cast< int >(Piavca::TRANS_ARM_DOWN)));
  SWIG_Python_SetConstant(d, "TRANS_REVERSE_ORDER",SWIG_From_int(static_cast< int >(Piavca::TRANS_REVERSE_ORDER)));
  SWIG_Python_SetConstant(d, "TRANS_SKIP_FIRST_FRAME",SWIG_From_int(static_cast< int >(Piavca::TRANS_SKIP_FIRST_FRAME)));
  SWIG_Python_SetConstant(d, "TRANS_NO_ROOT_POS_CORRECTION",SWIG_From_int(static_cast< int >(Piavca::TRANS_NO_ROOT_POS_CORRECTION)));
  PyDict_SetItemString(d,(char*)"cvar", SWIG_globals());
  SWIG_addvarlink(SWIG_globals(),(char*)"Core_nullId",Core_nullId_get, Core_nullId_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Pi",Pi_get, Pi_set);
  SWIG_Python_SetConstant(d, "MotionTransition_MotionStart",SWIG_From_int(static_cast< int >(Piavca::MotionTransition::MotionStart)));
  SWIG_Python_SetConstant(d, "MotionTransition_MotionEnd",SWIG_From_int(static_cast< int >(Piavca::MotionTransition::MotionEnd)));
  SWIG_Python_SetConstant(d, "DiadicGazeMotion_talking",SWIG_From_int(static_cast< int >(Piavca::DiadicGazeMotion::talking)));
  SWIG_Python_SetConstant(d, "DiadicGazeMotion_listening",SWIG_From_int(static_cast< int >(Piavca::DiadicGazeMotion::listening)));
  SWIG_Python_SetConstant(d, "DiadicGazeMotion_neither",SWIG_From_int(static_cast< int >(Piavca::DiadicGazeMotion::neither)));
}

