/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.27
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};
#endif

/***********************************************************************
 *
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 *
 ************************************************************************/

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
#  if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#    define SWIGTEMPLATEDISAMBIGUATOR template
#  else
#    define SWIGTEMPLATEDISAMBIGUATOR 
#  endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__) || defined(__ICC)
#   define SWIGUNUSED __attribute__ ((unused)) 
# else
#   define SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods for Windows DLLs */
#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   define SWIGEXPORT
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif



#include <Python.h>

/***********************************************************************
 * swigrun.swg
 *
 *     This file contains generic CAPI SWIG runtime support for pointer
 *     type checking.
 *
 ************************************************************************/

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "2"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store inforomation on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;


/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (int)(*f1 - *f2);
  }
  return (l1 - f1) - (l2 - f2);
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}


/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu = 0;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * SWIG API. Portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * for internal method declarations
 * ----------------------------------------------------------------------------- */

#ifndef SWIGINTERN
#  define SWIGINTERN static SWIGUNUSED
#endif

#ifndef SWIGINTERNINLINE
#  define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/*
  Exception handling in wrappers
*/
#define SWIG_fail                goto fail
#define SWIG_arg_fail(arg)       SWIG_Python_ArgFail(arg)
#define SWIG_append_errmsg(msg)   SWIG_Python_AddErrMesg(msg,0)
#define SWIG_preppend_errmsg(msg) SWIG_Python_AddErrMesg(msg,1)
#define SWIG_type_error(type,obj) SWIG_Python_TypeError(type,obj)
#define SWIG_null_ref(type)       SWIG_Python_NullRef(type)

/*
  Contract support
*/
#define SWIG_contract_assert(expr, msg) \
 if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, (char *) msg ); goto fail; } else

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Alloc. memory flags
 * ----------------------------------------------------------------------------- */
#define SWIG_OLDOBJ  1
#define SWIG_NEWOBJ  SWIG_OLDOBJ + 1
#define SWIG_PYSTR   SWIG_NEWOBJ + 1

#ifdef __cplusplus
}
#endif


/***********************************************************************
 * pyrun.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

/* Common SWIG API */
#define SWIG_ConvertPtr(obj, pp, type, flags)    SWIG_Python_ConvertPtr(obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags)       SWIG_Python_NewPointerObj(p, type, flags)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)
 

/* Python-specific SWIG API */
#define SWIG_ConvertPacked(obj, ptr, sz, ty, flags)   SWIG_Python_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_NewPackedObj(ptr, sz, type)              SWIG_Python_NewPackedObj(ptr, sz, type)

/* Runtime API */
#define SWIG_GetModule(clientdata) SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer) SWIG_Python_SetModule(pointer)

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */
/*
  Use SWIG_NO_COBJECT_TYPES to force the use of strings to represent
  C/C++ pointers in the python side. Very useful for debugging, but
  not always safe.
*/
#if !defined(SWIG_NO_COBJECT_TYPES) && !defined(SWIG_COBJECT_TYPES)
#  define SWIG_COBJECT_TYPES
#endif

/* Flags for pointer conversion */
#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2


/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
#define PyOS_snprintf snprintf
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Create a new pointer string 
 * ----------------------------------------------------------------------------- */
#ifndef SWIG_BUFFER_SIZE
#define SWIG_BUFFER_SIZE 1024
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000
static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_BUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

#if PY_VERSION_HEX < 0x01060000
#define PyObject_Del(op) PyMem_DEL((op))
#endif

#if defined(SWIG_COBJECT_TYPES)
#if !defined(SWIG_COBJECT_PYTHON)
/* -----------------------------------------------------------------------------
 * Implements a simple Swig Object type, and use it instead of PyCObject
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *ptr;
  const char *desc;
} PySwigObject;

/* Declarations for objects of type PySwigObject */

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int flags)
{
  char result[SWIG_BUFFER_SIZE];
  flags = flags;
  if (SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result))) {
    fputs("<Swig Object at ", fp); fputs(result, fp); fputs(">", fp);
    return 0; 
  } else {
    return 1; 
  }
}
  
SWIGRUNTIME PyObject *
PySwigObject_repr(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result)) ?
    PyString_FromFormat("<Swig Object at %s>", result) : 0;
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->desc, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_format(const char* fmt, PySwigObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args && (PyTuple_SetItem(args, 0, PySwigObject_long(v)) == 0)) {
    PyObject *ofmt = PyString_FromString(fmt);
    if (ofmt) {
      res = PyString_Format(ofmt,args);
      Py_DECREF(ofmt);
    }
    Py_DECREF(args);
  }  
  return res;
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  return PySwigObject_format("%o",v);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  return PySwigObject_format("%x",v);
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  int c = strcmp(v->desc, w->desc);
  if (c) {
    return (c > 0) ? 1 : -1;
  } else {
    void *i = v->ptr;
    void *j = w->ptr;
    return (i < j) ? -1 : ((i > j) ? 1 : 0);
  }
}

SWIGRUNTIME void
PySwigObject_dealloc(PySwigObject *self)
{
  PyObject_Del(self);
}

SWIGRUNTIME PyTypeObject*
PySwigObject_type(void) {
  static char pyswigobject_type__doc__[] = 
    "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02020000
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */ 
#elif PY_VERSION_HEX >= 0x02000000
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject pyswigobject_type
#if !defined(__cplusplus)
  ;  
  static int type_init = 0;
  if (!type_init) {
    PyTypeObject tmp
#endif
    = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,					/*ob_size*/
    (char *)"PySwigObject",		/*tp_name*/
    sizeof(PySwigObject),		/*tp_basicsize*/
    0,					/*tp_itemsize*/
    /* methods */
    (destructor)PySwigObject_dealloc,	/*tp_dealloc*/
    (printfunc)PySwigObject_print,	/*tp_print*/
    (getattrfunc)0,			/*tp_getattr*/
    (setattrfunc)0,			/*tp_setattr*/
    (cmpfunc)PySwigObject_compare,	/*tp_compare*/
    (reprfunc)PySwigObject_repr,	/*tp_repr*/
    &PySwigObject_as_number,	        /*tp_as_number*/
    0,					/*tp_as_sequence*/
    0,					/*tp_as_mapping*/
    (hashfunc)0,			/*tp_hash*/
    (ternaryfunc)0,			/*tp_call*/
    (reprfunc)PySwigObject_str,		/*tp_str*/
    /* Space for future expansion */
    0,0,0,0,
    pyswigobject_type__doc__, 	        /* Documentation string */
#if PY_VERSION_HEX >= 0x02000000
    0,                                  /* tp_traverse */
    0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
    0,                                  /* tp_richcompare */
    0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
    0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
    0,0,0,0                             /* tp_alloc -> tp_next */
#endif
    };
#if !defined(__cplusplus)
    pyswigobject_type = tmp;
    type_init = 1;
  }
#endif
  return &pyswigobject_type;
}

SWIGRUNTIME PyObject *
PySwigObject_FromVoidPtrAndDesc(void *ptr, const char *desc)
{
  PySwigObject *self = PyObject_NEW(PySwigObject, PySwigObject_type());
  if (self) {
    self->ptr = ptr;
    self->desc = desc;
  }
  return (PyObject *)self;
}

SWIGRUNTIMEINLINE void *
PySwigObject_AsVoidPtr(PyObject *self)
{
  return ((PySwigObject *)self)->ptr;
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  return ((PySwigObject *)self)->desc;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  const char *desc;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int flags)
{
  char result[SWIG_BUFFER_SIZE];
  flags = flags;
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->desc,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->desc);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->desc);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->desc);
  } else {
    return PyString_FromString(v->desc);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  int c = strcmp(v->desc, w->desc);
  if (c) {
    return (c > 0) ? 1 : -1;
  } else {
    size_t i = v->size;
    size_t j = w->size;
    int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
    return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
  }
}

SWIGRUNTIME void
PySwigPacked_dealloc(PySwigPacked *self)
{
  free(self->pack);
  PyObject_Del(self);
}

SWIGRUNTIME PyTypeObject*
PySwigPacked_type(void) {
  static char pyswigpacked_type__doc__[] = 
    "Swig object carries a C/C++ instance pointer";
  static PyTypeObject pyswigpacked_type
#if !defined(__cplusplus)
  ;
  static int type_init = 0;  
  if (!type_init) {
    PyTypeObject tmp
#endif
    = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,					/*ob_size*/
    (char *)"PySwigPacked",		/*tp_name*/
    sizeof(PySwigPacked),		/*tp_basicsize*/
    0,					/*tp_itemsize*/
    /* methods */
    (destructor)PySwigPacked_dealloc,	/*tp_dealloc*/
    (printfunc)PySwigPacked_print,	/*tp_print*/
    (getattrfunc)0,			/*tp_getattr*/
    (setattrfunc)0,			/*tp_setattr*/
    (cmpfunc)PySwigPacked_compare,	/*tp_compare*/
    (reprfunc)PySwigPacked_repr,	/*tp_repr*/
    0,	                                /*tp_as_number*/
    0,					/*tp_as_sequence*/
    0,					/*tp_as_mapping*/
    (hashfunc)0,			/*tp_hash*/
    (ternaryfunc)0,			/*tp_call*/
    (reprfunc)PySwigPacked_str,		/*tp_str*/
    /* Space for future expansion */
    0,0,0,0,
    pyswigpacked_type__doc__, 	        /* Documentation string */
#if PY_VERSION_HEX >= 0x02000000
    0,                                  /* tp_traverse */
    0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
    0,                                  /* tp_richcompare */
    0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000         
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
    0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
    0,0,0,0                             /* tp_alloc -> tp_next */
#endif
    };
#if !defined(__cplusplus)
    pyswigpacked_type = tmp;
    type_init = 1;
  }
#endif
  return &pyswigpacked_type;
}

SWIGRUNTIME PyObject *
PySwigPacked_FromDataAndDesc(void *ptr, size_t size, const char *desc)
{
  PySwigPacked *self = PyObject_NEW(PySwigPacked, PySwigPacked_type());
  if (self == NULL) {
    return NULL;
  } else {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      self->pack = pack;
      self->desc = desc;
      self->size = size;
      return (PyObject *) self;
    }
    return NULL;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  PySwigPacked *self = (PySwigPacked *)obj;
  if (self->size != size) return 0;
  memcpy(ptr, self->pack, size);
  return self->desc;
}

SWIGRUNTIMEINLINE const char *
PySwigPacked_GetDesc(PyObject *self)
{
  return ((PySwigPacked *)self)->desc;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

#else
/* -----------------------------------------------------------------------------
 * Use the old Python PyCObject instead of PySwigObject
 * ----------------------------------------------------------------------------- */

#define PySwigObject_GetDesc(obj)	           PyCObject_GetDesc(obj)
#define PySwigObject_Check(obj)	           PyCObject_Check(obj)
#define PySwigObject_AsVoidPtr(obj)	   PyCObject_AsVoidPtr(obj)
#define PySwigObject_FromVoidPtrAndDesc(p, d)  PyCObject_FromVoidPtrAndDesc(p, d, NULL)

#endif

#endif

/* -----------------------------------------------------------------------------
 * errors manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}

SWIGRUNTIMEINLINE void
SWIG_Python_NullRef(const char *type)
{
  if (type) {
    PyErr_Format(PyExc_TypeError, "null reference of type '%s' was received",type);
  } else {
    PyErr_Format(PyExc_TypeError, "null reference was received");
  }
}

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}

SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}


/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

/* Convert a pointer value */
SWIGRUNTIME int
SWIG_Python_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_cast_info *tc;
  const char *c = 0;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;
  void *vptr;
  
  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }

#ifdef SWIG_COBJECT_TYPES
  if (!(PySwigObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PySwigObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  vptr = PySwigObject_AsVoidPtr(obj);
  c = (const char *) PySwigObject_GetDesc(obj);
  if (newref) { Py_DECREF(obj); }
  goto type_check;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  c = SWIG_UnpackVoidPtr(c, &vptr, ty->name);
  if (newref) { Py_DECREF(obj); }
  if (!c) goto type_error;
#endif

type_check:
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,vptr);
  } else {
    *ptr = vptr;
  }
  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
    PyObject_SetAttrString(pyobj,(char*)"thisown",Py_False);
  }
  return 0;

type_error:
  PyErr_Clear();
  if (pyobj && !obj) {    
    obj = pyobj;
    if (PyCFunction_Check(obj)) {
      /* here we get the method pointer for callbacks */
      char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
      c = doc ? strstr(doc, "swig_ptr: ") : 0;
      if (c) {
	c = ty ? SWIG_UnpackVoidPtr(c + 10, &vptr, ty->name) : 0;
	if (!c) goto type_error;
	goto type_check;
      }
    }
  }
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
    } else {
      SWIG_Python_TypeError("C/C++ pointer", obj);
    }
  }
  return -1;
}

/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty, int flags) {
  swig_cast_info *tc;
  const char *c = 0;

#if defined(SWIG_COBJECT_TYPES) && !defined(SWIG_COBJECT_PYTHON)
  c = PySwigPacked_UnpackData(obj, ptr, sz);
#else
  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  c = SWIG_UnpackDataName(c, ptr, sz, ty->name);
#endif
  if (!c) goto type_error;
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:
  PyErr_Clear();
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
    } else {
      SWIG_Python_TypeError("C/C++ packed data", obj);
    }
  }
  return -1;
}  

/* Create a new array object */
SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj = 0;
  if (!type) {
    if (!PyErr_Occurred()) {
      PyErr_Format(PyExc_TypeError, "Swig: null type passed to NewPointerObj");
    }
    return robj;
  }
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PySwigObject_FromVoidPtrAndDesc((void *) ptr, (char *)type->name);
#else
  {
    char result[SWIG_BUFFER_SIZE];
    robj = SWIG_PackVoidPtr(result, ptr, type->name, sizeof(result)) ?
      PyString_FromString(result) : 0;
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
        PyObject_SetAttrString(inst,(char*)"thisown",Py_True);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  PyObject *robj = 0;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#if defined(SWIG_COBJECT_TYPES) && !defined(SWIG_COBJECT_PYTHON)
  robj = PySwigPacked_FromDataAndDesc((void *) ptr, sz, (char *)type->name);
#else
  {
    char result[SWIG_BUFFER_SIZE];
    robj = SWIG_PackDataName(result, ptr, sz, type->name, sizeof(result)) ?
      PyString_FromString(result) : 0;
  }
#endif
  return robj;
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return -1;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return -1;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return -1;
  }
  if (PyDict_SetItemString(dict, name, o))
    return -1;
  Py_DECREF(o);
  return 0;
}
#endif

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, NULL);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  }
}

#ifdef __cplusplus
}
#endif


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_Piavca__Avatar swig_types[0]
#define SWIGTYPE_p_Piavca__AvatarMotionQueue swig_types[1]
#define SWIGTYPE_p_Piavca__AvatarPostureBlend swig_types[2]
#define SWIGTYPE_p_Piavca__AvatarTargetStruct swig_types[3]
#define SWIGTYPE_p_Piavca__AvatarTimeCallback swig_types[4]
#define SWIGTYPE_p_Piavca__BlendBetween swig_types[5]
#define SWIGTYPE_p_Piavca__ChoiceLoopMotion swig_types[6]
#define SWIGTYPE_p_Piavca__Core swig_types[7]
#define SWIGTYPE_p_Piavca__LookAtMotion swig_types[8]
#define SWIGTYPE_p_Piavca__LookAtToFacial swig_types[9]
#define SWIGTYPE_p_Piavca__LoopMotion swig_types[10]
#define SWIGTYPE_p_Piavca__MaskedMotion swig_types[11]
#define SWIGTYPE_p_Piavca__Motion swig_types[12]
#define SWIGTYPE_p_Piavca__MotionAdder swig_types[13]
#define SWIGTYPE_p_Piavca__MotionFilter swig_types[14]
#define SWIGTYPE_p_Piavca__MotionImp swig_types[15]
#define SWIGTYPE_p_Piavca__MotionMask swig_types[16]
#define SWIGTYPE_p_Piavca__MotionParser swig_types[17]
#define SWIGTYPE_p_Piavca__MotionSaver swig_types[18]
#define SWIGTYPE_p_Piavca__MultiMotionLoop swig_types[19]
#define SWIGTYPE_p_Piavca__Object swig_types[20]
#define SWIGTYPE_p_Piavca__ObjectTargetStruct swig_types[21]
#define SWIGTYPE_p_Piavca__ProxemicsLoop swig_types[22]
#define SWIGTYPE_p_Piavca__PyAvatarTimeCallback swig_types[23]
#define SWIGTYPE_p_Piavca__PyMotion swig_types[24]
#define SWIGTYPE_p_Piavca__PyTimeCallback swig_types[25]
#define SWIGTYPE_p_Piavca__Quat swig_types[26]
#define SWIGTYPE_p_Piavca__RandomAddLoop swig_types[27]
#define SWIGTYPE_p_Piavca__RandomBlendLoop swig_types[28]
#define SWIGTYPE_p_Piavca__RandomGazeMotion swig_types[29]
#define SWIGTYPE_p_Piavca__RandomLoopMotion swig_types[30]
#define SWIGTYPE_p_Piavca__RandomTimingsLoop swig_types[31]
#define SWIGTYPE_p_Piavca__ScaleMotion swig_types[32]
#define SWIGTYPE_p_Piavca__ScaleMotionRoot swig_types[33]
#define SWIGTYPE_p_Piavca__ScaleMotionSpeed swig_types[34]
#define SWIGTYPE_p_Piavca__SelfBlend swig_types[35]
#define SWIGTYPE_p_Piavca__SequentialBlend swig_types[36]
#define SWIGTYPE_p_Piavca__SubMotion swig_types[37]
#define SWIGTYPE_p_Piavca__TimeCallback swig_types[38]
#define SWIGTYPE_p_Piavca__TimeOffset swig_types[39]
#define SWIGTYPE_p_Piavca__TimeRangeMotion swig_types[40]
#define SWIGTYPE_p_Piavca__TrackMotion swig_types[41]
#define SWIGTYPE_p_Piavca__TurnMotion swig_types[42]
#define SWIGTYPE_p_Piavca__TwoMotionCombiner swig_types[43]
#define SWIGTYPE_p_Piavca__Vec swig_types[44]
#define SWIGTYPE_p_Piavca__ZeroMotion swig_types[45]
#define SWIGTYPE_p_Piavca__flagStruct swig_types[46]
#define SWIGTYPE_p_Piavca__queueElement swig_types[47]
#define SWIGTYPE_p_StringVector swig_types[48]
#define SWIGTYPE_p_char swig_types[49]
#define SWIGTYPE_p_float swig_types[50]
#define SWIGTYPE_p_int swig_types[51]
#define SWIGTYPE_p_istringstream swig_types[52]
#define SWIGTYPE_p_p_Piavca__MotionParser swig_types[53]
#define SWIGTYPE_p_std__fstream swig_types[54]
#define SWIGTYPE_p_std__ifstream swig_types[55]
#define SWIGTYPE_p_std__istringstream swig_types[56]
#define SWIGTYPE_p_std__listTtstring_t swig_types[57]
#define SWIGTYPE_p_std__ofstream swig_types[58]
#define SWIGTYPE_p_std__ostream swig_types[59]
#define SWIGTYPE_p_std__ostringstream swig_types[60]
#define SWIGTYPE_p_std__string swig_types[61]
#define SWIGTYPE_p_std__stringstream swig_types[62]
#define SWIGTYPE_p_std__vectorTPiavca__AvatarTargetStruct_t swig_types[63]
#define SWIGTYPE_p_std__vectorTPiavca__Motion_p_t swig_types[64]
#define SWIGTYPE_p_std__vectorTPiavca__ObjectTargetStruct_t swig_types[65]
#define SWIGTYPE_p_std__vectorTstd__pairTint_Piavca__Quat_t_t swig_types[66]
#define SWIGTYPE_p_std__vectorTstd__pairTtstring_int_t_t swig_types[67]
#define SWIGTYPE_p_std__vectorTstd__string_t swig_types[68]
#define SWIGTYPE_p_std__vectorTtstring_t swig_types[69]
#define SWIGTYPE_p_std__wstring swig_types[70]
#define SWIGTYPE_p_tostringstream swig_types[71]
#define SWIGTYPE_p_tstring swig_types[72]
#define SWIGTYPE_p_type_info swig_types[73]
#define SWIGTYPE_p_vectorTfloat_t swig_types[74]
#define SWIGTYPE_ptrdiff_t swig_types[75]
#define SWIGTYPE_size_t swig_types[76]
#define SWIGTYPE_std__ptrdiff_t swig_types[77]
#define SWIGTYPE_std__size_t swig_types[78]
static swig_type_info *swig_types[80];
static swig_module_info swig_module = {swig_types, 79, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _Piavca.so
  ------------------------------------------------*/
#define SWIG_init    init_Piavca

#define SWIG_name    "_Piavca"


#define NO_PIAVCA_DLL

#include "PiavcaNVCLib/Piavca.h"
#include "PyTimeCallback.h"
#include "PyMotion.h"

#include <sstream>

//#include "PiavcaDllImports.h"


Piavca::Avatar *GetAvatarPointer(long l)
{
	Piavca::Avatar *a = (Piavca::Avatar *) l;
	return a;
};
Piavca::Core *GetPiavcaCorePointer(long l)
{
	return (Piavca::Core *) l;
};

using namespace Piavca;

Quat PyQuat_AsQuat(PyObject *obj)
{
	Quat retVal, *res;
	if ((SWIG_ConvertPtr(obj,(void **) &res, SWIGTYPE_p_Piavca__Quat, 1 | 0 )) != -1)
	{
		retVal =  *res;
	}
	return retVal;
}

Vec PyVec_AsVec(PyObject *obj)
{
	Vec retVal, *res;
	if ((SWIG_ConvertPtr(obj,(void **) &res, SWIGTYPE_p_Piavca__Vec, 1 | 0 )) != -1)
	{
		retVal =  *res;
	}
	return retVal;
}

//PyObject *GetPythonJointIterator(JointIterator joint)
//{
//    JointIterator *jointptr = new JointIterator((JointIterator &) joint);
//	PyObject *pythonJoint = SWIG_NewPointerObj((void *) jointptr, SWIGTYPE_p_JointIterator, 1);
//	return pythonJoint;
//};


SWIGINTERN int
  SWIG_AsVal_long(PyObject * obj, long* val)
{
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return 1;
    } else {
      if (!val) PyErr_Clear();
      return 0;
    }
  }
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return 1;
  }
  if (val) {
    SWIG_type_error("long", obj);
  }
  return 0;
 }


SWIGINTERNINLINE long
SWIG_As_long(PyObject* obj)
{
  long v;
  if (!SWIG_AsVal_long(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(long));
  }
  return v;
}

  
SWIGINTERNINLINE int
SWIG_Check_long(PyObject* obj)
{
  return SWIG_AsVal_long(obj, (long*)0);
}


#include <float.h>
SWIGINTERN int
  SWIG_CheckDoubleInRange(double value, double min_value, 
			  double max_value, const char* errmsg)
{
  if (value < min_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError, 
		   "value %g is less than %s minimum %g", 
		   value, errmsg, min_value);
    }
    return 0;
  } else if (value > max_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError, 
		   "value %g is greater than %s maximum %g", 
		   value, errmsg, max_value);
    }
    return 0;
  }
  return 1;
}


SWIGINTERN int
  SWIG_AsVal_double(PyObject *obj, double *val)
{
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return 1;
  }  
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return 1;
  }
  if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return 1;
    } else {
      if (!val) PyErr_Clear();
      return 0;
    }
  }
  if (val) {
    SWIG_type_error("double", obj);
  }
  return 0;
}


SWIGINTERN int
  SWIG_AsVal_float(PyObject *obj, float *val)
{
  const char* errmsg = val ? "float" : (char*)0;
  double v;
  if (SWIG_AsVal_double(obj, &v)) {
    if (SWIG_CheckDoubleInRange(v, -FLT_MAX, FLT_MAX, errmsg)) {
      if (val) *val = static_cast<float >(v);
      return 1;
    } else {
      return 0;
    }
  } else {
    PyErr_Clear();
  }
  if (val) {
    SWIG_type_error(errmsg, obj);
  }
  return 0;
}


SWIGINTERNINLINE float
SWIG_As_float(PyObject* obj)
{
  float v;
  if (!SWIG_AsVal_float(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(float));
  }
  return v;
}

  
SWIGINTERNINLINE int
SWIG_Check_float(PyObject* obj)
{
  return SWIG_AsVal_float(obj, (float*)0);
}


  /*@C:\\Program Files\\swigwin-1.3.27\\Lib\\python\\pymacros.swg,72,SWIG_define@*/
#define SWIG_From_float PyFloat_FromDouble
/*@@*/


SWIGINTERNINLINE PyObject*
  SWIG_From_bool(bool value)
{
  PyObject *obj = value ? Py_True : Py_False;
  Py_INCREF(obj);
  return obj;
}

static PyObject *Piavca_Vec___getitem__(Piavca::Vec *self,PyObject *args){	
		int i;
		//if(!PyArg_ParseTuple(args, "i", &i))
		//	return NULL;
		i = (int) PyInt_AsLong(args);
		return Py_BuildValue("d", (*self)[i]);
	}
static PyObject *Piavca_Vec___setitem__(Piavca::Vec *self,PyObject *args){
		int i;
		float f;
		if(!PyArg_ParseTuple(args, "if", &i, &f))
			return NULL;
		(*self)[i] = f;
	
		Py_INCREF(Py_None);
		return Py_None;
	}
static PyObject *Piavca_Vec___repr__(Piavca::Vec *self){
		std::ostringstream os;
		os << (*self);
		return Py_BuildValue("s", os.str().c_str());
	}
static PyObject *Piavca_Quat___getitem__(Piavca::Quat *self,PyObject *args){	
		int i;
		//if(!PyArg_ParseTuple(args, "i", &i))
		//	return NULL;
		i = (int) PyInt_AsLong(args);
		return Py_BuildValue("d", (*self)[i]);
	}
static PyObject *Piavca_Quat___setitem__(Piavca::Quat *self,PyObject *args){
		int i;
		float f;
		if(!PyArg_ParseTuple(args, "if", &i, &f))
			return NULL;
		(*self)[i] = f;
	
		Py_INCREF(Py_None);
		return Py_None;
	}
static PyObject *Piavca_Quat___repr__(Piavca::Quat *self){
		std::ostringstream os;
		os << (*self);
		return Py_BuildValue("s", os.str().c_str());
	}

  /*@C:\\Program Files\\swigwin-1.3.27\\Lib\\python\\pymacros.swg,72,SWIG_define@*/
#define SWIG_From_int PyInt_FromLong
/*@@*/


#include <limits.h>


SWIGINTERN int
  SWIG_CheckLongInRange(long value, long min_value, long max_value,
			const char *errmsg)
{
  if (value < min_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError, 
		   "value %ld is less than '%s' minimum %ld", 
		   value, errmsg, min_value);
    }
    return 0;    
  } else if (value > max_value) {
    if (errmsg) {
      PyErr_Format(PyExc_OverflowError,
		   "value %ld is greater than '%s' maximum %ld", 
		   value, errmsg, max_value);
    }
    return 0;
  }
  return 1;
}


#if INT_MAX != LONG_MAX
SWIGINTERN int
  SWIG_AsVal_int(PyObject *obj, int *val)
{ 
  const char* errmsg = val ? "int" : (char*)0;
  long v;
  if (SWIG_AsVal_long(obj, &v)) {
    if (SWIG_CheckLongInRange(v, INT_MIN,INT_MAX, errmsg)) {
      if (val) *val = static_cast<int >(v);
      return 1;
    } else {
      return 0;
    }
  } else {
    PyErr_Clear();
  }
  if (val) {
    SWIG_type_error(errmsg, obj);
  }
  return 0;    
}
#else
SWIGINTERNINLINE int
  SWIG_AsVal_int(PyObject *obj, int *val)
{
  return SWIG_AsVal_long(obj,(long*)val);
}
#endif


SWIGINTERNINLINE int
SWIG_As_int(PyObject* obj)
{
  int v;
  if (!SWIG_AsVal_int(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(int));
  }
  return v;
}

  
SWIGINTERNINLINE int
SWIG_Check_int(PyObject* obj)
{
  return SWIG_AsVal_int(obj, (int*)0);
}


SWIGINTERN int
  SWIG_AsVal_bool(PyObject *obj, bool *val)
{
  if (obj == Py_True) {
    if (val) *val = true;
    return 1;
  }
  if (obj == Py_False) {
    if (val) *val = false;
    return 1;
  }
  int res = 0;
  if (SWIG_AsVal_int(obj, &res)) {    
    if (val) *val = res ? true : false;
    return 1;
  } else {
    PyErr_Clear();
  }  
  if (val) {
    SWIG_type_error("bool", obj);
  }
  return 0;
}


SWIGINTERNINLINE bool
SWIG_As_bool(PyObject* obj)
{
  bool v;
  if (!SWIG_AsVal_bool(obj, &v)) {
    /*
      this is needed to make valgrind/purify happier. 
     */
    memset((void*)&v, 0, sizeof(bool));
  }
  return v;
}

  
SWIGINTERNINLINE int
SWIG_Check_bool(PyObject* obj)
{
  return SWIG_AsVal_bool(obj, (bool*)0);
}


/* returns SWIG_OLDOBJ if the input is a raw char*, SWIG_PYSTR if is a PyString */
SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize)
{
  static swig_type_info* pchar_info = 0;
  char* vptr = 0;
  if (!pchar_info) pchar_info = SWIG_TypeQuery("char *");
  if (SWIG_ConvertPtr(obj, (void**)&vptr, pchar_info, 0) != -1) {
    if (cptr) *cptr = vptr;
    if (psize) *psize = vptr ? (strlen(vptr) + 1) : 0;
    return SWIG_OLDOBJ;
  } else {
    PyErr_Clear();
    if (PyString_Check(obj)) {
      if (cptr) {
	*cptr = PyString_AS_STRING(obj);
	if (psize) {
	  *psize = PyString_GET_SIZE(obj) + 1;
	}
      }
      return SWIG_PYSTR;
    }
  }
  if (cptr) {
    SWIG_type_error("char *", obj);
  }
  return 0;
}


SWIGINTERNINLINE int
SWIG_AsCharPtr(PyObject *obj, char **val)
{
  if (SWIG_AsCharPtrAndSize(obj, val, (size_t*)(0))) {
    return 1;
  }
  if (val) {
    PyErr_Clear();
    SWIG_type_error("char *", obj);
  }
  return 0;
}

static Piavca::Motion *Piavca_Core_loadMotion__SWIG_7(Piavca::Core *self,char const *motionName,char const *motionFileName,int flags=0,bool temp=false,Piavca::Motion *basePosture=NULL){
		self->loadMotion(StringToTString(motionName),
						 StringToTString(motionFileName),
						 flags,
						 temp, 
						 basePosture);
		return self->getMotion(StringToTString(motionName));
	}
static Piavca::Motion *Piavca_Core_loadMotion__SWIG_11(Piavca::Core *self,char const *motionName,Piavca::Motion *mot,bool temp=false,Piavca::Motion *basePosture=NULL){
		self->loadMotion(StringToTString(motionName),
						 mot,
						 temp, 
						 basePosture);
		return self->getMotion(StringToTString(motionName));
	}
static Piavca::Motion *Piavca_Core_getMotion__SWIG_2(Piavca::Core *self,char const *motionName){
		return self->getMotion(StringToTString(motionName));
	}
static bool Piavca_Avatar_setFacialExpressionWeight__SWIG_2(Piavca::Avatar *self,char const *name,float weight){
		int exprId = Piavca::Core::getCore()->getExpressionId((name));
		if(exprId < 0)
			Piavca::Error(tstring("Unknown facial expression") + (name));
		return self->setFacialExpressionWeight(exprId, weight);
	}
static float Piavca_Avatar_getFacialExpressionWeight__SWIG_1(Piavca::Avatar *self,char const *name){
		return self->getFacialExpressionWeight(
			Piavca::Core::getCore()->getExpressionId((name)));
	}
static void Piavca_Avatar_setJointOrientation__SWIG_4(Piavca::Avatar *self,char const *jointName,Piavca::Quat const &val,char const *worldCoord="JOINTLOCAL_COORD"){
		if(std::string(worldCoord) == "LOCAL_COORD")
			self->setJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				val, Piavca::LOCAL_COORD);
		if(std::string(worldCoord) == "JOINTLOCAL_COORD")
			self->setJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				val, Piavca::JOINTLOCAL_COORD);
		if(std::string(worldCoord) == "WORLD_COORD")
			self->setJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				val, Piavca::LOCAL_COORD);
	}
static Piavca::Quat Piavca_Avatar_getJointOrientation__SWIG_2(Piavca::Avatar *self,char const *jointName,char const *worldCoord="JOINTLOCAL_COORD"){
		if(std::string(worldCoord) == "LOCAL_COORD")
			return self->getJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::LOCAL_COORD);
		if(std::string(worldCoord) == "JOINTLOCAL_COORD")
			return self->getJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::JOINTLOCAL_COORD);
		if(std::string(worldCoord) == "WORLD_COORD")
			return self->getJointOrientation(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::LOCAL_COORD);
	}
static Piavca::Vec Piavca_Avatar_getJointBasePosition__SWIG_2(Piavca::Avatar *self,char const *jointName,char const *worldCoord="LOCAL_COORD"){
		if(std::string(worldCoord) == "LOCAL_COORD")
			return self->getJointBasePosition(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::LOCAL_COORD);
		if(std::string(worldCoord) == "JOINTLOCAL_COORD")
			return self->getJointBasePosition(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::JOINTLOCAL_COORD);
		if(std::string(worldCoord) == "WORLD_COORD")
			return self->getJointBasePosition(
				Piavca::Core::getCore()->getExpressionId((jointName)),
				Piavca::LOCAL_COORD);
	}
static void Piavca_Avatar_play_motion__SWIG_0(Piavca::Avatar *self,Piavca::Motion *m){
		Piavca::AvatarMotionQueue::getQueue(self)->enqueueMotion("", m);
  
	}
static void Piavca_Avatar_play_motion__SWIG_1(Piavca::Avatar *self,char const *motionName){
		Piavca::AvatarMotionQueue::getQueue(self)->enqueueMotion
				((motionName), 
				Piavca::Core::getCore()->getMotion((motionName)));
  
	}
static void Piavca_Avatar_add_background_motion__SWIG_0(Piavca::Avatar *self,Piavca::Motion *m){
		Piavca::AvatarMotionQueue::getQueue(self)->addBackgroundMotion("", m);
  
	}
static void Piavca_Avatar_add_background_motion__SWIG_1(Piavca::Avatar *self,char const *motionName){
		Piavca::AvatarMotionQueue::getQueue(self)->addBackgroundMotion
				((motionName), 
				Piavca::Core::getCore()->getMotion((motionName)));
  
	}
#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_GetAvatarPointer(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    long arg1 ;
    Piavca::Avatar *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:GetAvatarPointer",&obj0)) goto fail;
    {
        arg1 = static_cast<long >(SWIG_As_long(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::Avatar *)GetAvatarPointer(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Avatar, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetPiavcaCorePointer(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    long arg1 ;
    Piavca::Core *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:GetPiavcaCorePointer",&obj0)) goto fail;
    {
        arg1 = static_cast<long >(SWIG_As_long(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::Core *)GetPiavcaCorePointer(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Core, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Vec__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Vec")) goto fail;
    result = (Piavca::Vec *)new Piavca::Vec();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Vec__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    float arg2 ;
    float arg3 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_Vec",&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::Vec *)new Piavca::Vec(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Vec__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float *arg1 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Vec",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_float, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Vec *)new Piavca::Vec((float const (*))arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Vec__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = 0 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Vec",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::Vec *)new Piavca::Vec((Piavca::Vec const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Vec(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_Vec__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_float, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_Vec__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_Vec__SWIG_3(self,args);
        }
    }
    if (argc == 3) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_Vec__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_Vec'");
    return NULL;
}


static PyObject *_wrap_delete_Vec(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Vec",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_X__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec_X",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float &_result_ref = (arg1)->X();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = PyFloat_FromDouble(*result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_Y__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec_Y",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float &_result_ref = (arg1)->Y();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = PyFloat_FromDouble(*result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_Z__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec_Z",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float &_result_ref = (arg1)->Z();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = PyFloat_FromDouble(*result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_X__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec_X",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float const &_result_ref = ((Piavca::Vec const *)arg1)->X();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = SWIG_From_float(static_cast<float >(*result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_X(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Vec_X__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Vec_X__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Vec_X'");
    return NULL;
}


static PyObject *_wrap_Vec_Y__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec_Y",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float const &_result_ref = ((Piavca::Vec const *)arg1)->Y();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = SWIG_From_float(static_cast<float >(*result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_Y(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Vec_Y__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Vec_Y__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Vec_Y'");
    return NULL;
}


static PyObject *_wrap_Vec_Z__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec_Z",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float const &_result_ref = ((Piavca::Vec const *)arg1)->Z();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = SWIG_From_float(static_cast<float >(*result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_Z(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Vec_Z__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Vec_Z__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Vec_Z'");
    return NULL;
}


static PyObject *_wrap_Vec_XAxis(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec result;
    
    if(!PyArg_ParseTuple(args,(char *)":Vec_XAxis")) goto fail;
    result = Piavca::Vec::XAxis();
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_YAxis(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec result;
    
    if(!PyArg_ParseTuple(args,(char *)":Vec_YAxis")) goto fail;
    result = Piavca::Vec::YAxis();
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_ZAxis(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec result;
    
    if(!PyArg_ParseTuple(args,(char *)":Vec_ZAxis")) goto fail;
    result = Piavca::Vec::ZAxis();
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_mag(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec_mag",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::Vec const *)arg1)->mag();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___add____SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___add__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Vec const *)arg1)->operator +((Piavca::Vec const &)*arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec const & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___iadd____SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___iadd__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Vec const &_result_ref = (arg1)->operator +=((Piavca::Vec const &)*arg2);
        result = (Piavca::Vec *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___add____SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float arg2 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___add__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Vec const *)arg1)->operator +(arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec const & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___add__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Vec___add____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Vec___add____SWIG_1(self,args);
            }
        }
    }
    
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


static PyObject *_wrap_Vec___iadd____SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float arg2 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___iadd__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Vec const &_result_ref = (arg1)->operator +=(arg2);
        result = (Piavca::Vec *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___iadd__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Vec___iadd____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Vec___iadd____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Vec___iadd__'");
    return NULL;
}


static PyObject *_wrap_Vec___sub____SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___sub__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Vec const *)arg1)->operator -((Piavca::Vec const &)*arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec const & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___isub____SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___isub__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Vec const &_result_ref = (arg1)->operator -=((Piavca::Vec const &)*arg2);
        result = (Piavca::Vec *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___sub____SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float arg2 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___sub__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Vec const *)arg1)->operator -(arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec const & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___sub__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Vec___sub____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Vec___sub____SWIG_1(self,args);
            }
        }
    }
    
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


static PyObject *_wrap_Vec___isub____SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float arg2 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___isub__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Vec const &_result_ref = (arg1)->operator -=(arg2);
        result = (Piavca::Vec *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___isub__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Vec___isub____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Vec___isub____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Vec___isub__'");
    return NULL;
}


static PyObject *_wrap_Vec___neg__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec___neg__",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = ((Piavca::Vec const *)arg1)->operator -();
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec const & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___mul____SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___mul__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Vec const *)arg1)->operator *((Piavca::Vec const &)*arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec const & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___imul____SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___imul__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Vec const &_result_ref = (arg1)->operator *=((Piavca::Vec const &)*arg2);
        result = (Piavca::Vec *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___mul____SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float arg2 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___mul__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Vec const *)arg1)->operator *(arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec const & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___mul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Vec___mul____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Vec___mul____SWIG_1(self,args);
            }
        }
    }
    
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


static PyObject *_wrap_Vec___imul____SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float arg2 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___imul__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Vec const &_result_ref = (arg1)->operator *=(arg2);
        result = (Piavca::Vec *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___imul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Vec___imul____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Vec___imul____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Vec___imul__'");
    return NULL;
}


static PyObject *_wrap_Vec___div____SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___div__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Vec const *)arg1)->operator /((Piavca::Vec const &)*arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec const & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___idiv____SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___idiv__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Vec const &_result_ref = (arg1)->operator /=((Piavca::Vec const &)*arg2);
        result = (Piavca::Vec *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___div____SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float arg2 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___div__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Vec const *)arg1)->operator /(arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec const & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___div__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Vec___div____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Vec___div____SWIG_1(self,args);
            }
        }
    }
    
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


static PyObject *_wrap_Vec___idiv____SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    float arg2 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___idiv__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Vec const &_result_ref = (arg1)->operator /=(arg2);
        result = (Piavca::Vec *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___idiv__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Vec___idiv____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Vec___idiv____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Vec___idiv__'");
    return NULL;
}


static PyObject *_wrap_Vec___eq__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___eq__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::Vec const *)arg1)->operator ==((Piavca::Vec const &)*arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___ne__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___ne__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::Vec const *)arg1)->operator !=((Piavca::Vec const &)*arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_inverse(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec_inverse",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = ((Piavca::Vec const *)arg1)->inverse();
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_invert(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec_invert",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->invert();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_dot(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec_dot",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (float)((Piavca::Vec const *)arg1)->dot((Piavca::Vec const &)*arg2);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_cross(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec_cross",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Vec const *)arg1)->cross((Piavca::Vec const &)*arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_crossinplace(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec_crossinplace",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Vec const &_result_ref = (arg1)->crossinplace((Piavca::Vec const &)*arg2);
        result = (Piavca::Vec *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_normalized(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec_normalized",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = ((Piavca::Vec const *)arg1)->normalized();
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec_normalize(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec_normalize",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->normalize();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___getitem__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___getitem__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    result = (PyObject *)Piavca_Vec___getitem__(arg1,arg2);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___setitem__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Vec___setitem__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    result = (PyObject *)Piavca_Vec___setitem__(arg1,arg2);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Vec___repr__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = (Piavca::Vec *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Vec___repr__",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (PyObject *)Piavca_Vec___repr__(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Vec_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__Vec, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Quat__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Quat")) goto fail;
    result = (Piavca::Quat *)new Piavca::Quat();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Quat, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Quat__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    Piavca::Quat *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:new_Quat",&obj0,&obj1,&obj2,&obj3)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::Quat *)new Piavca::Quat(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Quat, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Quat__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float *arg1 ;
    Piavca::Quat *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Quat",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_float, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Quat *)new Piavca::Quat((float const (*))arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Quat, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Quat__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Quat *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_Quat",&obj0,&obj1)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Quat *)new Piavca::Quat(arg1,(Piavca::Vec const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Quat, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Quat__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = 0 ;
    Piavca::Quat *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Quat",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::Quat *)new Piavca::Quat((Piavca::Quat const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Quat, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Quat(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_Quat__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_float, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_Quat__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_Quat__SWIG_4(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_new_Quat__SWIG_3(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        return _wrap_new_Quat__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_Quat'");
    return NULL;
}


static PyObject *_wrap_delete_Quat(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Quat",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_S__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_S",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float const &_result_ref = ((Piavca::Quat const *)arg1)->S();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = SWIG_From_float(static_cast<float >(*result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_I__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_I",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float const &_result_ref = ((Piavca::Quat const *)arg1)->I();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = SWIG_From_float(static_cast<float >(*result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_J__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_J",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float const &_result_ref = ((Piavca::Quat const *)arg1)->J();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = SWIG_From_float(static_cast<float >(*result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_K__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_K",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float const &_result_ref = ((Piavca::Quat const *)arg1)->K();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = SWIG_From_float(static_cast<float >(*result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_S__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_S",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float &_result_ref = (arg1)->S();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = PyFloat_FromDouble(*result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_S(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Quat_S__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Quat_S__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Quat_S'");
    return NULL;
}


static PyObject *_wrap_Quat_I__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_I",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float &_result_ref = (arg1)->I();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = PyFloat_FromDouble(*result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_I(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Quat_I__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Quat_I__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Quat_I'");
    return NULL;
}


static PyObject *_wrap_Quat_J__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_J",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float &_result_ref = (arg1)->J();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = PyFloat_FromDouble(*result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_J(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Quat_J__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Quat_J__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Quat_J'");
    return NULL;
}


static PyObject *_wrap_Quat_K__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_K",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        float &_result_ref = (arg1)->K();
        result = (float *) &_result_ref;
    }
    
    {
        resultobj = PyFloat_FromDouble(*result);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_K(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Quat_K__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Quat_K__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Quat_K'");
    return NULL;
}


static PyObject *_wrap_Quat_setAngleAxis__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float arg2 ;
    Piavca::Vec *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Quat_setAngleAxis",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->setAngleAxis(arg2,(Piavca::Vec const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_setAngleAxis__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:Quat_setAngleAxis",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = static_cast<float >(SWIG_As_float(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    (arg1)->setAngleAxis(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_setAngleAxis(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    return _wrap_Quat_setAngleAxis__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        _v = SWIG_Check_float(argv[4]);
                        if (_v) {
                            return _wrap_Quat_setAngleAxis__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Quat_setAngleAxis'");
    return NULL;
}


static PyObject *_wrap_Quat_getAngleAxis(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float *arg2 = 0 ;
    Piavca::Vec *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Quat_getAngleAxis",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_float, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("float");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    ((Piavca::Quat const *)arg1)->getAngleAxis(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_getAngle(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_getAngle",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::Quat const *)arg1)->getAngle();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_getAxis(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_getAxis",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = ((Piavca::Quat const *)arg1)->getAxis();
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_getEulerAngles(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float *arg2 = 0 ;
    float *arg3 = 0 ;
    float *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Quat_getEulerAngles",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_float, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("float");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_float, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("float");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_float, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (arg4 == NULL) {
            SWIG_null_ref("float");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    (arg1)->getEulerAngles(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_Xangle(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_Xangle",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->Xangle();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_Yangle(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_Yangle",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->Yangle();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_Zangle(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_Zangle",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->Zangle();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_pointAt(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec *arg3 = 0 ;
    Piavca::Quat *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Quat_pointAt",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        Piavca::Quat &_result_ref = (arg1)->pointAt((Piavca::Vec const &)*arg2,(Piavca::Vec const &)*arg3);
        result = (Piavca::Quat *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Quat, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat___mul__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    Piavca::Quat *arg2 = 0 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Quat___mul__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Quat const *)arg1)->operator *((Piavca::Quat const &)*arg2);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat const & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat___imul__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    Piavca::Quat *arg2 = 0 ;
    Piavca::Quat *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Quat___imul__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Quat const &_result_ref = (arg1)->operator *=((Piavca::Quat const &)*arg2);
        result = (Piavca::Quat *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Quat, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat___div__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    Piavca::Quat *arg2 = 0 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Quat___div__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Quat const *)arg1)->operator /((Piavca::Quat const &)*arg2);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat const & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat___idiv__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    Piavca::Quat *arg2 = 0 ;
    Piavca::Quat *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Quat___idiv__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Quat const &_result_ref = (arg1)->operator /=((Piavca::Quat const &)*arg2);
        result = (Piavca::Quat *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Quat, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat___eq__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    Piavca::Quat *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Quat___eq__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::Quat const *)arg1)->operator ==((Piavca::Quat const &)*arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat___ne__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    Piavca::Quat *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Quat___ne__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::Quat const *)arg1)->operator !=((Piavca::Quat const &)*arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_Scale(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Quat_Scale",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->Scale(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_inverse(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_inverse",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = ((Piavca::Quat const *)arg1)->inverse();
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_invert(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_invert",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->invert();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_normalise(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat_normalise",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->normalise();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_transform(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Quat_transform",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = ((Piavca::Quat const *)arg1)->transform((Piavca::Vec const &)*arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat_transformInPlace(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Quat_transformInPlace",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    ((Piavca::Quat const *)arg1)->transformInPlace(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_slerp(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = 0 ;
    Piavca::Quat *arg2 = 0 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:slerp",&obj0,&obj1,&obj2)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = slerp((Piavca::Quat const &)*arg1,(Piavca::Quat const &)*arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat___getitem__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Quat___getitem__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    result = (PyObject *)Piavca_Quat___getitem__(arg1,arg2);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat___setitem__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Quat___setitem__",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    result = (PyObject *)Piavca_Quat___setitem__(arg1,arg2);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Quat___repr__(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Quat *arg1 = (Piavca::Quat *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Quat___repr__",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (PyObject *)Piavca_Quat___repr__(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Quat_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__Quat, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_delete_TimeCallback(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeCallback *arg1 = (Piavca::TimeCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_TimeCallback",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeCallback_getName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeCallback *arg1 = (Piavca::TimeCallback *) 0 ;
    tstring result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TimeCallback_getName",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getName();
    
    {
        resultobj = PyString_FromString(TStringToString(result).c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeCallback_init(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeCallback *arg1 = (Piavca::TimeCallback *) 0 ;
    Piavca::Core *arg2 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TimeCallback_init",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->init(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeCallback_timeStep(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeCallback *arg1 = (Piavca::TimeCallback *) 0 ;
    Piavca::Core *arg2 = (Piavca::Core *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TimeCallback_timeStep",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->timeStep(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * TimeCallback_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__TimeCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_delete_AvatarTimeCallback(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTimeCallback *arg1 = (Piavca::AvatarTimeCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_AvatarTimeCallback",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarTimeCallback_getName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTimeCallback *arg1 = (Piavca::AvatarTimeCallback *) 0 ;
    tstring result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarTimeCallback_getName",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getName();
    
    {
        resultobj = PyString_FromString(TStringToString(result).c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarTimeCallback_init(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTimeCallback *arg1 = (Piavca::AvatarTimeCallback *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarTimeCallback_init",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->init(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarTimeCallback_timeStep(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTimeCallback *arg1 = (Piavca::AvatarTimeCallback *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:AvatarTimeCallback_timeStep",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->timeStep(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * AvatarTimeCallback_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__AvatarTimeCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_Core_dir_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_dir_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    if (arg1) (arg1)->dir = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_dir_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_dir_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result =  ((arg1)->dir);
    
    {
        resultobj = PyString_FromString(TStringToString(result).c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Core(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Core",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_reset(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_reset",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getCore(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *result;
    
    if(!PyArg_ParseTuple(args,(char *)":Core_getCore")) goto fail;
    result = (Piavca::Core *)Piavca::Core::getCore();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Core, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_registerCallback(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::TimeCallback *arg2 = (Piavca::TimeCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_registerCallback",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__TimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->registerCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_timeStep__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_timeStep",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->timeStep();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_timeStep__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_timeStep",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->timeStep(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_timeStep(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Core_timeStep__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Core_timeStep__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Core_timeStep'");
    return NULL;
}


static PyObject *_wrap_Core_prerender(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_prerender",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->prerender();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_render(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_render",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->render();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getJointId(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getJointId",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    result = (int)(arg1)->getJointId(arg2);
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getMaxJointId(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getMaxJointId",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)(arg1)->getMaxJointId();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_addJointNameSet(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    StringVector arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_addJointNameSet",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        StringVector * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_StringVector, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("StringVector");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    (arg1)->addJointNameSet(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getJointName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    int arg2 ;
    tstring result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getJointName",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (arg1)->getJointName(arg2);
    
    {
        resultobj = PyString_FromString(TStringToString(result).c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getJointNameAssociations(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    std::vector<std::pair<tstring,int > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getJointNameAssociations",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getJointNameAssociations();
    
    {
        std::vector<std::pair<tstring,int > > * resultptr;
        resultptr = new std::vector<std::pair<tstring,int > >(static_cast<std::vector<std::pair<tstring,int > > & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_std__vectorTstd__pairTtstring_int_t_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getExpressionId(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getExpressionId",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    result = (int)(arg1)->getExpressionId(arg2);
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getMaxExpressionId(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getMaxExpressionId",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)(arg1)->getMaxExpressionId();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_addExpressionNameSet(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    StringVector arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_addExpressionNameSet",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        StringVector * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_StringVector, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("StringVector");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    (arg1)->addExpressionNameSet(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getExpressionName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    int arg2 ;
    tstring result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getExpressionName",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (arg1)->getExpressionName(arg2);
    
    {
        resultobj = PyString_FromString(TStringToString(result).c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getExpressionNameAssociations(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    std::vector<std::pair<tstring,int > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getExpressionNameAssociations",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getExpressionNameAssociations();
    
    {
        std::vector<std::pair<tstring,int > > * resultptr;
        resultptr = new std::vector<std::pair<tstring,int > >(static_cast<std::vector<std::pair<tstring,int > > & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_std__vectorTstd__pairTtstring_int_t_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    tstring arg3 ;
    int arg4 ;
    bool arg5 ;
    Piavca::Motion *arg6 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    {
        arg4 = static_cast<int >(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = static_cast<bool >(SWIG_As_bool(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj5, (void **)&arg6, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(6)) SWIG_fail;
    (arg1)->loadMotion(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    tstring arg3 ;
    int arg4 ;
    bool arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    {
        arg4 = static_cast<int >(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = static_cast<bool >(SWIG_As_bool(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    (arg1)->loadMotion(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    tstring arg3 ;
    int arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    {
        arg4 = static_cast<int >(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    (arg1)->loadMotion(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    tstring arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Core_loadMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    (arg1)->loadMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    bool arg4 ;
    Piavca::Motion *arg5 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(5)) SWIG_fail;
    (arg1)->loadMotion(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_5(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    bool arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    (arg1)->loadMotion(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_6(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Core_loadMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    (arg1)->loadMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_renameMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    tstring arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Core_renameMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    (arg1)->renameMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_unloadMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_unloadMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    (arg1)->unloadMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    result = (Piavca::Motion *)(arg1)->getMotion(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getMotionNames__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    int arg2 ;
    std::vector<std::string > result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getMotionNames",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (arg1)->getMotionNames(arg2);
    
    {
        std::vector<std::string > * resultptr;
        resultptr = new std::vector<std::string >(static_cast<std::vector<std::string > & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_std__vectorTstd__string_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getMotionNames__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    std::vector<std::string > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getMotionNames",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getMotionNames();
    
    {
        std::vector<std::string > * resultptr;
        resultptr = new std::vector<std::string >(static_cast<std::vector<std::string > & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_std__vectorTstd__string_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getMotionNames(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Core_getMotionNames__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_Core_getMotionNames__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Core_getMotionNames'");
    return NULL;
}


static PyObject *_wrap_Core_getNumberOfMotions(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getNumberOfMotions",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)(arg1)->getNumberOfMotions();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getAllmotions(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    std::list<tstring > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getAllmotions",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getAllmotions();
    
    {
        std::list<tstring > * resultptr;
        resultptr = new std::list<tstring >(static_cast<std::list<tstring > & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_std__listTtstring_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    int arg2 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Motion *)(arg1)->getMotion(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getAvatar__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    Piavca::Avatar *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getAvatar",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    result = (Piavca::Avatar *)(arg1)->getAvatar(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Avatar, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getAvatarNames(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    std::vector<tstring > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getAvatarNames",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getAvatarNames();
    
    {
        std::vector<tstring > * resultptr;
        resultptr = new std::vector<tstring >(static_cast<std::vector<tstring > & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_std__vectorTtstring_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_numAvatars(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_numAvatars",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)(arg1)->numAvatars();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getAvatar__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    int arg2 ;
    Piavca::Avatar *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getAvatar",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Avatar *)(arg1)->getAvatar(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Avatar, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getAvatar(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Core_getAvatar__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_Core_getAvatar__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Core_getAvatar'");
    return NULL;
}


static PyObject *_wrap_Core_renameAvatar(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    tstring arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Core_renameAvatar",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    (arg1)->renameAvatar(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_removeAvatar(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_removeAvatar",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->removeAvatar(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initAvatar__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    tstring arg3 ;
    bool arg4 ;
    Piavca::Vec *arg5 = 0 ;
    Piavca::Quat *arg6 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOO:Core_initAvatar",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    {
        arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(5)) SWIG_fail;
        if (arg5 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj5, (void **)&arg6, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(6)) SWIG_fail;
        if (arg6 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    (arg1)->initAvatar(arg2,arg3,arg4,(Piavca::Vec const &)*arg5,(Piavca::Quat const &)*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initAvatar__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    tstring arg3 ;
    bool arg4 ;
    Piavca::Vec *arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:Core_initAvatar",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    {
        arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(5)) SWIG_fail;
        if (arg5 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    (arg1)->initAvatar(arg2,arg3,arg4,(Piavca::Vec const &)*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initAvatar__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    tstring arg3 ;
    bool arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Core_initAvatar",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    {
        arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    (arg1)->initAvatar(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initAvatar__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    tstring arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Core_initAvatar",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    (arg1)->initAvatar(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initAvatar(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    return _wrap_Core_initAvatar__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_Check_bool(argv[3]);
                    if (_v) {
                        return _wrap_Core_initAvatar__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_Check_bool(argv[3]);
                    if (_v) {
                        {
                            void *ptr = 0;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = (ptr != 0);
                            }
                        }
                        if (_v) {
                            return _wrap_Core_initAvatar__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_Check_bool(argv[3]);
                    if (_v) {
                        {
                            void *ptr = 0;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = (ptr != 0);
                            }
                        }
                        if (_v) {
                            {
                                void *ptr = 0;
                                if (SWIG_ConvertPtr(argv[5], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                } else {
                                    _v = (ptr != 0);
                                }
                            }
                            if (_v) {
                                return _wrap_Core_initAvatar__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Core_initAvatar'");
    return NULL;
}


static PyObject *_wrap_Core_getObject__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    Piavca::Object *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getObject",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    result = (Piavca::Object *)(arg1)->getObject(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Object, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_numObjects(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_numObjects",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)(arg1)->numObjects();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getObject__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    int arg2 ;
    Piavca::Object *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getObject",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Object *)(arg1)->getObject(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Object, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getObject(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Core_getObject__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_Core_getObject__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Core_getObject'");
    return NULL;
}


static PyObject *_wrap_Core_renameObject(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    tstring arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Core_renameObject",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    (arg1)->renameObject(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_removeObject(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::Object *arg2 = (Piavca::Object *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_removeObject",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->removeObject(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initObject__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::Object *arg2 = (Piavca::Object *) 0 ;
    tstring arg3 ;
    Piavca::Vec *arg4 = 0 ;
    Piavca::Quat *arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:Core_initObject",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    {
        SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (arg4 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(5)) SWIG_fail;
        if (arg5 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    (arg1)->initObject(arg2,arg3,(Piavca::Vec const &)*arg4,(Piavca::Quat const &)*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initObject__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::Object *arg2 = (Piavca::Object *) 0 ;
    tstring arg3 ;
    Piavca::Vec *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Core_initObject",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    {
        SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (arg4 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    (arg1)->initObject(arg2,arg3,(Piavca::Vec const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initObject__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::Object *arg2 = (Piavca::Object *) 0 ;
    tstring arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Core_initObject",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    (arg1)->initObject(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initObject(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Object, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    return _wrap_Core_initObject__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Object, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    {
                        void *ptr = 0;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = (ptr != 0);
                        }
                    }
                    if (_v) {
                        return _wrap_Core_initObject__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Object, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    {
                        void *ptr = 0;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = (ptr != 0);
                        }
                    }
                    if (_v) {
                        {
                            void *ptr = 0;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = (ptr != 0);
                            }
                        }
                        if (_v) {
                            return _wrap_Core_initObject__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Core_initObject'");
    return NULL;
}


static PyObject *_wrap_Core_initMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::TrackMotion *arg2 = (Piavca::TrackMotion *) 0 ;
    tstring arg3 ;
    bool arg4 ;
    int arg5 ;
    Piavca::Motion *arg6 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOO:Core_initMotion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    {
        arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = static_cast<int >(SWIG_As_int(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj5, (void **)&arg6, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(6)) SWIG_fail;
    (arg1)->initMotion(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::TrackMotion *arg2 = (Piavca::TrackMotion *) 0 ;
    tstring arg3 ;
    bool arg4 ;
    int arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:Core_initMotion",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    {
        arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = static_cast<int >(SWIG_As_int(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    (arg1)->initMotion(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::TrackMotion *arg2 = (Piavca::TrackMotion *) 0 ;
    tstring arg3 ;
    bool arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Core_initMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    {
        arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    (arg1)->initMotion(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::TrackMotion *arg2 = (Piavca::TrackMotion *) 0 ;
    tstring arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Core_initMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = StringToTString(PyString_AsString(obj2));
    }
    (arg1)->initMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initMotion__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    Piavca::TrackMotion *arg2 = (Piavca::TrackMotion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_initMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->initMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_initMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Core_initMotion__SWIG_4(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    return _wrap_Core_initMotion__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_Check_bool(argv[3]);
                    if (_v) {
                        return _wrap_Core_initMotion__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_Check_bool(argv[3]);
                    if (_v) {
                        _v = SWIG_Check_int(argv[4]);
                        if (_v) {
                            return _wrap_Core_initMotion__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_Check_bool(argv[3]);
                    if (_v) {
                        _v = SWIG_Check_int(argv[4]);
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                } else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_Core_initMotion__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Core_initMotion'");
    return NULL;
}


static PyObject *_wrap_Core_setDir(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_setDir",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    (arg1)->setDir(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getTime",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getTime();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getSystemTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getSystemTime",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getSystemTime();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_setAutoTimeOff(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_setAutoTimeOff",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->setAutoTimeOff();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_setAutoTimeOn(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_setAutoTimeOn",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->setAutoTimeOn();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_setCurrentTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_setCurrentTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setCurrentTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_addError(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_addError",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    (arg1)->addError(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_error(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tostringstream *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_error",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        tostringstream &_result_ref = (arg1)->error();
        result = (tostringstream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_tostringstream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_clearErrors(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_clearErrors",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->clearErrors();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getErrors(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getErrors",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getErrors();
    
    {
        resultobj = PyString_FromString(TStringToString(result).c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_errorsPresent(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_errorsPresent",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->errorsPresent();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_addWarning(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_addWarning",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = StringToTString(PyString_AsString(obj1));
    }
    (arg1)->addWarning(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_Warning(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tostringstream *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_Warning",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        tostringstream &_result_ref = (arg1)->Warning();
        result = (tostringstream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_tostringstream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_clearWarnings(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_clearWarnings",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->clearWarnings();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getWarnings(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    tstring result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_getWarnings",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getWarnings();
    
    {
        resultobj = PyString_FromString(TStringToString(result).c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_warningsPresent(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_warningsPresent",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->warningsPresent();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_exceptionsOn(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_exceptionsOn",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->exceptionsOn();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_setExceptionsOn(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_setExceptionsOn",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->setExceptionsOn();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_setExceptionsOff(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_setExceptionsOff",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->setExceptionsOff();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_log(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    std::ostream *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Core_log",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        std::ostream &_result_ref = (arg1)->log();
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_7(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    int arg4 ;
    bool arg5 ;
    Piavca::Motion *arg6 = (Piavca::Motion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    if (!SWIG_AsCharPtr(obj2, (char**)&arg3)) {
        SWIG_arg_fail(3);SWIG_fail;
    }
    {
        arg4 = static_cast<int >(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = static_cast<bool >(SWIG_As_bool(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj5, (void **)&arg6, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(6)) SWIG_fail;
    result = (Piavca::Motion *)Piavca_Core_loadMotion__SWIG_7(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_8(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    int arg4 ;
    bool arg5 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    if (!SWIG_AsCharPtr(obj2, (char**)&arg3)) {
        SWIG_arg_fail(3);SWIG_fail;
    }
    {
        arg4 = static_cast<int >(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = static_cast<bool >(SWIG_As_bool(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    result = (Piavca::Motion *)Piavca_Core_loadMotion__SWIG_7(arg1,(char const *)arg2,(char const *)arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_9(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    int arg4 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    if (!SWIG_AsCharPtr(obj2, (char**)&arg3)) {
        SWIG_arg_fail(3);SWIG_fail;
    }
    {
        arg4 = static_cast<int >(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::Motion *)Piavca_Core_loadMotion__SWIG_7(arg1,(char const *)arg2,(char const *)arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_10(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Core_loadMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    if (!SWIG_AsCharPtr(obj2, (char**)&arg3)) {
        SWIG_arg_fail(3);SWIG_fail;
    }
    result = (Piavca::Motion *)Piavca_Core_loadMotion__SWIG_7(arg1,(char const *)arg2,(char const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_11(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    char *arg2 = (char *) 0 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    bool arg4 ;
    Piavca::Motion *arg5 = (Piavca::Motion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(5)) SWIG_fail;
    result = (Piavca::Motion *)Piavca_Core_loadMotion__SWIG_11(arg1,(char const *)arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_12(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    char *arg2 = (char *) 0 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    bool arg4 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Core_loadMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::Motion *)Piavca_Core_loadMotion__SWIG_11(arg1,(char const *)arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion__SWIG_13(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    char *arg2 = (char *) 0 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Core_loadMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    result = (Piavca::Motion *)Piavca_Core_loadMotion__SWIG_11(arg1,(char const *)arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_loadMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    return _wrap_Core_loadMotion__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Core_loadMotion__SWIG_6(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Core_loadMotion__SWIG_13(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                _v = SWIG_AsCharPtr(argv[2], (char **)(0));
                if (_v) {
                    return _wrap_Core_loadMotion__SWIG_10(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    _v = SWIG_Check_bool(argv[3]);
                    if (_v) {
                        return _wrap_Core_loadMotion__SWIG_5(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_Check_int(argv[3]);
                    if (_v) {
                        return _wrap_Core_loadMotion__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    _v = SWIG_Check_bool(argv[3]);
                    if (_v) {
                        return _wrap_Core_loadMotion__SWIG_12(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                _v = SWIG_AsCharPtr(argv[2], (char **)(0));
                if (_v) {
                    _v = SWIG_Check_int(argv[3]);
                    if (_v) {
                        return _wrap_Core_loadMotion__SWIG_9(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    _v = SWIG_Check_bool(argv[3]);
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_Core_loadMotion__SWIG_4(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_Check_int(argv[3]);
                    if (_v) {
                        _v = SWIG_Check_bool(argv[4]);
                        if (_v) {
                            return _wrap_Core_loadMotion__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    _v = SWIG_Check_bool(argv[3]);
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_Core_loadMotion__SWIG_11(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                _v = SWIG_AsCharPtr(argv[2], (char **)(0));
                if (_v) {
                    _v = SWIG_Check_int(argv[3]);
                    if (_v) {
                        _v = SWIG_Check_bool(argv[4]);
                        if (_v) {
                            return _wrap_Core_loadMotion__SWIG_8(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_Check_int(argv[3]);
                    if (_v) {
                        _v = SWIG_Check_bool(argv[4]);
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                } else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_Core_loadMotion__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                _v = SWIG_AsCharPtr(argv[2], (char **)(0));
                if (_v) {
                    _v = SWIG_Check_int(argv[3]);
                    if (_v) {
                        _v = SWIG_Check_bool(argv[4]);
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                } else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_Core_loadMotion__SWIG_7(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Core_loadMotion'");
    return NULL;
}


static PyObject *_wrap_Core_getMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Core *arg1 = (Piavca::Core *) 0 ;
    char *arg2 = (char *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Core_getMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    result = (Piavca::Motion *)Piavca_Core_getMotion__SWIG_2(arg1,(char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Core_getMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_tstring, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Core_getMotion__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_Core_getMotion__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Core, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                return _wrap_Core_getMotion__SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Core_getMotion'");
    return NULL;
}


static PyObject * Core_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__Core, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_StringToWString(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    std::string *arg1 = 0 ;
    std::wstring result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:StringToWString",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__string, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("std::string");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = StringToWString((std::string const &)*arg1);
    
    {
        std::wstring * resultptr;
        resultptr = new std::wstring(static_cast<std::wstring & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_std__wstring, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_WStringToString(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    std::wstring *arg1 = 0 ;
    std::string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:WStringToString",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__wstring, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("std::wstring");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = WStringToString((std::wstring const &)*arg1);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Motion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Motion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_printInfo(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_printInfo",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->printInfo();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_load(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Motion_load",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->load(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_unload(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_unload",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->unload();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_loaded(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_loaded",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->loaded();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_setStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Motion_setStartTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setStartTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_getStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_getStartTime",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getStartTime();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_getEndTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_getEndTime",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getEndTime();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_reset(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_reset",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_Reference(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_Reference",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->Reference();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_Dispose(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_Dispose",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_makeTemp(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_makeTemp",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->makeTemp();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_setName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Motion_setName",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->setName(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_getName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::tstring result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_getName",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getName();
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_findSub(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Motion_findSub",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    result = (Piavca::Motion *)(arg1)->findSub(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_findSubByType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    type_info *arg2 = 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Motion_findSubByType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_type_info, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("type_info");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Motion *)(arg1)->findSubByType((type_info const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_saveMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Motion_saveMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->saveMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_getMotionLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_getMotionLength",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::Motion const *)arg1)->getMotionLength();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_isFacial(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_isFacial",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isFacial();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_isRandomAccess(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_isRandomAccess",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isRandomAccess();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_begin(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_begin",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)((Piavca::Motion const *)arg1)->begin();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_end(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_end",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)((Piavca::Motion const *)arg1)->end();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_next(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    int *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Motion_next",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_int, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("int");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (int)((Piavca::Motion const *)arg1)->next(*arg2);
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_isNull(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Motion_isNull",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::Motion const *)arg1)->isNull(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_getTrackType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    int arg2 ;
    Piavca::trackType result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Motion_getTrackType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::trackType)((Piavca::Motion const *)arg1)->getTrackType(arg2);
    
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_pause(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_pause",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->pause();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_unpause(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Motion_unpause",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->unpause();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_getFloatValueAtTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Motion_getFloatValueAtTime",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTime(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_getVecValueAtTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Motion_getVecValueAtTime",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTime(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_getQuatValueAtTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Motion_getQuatValueAtTime",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTime(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Motion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Motion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Motion_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Motion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Motion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__Motion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_TrackMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    int arg2 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    Piavca::TrackMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_TrackMotion",&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    result = (Piavca::TrackMotion *)new Piavca::TrackMotion(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TrackMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TrackMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    int arg2 ;
    Piavca::TrackMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_TrackMotion",&obj0,&obj1)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::TrackMotion *)new Piavca::TrackMotion(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TrackMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TrackMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    Piavca::TrackMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_TrackMotion",&obj0)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    result = (Piavca::TrackMotion *)new Piavca::TrackMotion(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TrackMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TrackMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    bool arg1 ;
    Piavca::TrackMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_TrackMotion",&obj0)) goto fail;
    {
        arg1 = static_cast<bool >(SWIG_As_bool(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::TrackMotion *)new Piavca::TrackMotion(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TrackMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TrackMotion__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_TrackMotion")) goto fail;
    result = (Piavca::TrackMotion *)new Piavca::TrackMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TrackMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TrackMotion__SWIG_5(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionImp *arg1 = (Piavca::MotionImp *) 0 ;
    Piavca::TrackMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_TrackMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionImp, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::TrackMotion *)new Piavca::TrackMotion(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TrackMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TrackMotion__SWIG_6(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = 0 ;
    Piavca::TrackMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_TrackMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::TrackMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::TrackMotion *)new Piavca::TrackMotion((Piavca::TrackMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TrackMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TrackMotion__SWIG_7(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = 0 ;
    Piavca::TrackMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_TrackMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::Motion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::TrackMotion *)new Piavca::TrackMotion(*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TrackMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TrackMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_TrackMotion__SWIG_4(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_TrackMotion__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__MotionImp, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_TrackMotion__SWIG_5(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_TrackMotion__SWIG_6(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_TrackMotion__SWIG_7(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        _v = SWIG_Check_bool(argv[0]);
        if (_v) {
            return _wrap_new_TrackMotion__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_new_TrackMotion__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_new_TrackMotion__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_TrackMotion'");
    return NULL;
}


static PyObject *_wrap_delete_TrackMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_TrackMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TrackMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_getMotionLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TrackMotion_getMotionLength",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::TrackMotion const *)arg1)->getMotionLength();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_isFacial(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TrackMotion_isFacial",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isFacial();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_isRandomAccess(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TrackMotion_isRandomAccess",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isRandomAccess();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_isNull(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TrackMotion_isNull",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::TrackMotion const *)arg1)->isNull(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_getTrackType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    Piavca::trackType result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TrackMotion_getTrackType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::trackType)((Piavca::TrackMotion const *)arg1)->getTrackType(arg2);
    
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_addFloatTrack(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TrackMotion_addFloatTrack",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->addFloatTrack(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_addVecTrack(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    Piavca::Vec *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TrackMotion_addVecTrack",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->addVecTrack(arg2,(Piavca::Vec const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_addQuatTrack(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    Piavca::Quat *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TrackMotion_addQuatTrack",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->addQuatTrack(arg2,(Piavca::Quat const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_setFloatKeyframe__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:TrackMotion_setFloatKeyframe",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    (arg1)->setFloatKeyframe(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_setFloatKeyframe__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:TrackMotion_setFloatKeyframe",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = static_cast<float >(SWIG_As_float(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    (arg1)->setFloatKeyframe(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_setFloatKeyframe(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        return _wrap_TrackMotion_setFloatKeyframe__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        _v = SWIG_Check_float(argv[4]);
                        if (_v) {
                            return _wrap_TrackMotion_setFloatKeyframe__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'TrackMotion_setFloatKeyframe'");
    return NULL;
}


static PyObject *_wrap_TrackMotion_setVecKeyframe__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:TrackMotion_setVecKeyframe",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        Piavca::Vec * argp;
        SWIG_Python_ConvertPtr(obj3, (void **)&argp, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
        arg4 = *argp;
    }
    (arg1)->setVecKeyframe(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_setVecKeyframe__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec arg4 ;
    Piavca::Vec arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:TrackMotion_setVecKeyframe",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        Piavca::Vec * argp;
        SWIG_Python_ConvertPtr(obj3, (void **)&argp, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
        arg4 = *argp;
    }
    {
        Piavca::Vec * argp;
        SWIG_Python_ConvertPtr(obj4, (void **)&argp, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(5)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(5)) SWIG_fail;
        arg5 = *argp;
    }
    (arg1)->setVecKeyframe(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_setVecKeyframe(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    {
                        void *ptr = 0;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = (ptr != 0);
                        }
                    }
                    if (_v) {
                        return _wrap_TrackMotion_setVecKeyframe__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    {
                        void *ptr = 0;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = (ptr != 0);
                        }
                    }
                    if (_v) {
                        {
                            void *ptr = 0;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = (ptr != 0);
                            }
                        }
                        if (_v) {
                            return _wrap_TrackMotion_setVecKeyframe__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'TrackMotion_setVecKeyframe'");
    return NULL;
}


static PyObject *_wrap_TrackMotion_setQuatKeyframe__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:TrackMotion_setQuatKeyframe",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        Piavca::Quat * argp;
        SWIG_Python_ConvertPtr(obj3, (void **)&argp, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
        arg4 = *argp;
    }
    (arg1)->setQuatKeyframe(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_setQuatKeyframe__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat arg4 ;
    Piavca::Quat arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:TrackMotion_setQuatKeyframe",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        Piavca::Quat * argp;
        SWIG_Python_ConvertPtr(obj3, (void **)&argp, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
        arg4 = *argp;
    }
    {
        Piavca::Quat * argp;
        SWIG_Python_ConvertPtr(obj4, (void **)&argp, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(5)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(5)) SWIG_fail;
        arg5 = *argp;
    }
    (arg1)->setQuatKeyframe(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_setQuatKeyframe(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    {
                        void *ptr = 0;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = (ptr != 0);
                        }
                    }
                    if (_v) {
                        return _wrap_TrackMotion_setQuatKeyframe__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    {
                        void *ptr = 0;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = (ptr != 0);
                        }
                    }
                    if (_v) {
                        {
                            void *ptr = 0;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = (ptr != 0);
                            }
                        }
                        if (_v) {
                            return _wrap_TrackMotion_setQuatKeyframe__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'TrackMotion_setQuatKeyframe'");
    return NULL;
}


static PyObject *_wrap_TrackMotion_getNumKeyframes(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TrackMotion_getNumKeyframes",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (int)(arg1)->getNumKeyframes(arg2);
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_getKeyframeTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    int arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TrackMotion_getKeyframeTime",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getKeyframeTime(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TrackMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TrackMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TrackMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_deleteAllTracks(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TrackMotion_deleteAllTracks",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->deleteAllTracks();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_clearTrack__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TrackMotion_clearTrack",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->clearTrack(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_clearTrack__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TrackMotion_clearTrack",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->clearTrack(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_clearTrack(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_TrackMotion_clearTrack__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_bool(argv[2]);
                if (_v) {
                    return _wrap_TrackMotion_clearTrack__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'TrackMotion_clearTrack'");
    return NULL;
}


static PyObject *_wrap_TrackMotion_clearAllTracks__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TrackMotion_clearAllTracks",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->clearAllTracks(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_clearAllTracks__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TrackMotion *arg1 = (Piavca::TrackMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TrackMotion_clearAllTracks",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TrackMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->clearAllTracks();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TrackMotion_clearAllTracks(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_TrackMotion_clearAllTracks__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TrackMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_bool(argv[1]);
            if (_v) {
                return _wrap_TrackMotion_clearAllTracks__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'TrackMotion_clearAllTracks'");
    return NULL;
}


static PyObject * TrackMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__TrackMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_copyMotionPosture(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    Piavca::TrackMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:copyMotionPosture",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::TrackMotion *)Piavca::copyMotionPosture(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TrackMotion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Avatar__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    bool arg2 ;
    Piavca::Vec *arg3 = 0 ;
    Piavca::Quat *arg4 = 0 ;
    Piavca::Vec *arg5 = 0 ;
    Piavca::Avatar *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:new_Avatar",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (arg4 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(5)) SWIG_fail;
        if (arg5 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2,(Piavca::Vec const &)*arg3,(Piavca::Quat const &)*arg4,(Piavca::Vec const &)*arg5);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Avatar, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Avatar__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    bool arg2 ;
    Piavca::Vec *arg3 = 0 ;
    Piavca::Quat *arg4 = 0 ;
    Piavca::Avatar *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:new_Avatar",&obj0,&obj1,&obj2,&obj3)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (arg4 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2,(Piavca::Vec const &)*arg3,(Piavca::Quat const &)*arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Avatar, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Avatar__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    bool arg2 ;
    Piavca::Vec *arg3 = 0 ;
    Piavca::Avatar *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_Avatar",&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2,(Piavca::Vec const &)*arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Avatar, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Avatar__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    bool arg2 ;
    Piavca::Avatar *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_Avatar",&obj0,&obj1)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Avatar *)new Piavca::Avatar(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Avatar, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Avatar__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    Piavca::Avatar *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Avatar",&obj0)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    result = (Piavca::Avatar *)new Piavca::Avatar(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Avatar, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Avatar__SWIG_5(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    char *arg1 = (char *) 0 ;
    Piavca::Avatar *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Avatar",&obj0)) goto fail;
    if (!SWIG_AsCharPtr(obj0, (char**)&arg1)) {
        SWIG_arg_fail(1);SWIG_fail;
    }
    result = (Piavca::Avatar *)new Piavca::Avatar((char const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Avatar, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Avatar(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_Avatar__SWIG_4(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        _v = SWIG_AsCharPtr(argv[0], (char **)(0));
        if (_v) {
            return _wrap_new_Avatar__SWIG_5(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_bool(argv[1]);
            if (_v) {
                return _wrap_new_Avatar__SWIG_3(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_bool(argv[1]);
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    return _wrap_new_Avatar__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_bool(argv[1]);
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    {
                        void *ptr = 0;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = (ptr != 0);
                        }
                    }
                    if (_v) {
                        return _wrap_new_Avatar__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_bool(argv[1]);
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    {
                        void *ptr = 0;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = (ptr != 0);
                        }
                    }
                    if (_v) {
                        {
                            void *ptr = 0;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = (ptr != 0);
                            }
                        }
                        if (_v) {
                            return _wrap_new_Avatar__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_Avatar'");
    return NULL;
}


static PyObject *_wrap_Avatar_isValid(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_isValid",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isValid();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_activate(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_activate",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->activate();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_deactivate(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_deactivate",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->deactivate();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::tstring result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getName",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getName();
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::tstring result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_setName",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    result = (arg1)->setName(arg2);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getForwardDirection(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Vec *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getForwardDirection",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        Piavca::Vec const &_result_ref = (arg1)->getForwardDirection();
        result = (Piavca::Vec *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Vec, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setForwardDirection(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_setForwardDirection",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setForwardDirection((Piavca::Vec const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setFacialExpressionWeight__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    float arg3 ;
    float arg4 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Avatar_setFacialExpressionWeight",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (bool)(arg1)->setFacialExpressionWeight(arg2,arg3,arg4);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setFacialExpressionWeight__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    float arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_setFacialExpressionWeight",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (bool)(arg1)->setFacialExpressionWeight(arg2,arg3);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getFacialExpressionWeight__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_getFacialExpressionWeight",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (float)(arg1)->getFacialExpressionWeight(arg2);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_clearFacialExpressionWeights(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_clearFacialExpressionWeights",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->clearFacialExpressionWeights();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_beginExpression(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_beginExpression",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)((Piavca::Avatar const *)arg1)->beginExpression();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_endExpression(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_endExpression",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)((Piavca::Avatar const *)arg1)->endExpression();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_nextExpression(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int *arg2 = 0 ;
    int result;
    int temp2 ;
    int res2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_nextExpression",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        if (!(SWIG_ConvertPtr(obj1,(void **)(&arg2),SWIGTYPE_p_int,0) != -1)) {
            temp2 = SWIG_As_int(obj1);
            if (SWIG_arg_fail(2)) SWIG_fail;
            arg2 = &temp2;
            res2 = SWIG_NEWOBJ;
        }
    }
    result = (int)(arg1)->nextExpression(*arg2);
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_isExpressionNull(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_isExpressionNull",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::Avatar const *)arg1)->isExpressionNull(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setRootPosition(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_setRootPosition",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setRootPosition((Piavca::Vec const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getRootPosition(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getRootPosition",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getRootPosition();
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setRootOrientation(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Quat *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_setRootOrientation",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setRootOrientation((Piavca::Quat const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setRootAngle(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_setRootAngle",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setRootAngle(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setRootAngleDeg(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_setRootAngleDeg",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setRootAngleDeg(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getRootOrientation(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getRootOrientation",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getRootOrientation();
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_createJoint(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::tstring arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_createJoint",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    result = (bool)(arg1)->createJoint(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_begin(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_begin",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)((Piavca::Avatar const *)arg1)->begin();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_end(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_end",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)((Piavca::Avatar const *)arg1)->end();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_next(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int *arg2 = 0 ;
    int result;
    int temp2 ;
    int res2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_next",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        if (!(SWIG_ConvertPtr(obj1,(void **)(&arg2),SWIGTYPE_p_int,0) != -1)) {
            temp2 = SWIG_As_int(obj1);
            if (SWIG_arg_fail(2)) SWIG_fail;
            arg2 = &temp2;
            res2 = SWIG_NEWOBJ;
        }
    }
    result = (int)(arg1)->next(*arg2);
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getParent(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_getParent",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (int)((Piavca::Avatar const *)arg1)->getParent(arg2);
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getJointName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    Piavca::tstring result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_getJointName",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (arg1)->getJointName(arg2);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_isNull(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_isNull",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::Avatar const *)arg1)->isNull(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_hasChanged(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_hasChanged",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)(arg1)->hasChanged(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_clearChange(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_clearChange",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->clearChange(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setJointOrientation__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    Piavca::Quat *arg3 = 0 ;
    Piavca::jointCoord arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Avatar_setJointOrientation",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<Piavca::jointCoord >(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    (arg1)->setJointOrientation(arg2,(Piavca::Quat const &)*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setJointOrientation__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    Piavca::Quat *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_setJointOrientation",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->setJointOrientation(arg2,(Piavca::Quat const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getJointOrientation__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    Piavca::jointCoord arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_getJointOrientation",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<Piavca::jointCoord >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getJointOrientation(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getJointOrientation__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_getJointOrientation",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (arg1)->getJointOrientation(arg2);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setJointOrientation__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    SwigValueWrapper<std::vector<std::pair<int,Piavca::Quat > > > arg2 ;
    Piavca::jointCoord arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_setJointOrientation",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        std::vector<std::pair<int,Piavca::Quat > > * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_std__vectorTstd__pairTint_Piavca__Quat_t_t, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("std::vector<std::pair<int,Piavca::Quat > >");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    {
        arg3 = static_cast<Piavca::jointCoord >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->setJointOrientation(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setJointOrientation__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    SwigValueWrapper<std::vector<std::pair<int,Piavca::Quat > > > arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_setJointOrientation",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        std::vector<std::pair<int,Piavca::Quat > > * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_std__vectorTstd__pairTint_Piavca__Quat_t_t, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("std::vector<std::pair<int,Piavca::Quat > >");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    (arg1)->setJointOrientation(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getJointBasePosition__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    Piavca::jointCoord arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_getJointBasePosition",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<Piavca::jointCoord >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getJointBasePosition(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getJointBasePosition__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_getJointBasePosition",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (arg1)->getJointBasePosition(arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_scaleRoot(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Vec arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_scaleRoot",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        Piavca::Vec * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    (arg1)->scaleRoot(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_scaleJoint(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    Piavca::Vec arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_scaleJoint",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::Vec * argp;
        SWIG_Python_ConvertPtr(obj2, (void **)&argp, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
        arg3 = *argp;
    }
    (arg1)->scaleJoint(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_timeStep(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_timeStep",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->timeStep(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_loadMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_loadMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->loadMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_unloadMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_unloadMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->unloadMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->getMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)((Piavca::Avatar const *)arg1)->getMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Avatar_getMotion__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Avatar_getMotion__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_getMotion'");
    return NULL;
}


static PyObject *_wrap_Avatar_playMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_playMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->playMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_playMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_playMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->playMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_playMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_playMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->playMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_playMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Avatar_playMotion__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Avatar_playMotion__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_Avatar_playMotion__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_playMotion'");
    return NULL;
}


static PyObject *_wrap_Avatar_playMotionDirect(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_playMotionDirect",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->playMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_stopMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_stopMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->stopMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_restartMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_restartMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->restartMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setMotionStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_setMotionStartTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setMotionStartTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getMotionStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getMotionStartTime",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getMotionStartTime();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getMotionEndTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getMotionEndTime",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getMotionEndTime();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_showMotionAtTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_showMotionAtTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->showMotionAtTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_loadFacialMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_loadFacialMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->loadFacialMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_unloadFacialMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_unloadFacialMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->unloadFacialMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getFacialMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getFacialMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->getFacialMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getFacialMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getFacialMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)((Piavca::Avatar const *)arg1)->getFacialMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getFacialMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Avatar_getFacialMotion__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Avatar_getFacialMotion__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_getFacialMotion'");
    return NULL;
}


static PyObject *_wrap_Avatar_playFacialMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_playFacialMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->playFacialMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_playFacialMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_playFacialMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->playFacialMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_playFacialMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_playFacialMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->playFacialMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_playFacialMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_playFacialMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->playFacialMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_playFacialMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Avatar_playFacialMotion__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Avatar_playFacialMotion__SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Avatar_playFacialMotion__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_Avatar_playFacialMotion__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_playFacialMotion'");
    return NULL;
}


static PyObject *_wrap_Avatar_stopFacialMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_stopFacialMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->stopFacialMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_restartFacialMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_restartFacialMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->restartFacialMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setFacialMotionStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_setFacialMotionStartTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setFacialMotionStartTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getFacialMotionStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getFacialMotionStartTime",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getFacialMotionStartTime();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getFacialMotionEndTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getFacialMotionEndTime",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getFacialMotionEndTime();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_showFacialMotionAtTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_showFacialMotionAtTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->showFacialMotionAtTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_loadScaleMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_loadScaleMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->loadScaleMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_unloadScaleMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_unloadScaleMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->unloadScaleMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getScaleMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getScaleMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->getScaleMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getScaleMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getScaleMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)((Piavca::Avatar const *)arg1)->getScaleMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getScaleMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Avatar_getScaleMotion__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Avatar_getScaleMotion__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_getScaleMotion'");
    return NULL;
}


static PyObject *_wrap_Avatar_playScaleMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_playScaleMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->playScaleMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_playScaleMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_playScaleMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->playScaleMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_playScaleMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_playScaleMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->playScaleMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_playScaleMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_playScaleMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->playScaleMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_playScaleMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Avatar_playScaleMotion__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Avatar_playScaleMotion__SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_Avatar_playScaleMotion__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_Avatar_playScaleMotion__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_playScaleMotion'");
    return NULL;
}


static PyObject *_wrap_Avatar_stopScaleMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_stopScaleMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->stopScaleMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_restartScaleMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_restartScaleMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->restartScaleMotion();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setScaleMotionStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_setScaleMotionStartTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setScaleMotionStartTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getScaleMotionStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getScaleMotionStartTime",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getScaleMotionStartTime();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getScaleMotionEndTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getScaleMotionEndTime",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getScaleMotionEndTime();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_showScaleMotionAtTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_showScaleMotionAtTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->showScaleMotionAtTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_registerCallback(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::AvatarTimeCallback *arg2 = (Piavca::AvatarTimeCallback *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_registerCallback",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__AvatarTimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->registerCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_removeCallback(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_removeCallback",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->removeCallback(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getCallback__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::AvatarTimeCallback *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_getCallback",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    result = (Piavca::AvatarTimeCallback *)(arg1)->getCallback(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarTimeCallback, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getNumCallbacks(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Avatar_getNumCallbacks",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)(arg1)->getNumCallbacks();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getCallback__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    Piavca::AvatarTimeCallback *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_getCallback",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::AvatarTimeCallback *)(arg1)->getCallback(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarTimeCallback, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getCallback(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Avatar_getCallback__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_Avatar_getCallback__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_getCallback'");
    return NULL;
}


static PyObject *_wrap_Avatar_setFacialExpressionWeight__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    char *arg2 = (char *) 0 ;
    float arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_setFacialExpressionWeight",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (bool)Piavca_Avatar_setFacialExpressionWeight__SWIG_2(arg1,(char const *)arg2,arg3);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setFacialExpressionWeight(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_Avatar_setFacialExpressionWeight__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_Avatar_setFacialExpressionWeight__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        return _wrap_Avatar_setFacialExpressionWeight__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_setFacialExpressionWeight'");
    return NULL;
}


static PyObject *_wrap_Avatar_getFacialExpressionWeight__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    char *arg2 = (char *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_getFacialExpressionWeight",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    result = (float)Piavca_Avatar_getFacialExpressionWeight__SWIG_1(arg1,(char const *)arg2);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getFacialExpressionWeight(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_Avatar_getFacialExpressionWeight__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                return _wrap_Avatar_getFacialExpressionWeight__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_getFacialExpressionWeight'");
    return NULL;
}


static PyObject *_wrap_Avatar_setJointOrientation__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    char *arg2 = (char *) 0 ;
    Piavca::Quat *arg3 = 0 ;
    char *arg4 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Avatar_setJointOrientation",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    if (!SWIG_AsCharPtr(obj3, (char**)&arg4)) {
        SWIG_arg_fail(4);SWIG_fail;
    }
    Piavca_Avatar_setJointOrientation__SWIG_4(arg1,(char const *)arg2,(Piavca::Quat const &)*arg3,(char const *)arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setJointOrientation__SWIG_5(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    char *arg2 = (char *) 0 ;
    Piavca::Quat *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_setJointOrientation",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    Piavca_Avatar_setJointOrientation__SWIG_4(arg1,(char const *)arg2,(Piavca::Quat const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_setJointOrientation(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_std__vectorTstd__pairTint_Piavca__Quat_t_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_Avatar_setJointOrientation__SWIG_3(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_std__vectorTstd__pairTint_Piavca__Quat_t_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                _v = SWIG_Check_int(argv[2]);
                if (_v) {
                    return _wrap_Avatar_setJointOrientation__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    return _wrap_Avatar_setJointOrientation__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    return _wrap_Avatar_setJointOrientation__SWIG_5(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_Check_int(argv[3]);
                    if (_v) {
                        return _wrap_Avatar_setJointOrientation__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_AsCharPtr(argv[3], (char **)(0));
                    if (_v) {
                        return _wrap_Avatar_setJointOrientation__SWIG_4(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_setJointOrientation'");
    return NULL;
}


static PyObject *_wrap_Avatar_getJointOrientation__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_getJointOrientation",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    if (!SWIG_AsCharPtr(obj2, (char**)&arg3)) {
        SWIG_arg_fail(3);SWIG_fail;
    }
    result = Piavca_Avatar_getJointOrientation__SWIG_2(arg1,(char const *)arg2,(char const *)arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getJointOrientation__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    char *arg2 = (char *) 0 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_getJointOrientation",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    result = Piavca_Avatar_getJointOrientation__SWIG_2(arg1,(char const *)arg2);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getJointOrientation(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_Avatar_getJointOrientation__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                return _wrap_Avatar_getJointOrientation__SWIG_3(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_int(argv[2]);
                if (_v) {
                    return _wrap_Avatar_getJointOrientation__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                _v = SWIG_AsCharPtr(argv[2], (char **)(0));
                if (_v) {
                    return _wrap_Avatar_getJointOrientation__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_getJointOrientation'");
    return NULL;
}


static PyObject *_wrap_Avatar_getJointBasePosition__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Avatar_getJointBasePosition",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    if (!SWIG_AsCharPtr(obj2, (char**)&arg3)) {
        SWIG_arg_fail(3);SWIG_fail;
    }
    result = Piavca_Avatar_getJointBasePosition__SWIG_2(arg1,(char const *)arg2,(char const *)arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getJointBasePosition__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    char *arg2 = (char *) 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_getJointBasePosition",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    result = Piavca_Avatar_getJointBasePosition__SWIG_2(arg1,(char const *)arg2);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_getJointBasePosition(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_Avatar_getJointBasePosition__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                return _wrap_Avatar_getJointBasePosition__SWIG_3(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_int(argv[2]);
                if (_v) {
                    return _wrap_Avatar_getJointBasePosition__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                _v = SWIG_AsCharPtr(argv[2], (char **)(0));
                if (_v) {
                    return _wrap_Avatar_getJointBasePosition__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_getJointBasePosition'");
    return NULL;
}


static PyObject *_wrap_Avatar_play_motion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_play_motion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    Piavca_Avatar_play_motion__SWIG_0(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_play_motion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    char *arg2 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_play_motion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    Piavca_Avatar_play_motion__SWIG_1(arg1,(char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_play_motion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Avatar_play_motion__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                return _wrap_Avatar_play_motion__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_play_motion'");
    return NULL;
}


static PyObject *_wrap_Avatar_add_background_motion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_add_background_motion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    Piavca_Avatar_add_background_motion__SWIG_0(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_add_background_motion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    char *arg2 = (char *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Avatar_add_background_motion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    if (!SWIG_AsCharPtr(obj1, (char**)&arg2)) {
        SWIG_arg_fail(2);SWIG_fail;
    }
    Piavca_Avatar_add_background_motion__SWIG_1(arg1,(char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Avatar_add_background_motion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Avatar_add_background_motion__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_AsCharPtr(argv[1], (char **)(0));
            if (_v) {
                return _wrap_Avatar_add_background_motion__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'Avatar_add_background_motion'");
    return NULL;
}


static PyObject * Avatar_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__Avatar, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_queueElement_mot_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:queueElement_mot_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (arg1) (arg1)->mot = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_queueElement_mot_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:queueElement_mot_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *) ((arg1)->mot);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_queueElement_name_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:queueElement_name_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    if (arg1) (arg1)->name = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_queueElement_name_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
    Piavca::tstring result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:queueElement_name_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result =  ((arg1)->name);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_queueElement_atTime_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:queueElement_atTime_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (arg1) (arg1)->atTime = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_queueElement_atTime_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:queueElement_atTime_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float) ((arg1)->atTime);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_queueElement_background_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:queueElement_background_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (arg1) (arg1)->background = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_queueElement_background_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:queueElement_background_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool) ((arg1)->background);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_queueElement__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::queueElement *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_queueElement")) goto fail;
    result = (Piavca::queueElement *)new Piavca::queueElement();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__queueElement, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_queueElement__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    float arg3 ;
    bool arg4 ;
    Piavca::queueElement *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:new_queueElement",&obj0,&obj1,&obj2,&obj3)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<bool >(SWIG_As_bool(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::queueElement *)new Piavca::queueElement(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__queueElement, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_queueElement__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    float arg3 ;
    Piavca::queueElement *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_queueElement",&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::queueElement *)new Piavca::queueElement(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__queueElement, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_queueElement__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::queueElement *arg1 = 0 ;
    Piavca::queueElement *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_queueElement",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::queueElement");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::queueElement *)new Piavca::queueElement((Piavca::queueElement const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__queueElement, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_queueElement(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_queueElement__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__queueElement, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_queueElement__SWIG_3(self,args);
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_queueElement__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    _v = SWIG_Check_bool(argv[3]);
                    if (_v) {
                        return _wrap_new_queueElement__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_queueElement'");
    return NULL;
}


static PyObject *_wrap_delete_queueElement(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::queueElement *arg1 = (Piavca::queueElement *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_queueElement",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__queueElement, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * queueElement_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__queueElement, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_AvatarMotionQueue__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_AvatarMotionQueue")) goto fail;
    result = (Piavca::AvatarMotionQueue *)new Piavca::AvatarMotionQueue();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarMotionQueue__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    float arg2 ;
    bool arg3 ;
    int arg4 ;
    Piavca::AvatarMotionQueue *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:new_AvatarMotionQueue",&obj0,&obj1,&obj2,&obj3)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<int >(SWIG_As_int(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::AvatarMotionQueue *)new Piavca::AvatarMotionQueue(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarMotionQueue__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    float arg2 ;
    bool arg3 ;
    Piavca::AvatarMotionQueue *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_AvatarMotionQueue",&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::AvatarMotionQueue *)new Piavca::AvatarMotionQueue(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarMotionQueue__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    float arg2 ;
    Piavca::AvatarMotionQueue *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_AvatarMotionQueue",&obj0,&obj1)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::AvatarMotionQueue *)new Piavca::AvatarMotionQueue(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarMotionQueue__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    Piavca::AvatarMotionQueue *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_AvatarMotionQueue",&obj0)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::AvatarMotionQueue *)new Piavca::AvatarMotionQueue(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarMotionQueue, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarMotionQueue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_AvatarMotionQueue__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            return _wrap_new_AvatarMotionQueue__SWIG_4(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_AvatarMotionQueue__SWIG_3(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_bool(argv[2]);
                if (_v) {
                    return _wrap_new_AvatarMotionQueue__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_bool(argv[2]);
                if (_v) {
                    _v = SWIG_Check_int(argv[3]);
                    if (_v) {
                        return _wrap_new_AvatarMotionQueue__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_AvatarMotionQueue'");
    return NULL;
}


static PyObject *_wrap_delete_AvatarMotionQueue(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_AvatarMotionQueue",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_init(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_init",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->init(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_timeStep(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:AvatarMotionQueue_timeStep",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->timeStep(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_isFacial(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_isFacial",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isFacial();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_getCurrentMotionStart(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_getCurrentMotionStart",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getCurrentMotionStart();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_reblend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_reblend",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->reblend();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_setBlendInterval(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_setBlendInterval",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setBlendInterval(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_enqueueMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:AvatarMotionQueue_enqueueMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    (arg1)->enqueueMotion(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_enqueueMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:AvatarMotionQueue_enqueueMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    (arg1)->enqueueMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_enqueueMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_AvatarMotionQueue_enqueueMotion__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        return _wrap_AvatarMotionQueue_enqueueMotion__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'AvatarMotionQueue_enqueueMotion'");
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_enqueueRandomMotions__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_enqueueRandomMotions",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->enqueueRandomMotions(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_enqueueRandomMotions__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_enqueueRandomMotions",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->enqueueRandomMotions();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_enqueueRandomMotions(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_AvatarMotionQueue_enqueueRandomMotions__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_AvatarMotionQueue_enqueueRandomMotions__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'AvatarMotionQueue_enqueueRandomMotions'");
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_queueTopIsBackground(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_queueTopIsBackground",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->queueTopIsBackground();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_queueTopTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_queueTopTime",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->queueTopTime();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_dequeueMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_dequeueMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->dequeueMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_getQueueSize(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_getQueueSize",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int)(arg1)->getQueueSize();
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_updateDelay(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_updateDelay",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->updateDelay(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_clearQueue(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_clearQueue",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->clearQueue();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_removeMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_removeMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->removeMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_pauseMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_pauseMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->pauseMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_unpauseMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_unpauseMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->unpauseMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_clearAllBackgroundMotions(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_clearAllBackgroundMotions",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->clearAllBackgroundMotions();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_clearFinishedBackgroundMotions(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_clearFinishedBackgroundMotions",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->clearFinishedBackgroundMotions();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_removeBackgroundMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_removeBackgroundMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->removeBackgroundMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_removeBackgroundMotionByType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    type_info *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_removeBackgroundMotionByType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_type_info, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("type_info");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->removeBackgroundMotionByType((type_info const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_pauseBackgroundMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_pauseBackgroundMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->pauseBackgroundMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_unpauseBackgroundMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarMotionQueue_unpauseBackgroundMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->unpauseBackgroundMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_interrupt(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_interrupt",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->interrupt();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_getMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarMotionQueue_getMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->getMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_blendMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    Piavca::Avatar *arg3 = (Piavca::Avatar *) 0 ;
    float arg4 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:AvatarMotionQueue_blendMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::Motion *)(arg1)->blendMotion(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_addBackgroundMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    float arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:AvatarMotionQueue_addBackgroundMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    (arg1)->addBackgroundMotion(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_addBackgroundMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarMotionQueue *arg1 = (Piavca::AvatarMotionQueue *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:AvatarMotionQueue_addBackgroundMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarMotionQueue, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    (arg1)->addBackgroundMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarMotionQueue_addBackgroundMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_AvatarMotionQueue_addBackgroundMotion__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__AvatarMotionQueue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        return _wrap_AvatarMotionQueue_addBackgroundMotion__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'AvatarMotionQueue_addBackgroundMotion'");
    return NULL;
}


static PyObject * AvatarMotionQueue_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__AvatarMotionQueue, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Object__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Quat *arg3 = 0 ;
    Piavca::Object *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_Object",&obj0,&obj1,&obj2)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (arg3 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::Object *)new Piavca::Object(arg1,(Piavca::Vec const &)*arg2,(Piavca::Quat const &)*arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Object, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Object__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    Piavca::Vec *arg2 = 0 ;
    Piavca::Object *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_Object",&obj0,&obj1)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Object *)new Piavca::Object(arg1,(Piavca::Vec const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Object, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Object__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    Piavca::Object *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Object",&obj0)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    result = (Piavca::Object *)new Piavca::Object(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Object, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Object(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_Object__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_new_Object__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    return _wrap_new_Object__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_Object'");
    return NULL;
}


static PyObject *_wrap_Object_getName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    Piavca::tstring result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Object_getName",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getName();
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Object_setName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::tstring result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Object_setName",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    result = (arg1)->setName(arg2);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Object_setPosition(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Object_setPosition",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setPosition((Piavca::Vec const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Object_getPosition(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Object_getPosition",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getPosition();
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Object_setOrientation(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    Piavca::Quat *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Object_setOrientation",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setOrientation((Piavca::Quat const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Object_setAngle(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Object_setAngle",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setAngle(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Object_setAngleDeg(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Object_setAngleDeg",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setAngleDeg(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Object_getOrientation(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Object_getOrientation",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getOrientation();
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Object_scale(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    Piavca::Vec arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Object_scale",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        Piavca::Vec * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    (arg1)->scale(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Object_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__Object, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyTimeCallback(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    PyObject *arg1 = (PyObject *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::PyTimeCallback *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_PyTimeCallback",&obj0,&obj1)) goto fail;
    arg1 = obj0;
    {
        arg2 = PyString_AsString(obj1);
    }
    result = (Piavca::PyTimeCallback *)new Piavca::PyTimeCallback(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__PyTimeCallback, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PyTimeCallback(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyTimeCallback *arg1 = (Piavca::PyTimeCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_PyTimeCallback",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyTimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTimeCallback_init(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyTimeCallback *arg1 = (Piavca::PyTimeCallback *) 0 ;
    Piavca::Core *arg2 = (Piavca::Core *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:PyTimeCallback_init",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyTimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->init(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyTimeCallback_timeStep(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyTimeCallback *arg1 = (Piavca::PyTimeCallback *) 0 ;
    Piavca::Core *arg2 = (Piavca::Core *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:PyTimeCallback_timeStep",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyTimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Core, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->timeStep(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyTimeCallback_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__PyTimeCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyAvatarTimeCallback(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    PyObject *arg1 = (PyObject *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::PyAvatarTimeCallback *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_PyAvatarTimeCallback",&obj0,&obj1)) goto fail;
    arg1 = obj0;
    {
        arg2 = PyString_AsString(obj1);
    }
    result = (Piavca::PyAvatarTimeCallback *)new Piavca::PyAvatarTimeCallback(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__PyAvatarTimeCallback, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PyAvatarTimeCallback(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyAvatarTimeCallback *arg1 = (Piavca::PyAvatarTimeCallback *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_PyAvatarTimeCallback",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyAvatarTimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyAvatarTimeCallback_init(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyAvatarTimeCallback *arg1 = (Piavca::PyAvatarTimeCallback *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:PyAvatarTimeCallback_init",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyAvatarTimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->init(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyAvatarTimeCallback_timeStep(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyAvatarTimeCallback *arg1 = (Piavca::PyAvatarTimeCallback *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:PyAvatarTimeCallback_timeStep",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyAvatarTimeCallback, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->timeStep(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyAvatarTimeCallback_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__PyAvatarTimeCallback, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PyMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_PyMotion")) goto fail;
    result = (Piavca::PyMotion *)new Piavca::PyMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__PyMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_PyMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    PyObject *arg1 = (PyObject *) 0 ;
    Piavca::PyMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_PyMotion",&obj0)) goto fail;
    arg1 = obj0;
    result = (Piavca::PyMotion *)new Piavca::PyMotion(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__PyMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_PyMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *arg1 = 0 ;
    Piavca::PyMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_PyMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::PyMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::PyMotion *)new Piavca::PyMotion((Piavca::PyMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__PyMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_PyMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_PyMotion__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        _v = (argv[0] != 0);
        if (_v) {
            return _wrap_new_PyMotion__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__PyMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_PyMotion__SWIG_2(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_PyMotion'");
    return NULL;
}


static PyObject *_wrap_PyMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *arg1 = (Piavca::PyMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:PyMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PyMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *arg1 = (Piavca::PyMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_PyMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyMotion_setPyObj(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *arg1 = (Piavca::PyMotion *) 0 ;
    PyObject *arg2 = (PyObject *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:PyMotion_setPyObj",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg2 = obj1;
    (arg1)->setPyObj(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyMotion_getMotionPtr(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *arg1 = (Piavca::PyMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:PyMotion_getMotionPtr",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->getMotionPtr();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyMotion_getMotionLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *arg1 = (Piavca::PyMotion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:PyMotion_getMotionLength",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::PyMotion const *)arg1)->getMotionLength();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyMotion_isNull(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *arg1 = (Piavca::PyMotion *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:PyMotion_isNull",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::PyMotion const *)arg1)->isNull(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyMotion_getTrackType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *arg1 = (Piavca::PyMotion *) 0 ;
    int arg2 ;
    Piavca::trackType result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:PyMotion_getTrackType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::trackType)((Piavca::PyMotion const *)arg1)->getTrackType(arg2);
    
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyMotion_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *arg1 = (Piavca::PyMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:PyMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyMotion_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *arg1 = (Piavca::PyMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:PyMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PyMotion_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::PyMotion *arg1 = (Piavca::PyMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:PyMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__PyMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PyMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__PyMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_Pi_set(PyObject *) {
    PyErr_SetString(PyExc_TypeError,"Variable Pi is read-only.");
    return 1;
}


static PyObject *_wrap_Pi_get(void) {
    PyObject *pyobj = NULL;
    
    {
        pyobj = SWIG_From_float(static_cast<float >(Piavca::Pi)); 
    }
    return pyobj;
}


static PyObject *_wrap_degToRad(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:degToRad",&obj0)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (float)Piavca::degToRad(arg1);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_radToDeg(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:radToDeg",&obj0)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (float)Piavca::radToDeg(arg1);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_MotionFilter(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_MotionFilter",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_printInfo(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionFilter_printInfo",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->printInfo();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_findSub(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_findSub",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    result = (Piavca::Motion *)(arg1)->findSub(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_findSubByType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    type_info *arg2 = 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_findSubByType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_type_info, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("type_info");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Motion *)(arg1)->findSubByType((type_info const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_load(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_load",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->load(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_unload(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionFilter_unload",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->unload();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_loaded(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionFilter_loaded",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->loaded();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_setStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_setStartTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setStartTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_reset(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionFilter_reset",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_setMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_setMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->setMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_getMotionLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionFilter_getMotionLength",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::MotionFilter const *)arg1)->getMotionLength();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_isFacial(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionFilter_isFacial",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isFacial();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_isRandomAccess(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionFilter_isRandomAccess",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isRandomAccess();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_isNull(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_isNull",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::MotionFilter const *)arg1)->isNull(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionFilter_getTrackType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionFilter *arg1 = (Piavca::MotionFilter *) 0 ;
    int arg2 ;
    Piavca::trackType result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionFilter_getTrackType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionFilter, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::trackType)((Piavca::MotionFilter const *)arg1)->getTrackType(arg2);
    
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MotionFilter_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__MotionFilter, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_delete_TwoMotionCombiner(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_TwoMotionCombiner",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_printInfo(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_printInfo",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->printInfo();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_findSub(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_findSub",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    result = (Piavca::Motion *)(arg1)->findSub(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_findSubByType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    type_info *arg2 = 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_findSubByType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_type_info, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("type_info");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Motion *)(arg1)->findSubByType((type_info const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_load(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_load",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->load(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_unload(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_unload",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->unload();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_loaded(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_loaded",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->loaded();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_setStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_setStartTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setStartTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_reset(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_reset",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_getMotionLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_getMotionLength",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::TwoMotionCombiner const *)arg1)->getMotionLength();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_isFacial(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_isFacial",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isFacial();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_isRandomAccess(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_isRandomAccess",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isRandomAccess();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_isNull(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_isNull",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::TwoMotionCombiner const *)arg1)->isNull(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_getTrackType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    int arg2 ;
    Piavca::trackType result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_getTrackType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::trackType)((Piavca::TwoMotionCombiner const *)arg1)->getTrackType(arg2);
    
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_setMotion1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_setMotion1",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->setMotion1(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_setMotion2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TwoMotionCombiner_setMotion2",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->setMotion2(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_getMotion1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_getMotion1",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->getMotion1();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TwoMotionCombiner_getMotion2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TwoMotionCombiner *arg1 = (Piavca::TwoMotionCombiner *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TwoMotionCombiner_getMotion2",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TwoMotionCombiner, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->getMotion2();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * TwoMotionCombiner_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__TwoMotionCombiner, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ScaleMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    Piavca::ScaleMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ScaleMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::ScaleMotion *)new Piavca::ScaleMotion(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ScaleMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ScaleMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::ScaleMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ScaleMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::ScaleMotion *)new Piavca::ScaleMotion(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ScaleMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ScaleMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotion *arg1 = 0 ;
    Piavca::ScaleMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ScaleMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::ScaleMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::ScaleMotion *)new Piavca::ScaleMotion((Piavca::ScaleMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ScaleMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ScaleMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__ScaleMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_ScaleMotion__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_ScaleMotion__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_ScaleMotion__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_ScaleMotion'");
    return NULL;
}


static PyObject *_wrap_ScaleMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScaleMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotion_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotion_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotion_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotion_setScaleFactor(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ScaleMotion_setScaleFactor",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setScaleFactor(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ScaleMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotion *arg1 = (Piavca::ScaleMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ScaleMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ScaleMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__ScaleMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ScaleMotionSpeed__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    Piavca::ScaleMotionSpeed *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ScaleMotionSpeed",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::ScaleMotionSpeed *)new Piavca::ScaleMotionSpeed(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ScaleMotionSpeed, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ScaleMotionSpeed__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::ScaleMotionSpeed *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ScaleMotionSpeed",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::ScaleMotionSpeed *)new Piavca::ScaleMotionSpeed(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ScaleMotionSpeed, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ScaleMotionSpeed__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionSpeed *arg1 = 0 ;
    Piavca::ScaleMotionSpeed *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ScaleMotionSpeed",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::ScaleMotionSpeed");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::ScaleMotionSpeed *)new Piavca::ScaleMotionSpeed((Piavca::ScaleMotionSpeed const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ScaleMotionSpeed, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ScaleMotionSpeed(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__ScaleMotionSpeed, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_ScaleMotionSpeed__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_ScaleMotionSpeed__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_ScaleMotionSpeed__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_ScaleMotionSpeed'");
    return NULL;
}


static PyObject *_wrap_ScaleMotionSpeed_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScaleMotionSpeed_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotionSpeed_getMotionLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScaleMotionSpeed_getMotionLength",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::ScaleMotionSpeed const *)arg1)->getMotionLength();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotionSpeed_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionSpeed_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotionSpeed_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionSpeed_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotionSpeed_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionSpeed_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotionSpeed_setScaleFactor(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ScaleMotionSpeed_setScaleFactor",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setScaleFactor(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ScaleMotionSpeed(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionSpeed *arg1 = (Piavca::ScaleMotionSpeed *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ScaleMotionSpeed",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionSpeed, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ScaleMotionSpeed_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__ScaleMotionSpeed, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ScaleMotionRoot__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    Piavca::ScaleMotionRoot *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ScaleMotionRoot",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::ScaleMotionRoot *)new Piavca::ScaleMotionRoot(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ScaleMotionRoot, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ScaleMotionRoot__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::ScaleMotionRoot *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ScaleMotionRoot",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::ScaleMotionRoot *)new Piavca::ScaleMotionRoot(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ScaleMotionRoot, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ScaleMotionRoot__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionRoot *arg1 = 0 ;
    Piavca::ScaleMotionRoot *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ScaleMotionRoot",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::ScaleMotionRoot");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::ScaleMotionRoot *)new Piavca::ScaleMotionRoot((Piavca::ScaleMotionRoot const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ScaleMotionRoot, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ScaleMotionRoot(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__ScaleMotionRoot, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_ScaleMotionRoot__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_ScaleMotionRoot__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_ScaleMotionRoot__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_ScaleMotionRoot'");
    return NULL;
}


static PyObject *_wrap_delete_ScaleMotionRoot(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ScaleMotionRoot",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotionRoot_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScaleMotionRoot_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotionRoot_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionRoot_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotionRoot_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionRoot_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotionRoot_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ScaleMotionRoot_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScaleMotionRoot_setScaleFactor(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ScaleMotionRoot *arg1 = (Piavca::ScaleMotionRoot *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ScaleMotionRoot_setScaleFactor",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ScaleMotionRoot, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setScaleFactor(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ScaleMotionRoot_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__ScaleMotionRoot, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_TimeOffset__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    Piavca::TimeOffset *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_TimeOffset",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::TimeOffset *)new Piavca::TimeOffset(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TimeOffset, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TimeOffset__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeOffset *arg1 = 0 ;
    Piavca::TimeOffset *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_TimeOffset",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::TimeOffset");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::TimeOffset *)new Piavca::TimeOffset((Piavca::TimeOffset const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TimeOffset, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TimeOffset(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TimeOffset, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_TimeOffset__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_TimeOffset__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_TimeOffset'");
    return NULL;
}


static PyObject *_wrap_TimeOffset_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TimeOffset_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeOffset_setStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TimeOffset_setStartTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setStartTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeOffset_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TimeOffset_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeOffset_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TimeOffset_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeOffset_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TimeOffset_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeOffset_setOffset(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TimeOffset_setOffset",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setOffset(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_TimeOffset(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeOffset *arg1 = (Piavca::TimeOffset *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_TimeOffset",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeOffset, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * TimeOffset_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__TimeOffset, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_TurnMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Quat arg2 ;
    Piavca::TurnMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_TurnMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        Piavca::Quat * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    result = (Piavca::TurnMotion *)new Piavca::TurnMotion(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TurnMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TurnMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TurnMotion *arg1 = 0 ;
    Piavca::TurnMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_TurnMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TurnMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::TurnMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::TurnMotion *)new Piavca::TurnMotion((Piavca::TurnMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TurnMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TurnMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TurnMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_TurnMotion__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Quat, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_new_TurnMotion__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_TurnMotion'");
    return NULL;
}


static PyObject *_wrap_TurnMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TurnMotion *arg1 = (Piavca::TurnMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TurnMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TurnMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TurnMotion_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TurnMotion *arg1 = (Piavca::TurnMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TurnMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TurnMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TurnMotion_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TurnMotion *arg1 = (Piavca::TurnMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TurnMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TurnMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TurnMotion_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TurnMotion *arg1 = (Piavca::TurnMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TurnMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TurnMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TurnMotion_setRotation(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TurnMotion *arg1 = (Piavca::TurnMotion *) 0 ;
    Piavca::Quat arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TurnMotion_setRotation",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TurnMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        Piavca::Quat * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_Piavca__Quat, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Quat");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    (arg1)->setRotation(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_TurnMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TurnMotion *arg1 = (Piavca::TurnMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_TurnMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TurnMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * TurnMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__TurnMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_SequentialBlend__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    float arg3 ;
    float arg4 ;
    Piavca::SequentialBlend *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:new_SequentialBlend",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::SequentialBlend *)new Piavca::SequentialBlend(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__SequentialBlend, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SequentialBlend__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    float arg3 ;
    Piavca::SequentialBlend *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_SequentialBlend",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::SequentialBlend *)new Piavca::SequentialBlend(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__SequentialBlend, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SequentialBlend__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    Piavca::SequentialBlend *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_SequentialBlend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    result = (Piavca::SequentialBlend *)new Piavca::SequentialBlend(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__SequentialBlend, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SequentialBlend__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = 0 ;
    Piavca::SequentialBlend *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_SequentialBlend",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::SequentialBlend");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::SequentialBlend *)new Piavca::SequentialBlend((Piavca::SequentialBlend const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__SequentialBlend, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SequentialBlend(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__SequentialBlend, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_SequentialBlend__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_SequentialBlend__SWIG_2(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_SequentialBlend__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        return _wrap_new_SequentialBlend__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_SequentialBlend'");
    return NULL;
}


static PyObject *_wrap_SequentialBlend_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SequentialBlend_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SequentialBlend_setMaintainY(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SequentialBlend_setMaintainY",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setMaintainY(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SequentialBlend_setStartTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SequentialBlend_setStartTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setStartTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SequentialBlend_getMotionLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SequentialBlend_getMotionLength",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::SequentialBlend const *)arg1)->getMotionLength();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SequentialBlend_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:SequentialBlend_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SequentialBlend_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:SequentialBlend_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SequentialBlend_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:SequentialBlend_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SequentialBlend_setBlendStart(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SequentialBlend_setBlendStart",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setBlendStart(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SequentialBlend_setBlendInterval(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SequentialBlend_setBlendInterval",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setBlendInterval(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SequentialBlend_getBlendStart(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SequentialBlend_getBlendStart",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getBlendStart();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SequentialBlend_getBlendInterval(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SequentialBlend_getBlendInterval",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)(arg1)->getBlendInterval();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_SequentialBlend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SequentialBlend *arg1 = (Piavca::SequentialBlend *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_SequentialBlend",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SequentialBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SequentialBlend_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__SequentialBlend, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_SelfBlend__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    Piavca::SelfBlend *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_SelfBlend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::SelfBlend *)new Piavca::SelfBlend(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__SelfBlend, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SelfBlend__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::SelfBlend *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_SelfBlend",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::SelfBlend *)new Piavca::SelfBlend(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__SelfBlend, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SelfBlend__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SelfBlend *arg1 = 0 ;
    Piavca::SelfBlend *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_SelfBlend",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SelfBlend, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::SelfBlend");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::SelfBlend *)new Piavca::SelfBlend((Piavca::SelfBlend const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__SelfBlend, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SelfBlend(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__SelfBlend, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_SelfBlend__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_SelfBlend__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_SelfBlend__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_SelfBlend'");
    return NULL;
}


static PyObject *_wrap_SelfBlend_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SelfBlend *arg1 = (Piavca::SelfBlend *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SelfBlend_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SelfBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SelfBlend_reset(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SelfBlend *arg1 = (Piavca::SelfBlend *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SelfBlend_reset",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SelfBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SelfBlend_reblend__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SelfBlend *arg1 = (Piavca::SelfBlend *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SelfBlend_reblend",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SelfBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->reblend();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SelfBlend_reblend__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SelfBlend *arg1 = (Piavca::SelfBlend *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SelfBlend_reblend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SelfBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->reblend(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SelfBlend_reblend(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__SelfBlend, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_SelfBlend_reblend__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__SelfBlend, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_SelfBlend_reblend__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'SelfBlend_reblend'");
    return NULL;
}


static PyObject *_wrap_SelfBlend_setMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SelfBlend *arg1 = (Piavca::SelfBlend *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SelfBlend_setMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SelfBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->setMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_SelfBlend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SelfBlend *arg1 = (Piavca::SelfBlend *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_SelfBlend",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SelfBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SelfBlend_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__SelfBlend, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_LoopMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    float arg3 ;
    Piavca::LoopMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_LoopMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::LoopMotion *)new Piavca::LoopMotion(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LoopMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    Piavca::LoopMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_LoopMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::LoopMotion *)new Piavca::LoopMotion(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LoopMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::LoopMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_LoopMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::LoopMotion *)new Piavca::LoopMotion(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LoopMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LoopMotion *arg1 = 0 ;
    Piavca::LoopMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_LoopMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::LoopMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::LoopMotion *)new Piavca::LoopMotion((Piavca::LoopMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LoopMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LoopMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_LoopMotion__SWIG_3(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_LoopMotion__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_LoopMotion__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_LoopMotion__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_LoopMotion'");
    return NULL;
}


static PyObject *_wrap_LoopMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LoopMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LoopMotion_getMotionLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LoopMotion_getMotionLength",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::LoopMotion const *)arg1)->getMotionLength();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LoopMotion_setEndTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LoopMotion_setEndTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setEndTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LoopMotion_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:LoopMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LoopMotion_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:LoopMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LoopMotion_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:LoopMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_LoopMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LoopMotion *arg1 = (Piavca::LoopMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_LoopMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * LoopMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__LoopMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_RandomTimingsLoop__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    float arg5 ;
    Piavca::RandomTimingsLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:new_RandomTimingsLoop",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = static_cast<float >(SWIG_As_float(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    result = (Piavca::RandomTimingsLoop *)new Piavca::RandomTimingsLoop(arg1,arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomTimingsLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomTimingsLoop__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    float arg3 ;
    float arg4 ;
    Piavca::RandomTimingsLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:new_RandomTimingsLoop",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::RandomTimingsLoop *)new Piavca::RandomTimingsLoop(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomTimingsLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomTimingsLoop__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    float arg3 ;
    Piavca::RandomTimingsLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_RandomTimingsLoop",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::RandomTimingsLoop *)new Piavca::RandomTimingsLoop(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomTimingsLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomTimingsLoop__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    Piavca::RandomTimingsLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_RandomTimingsLoop",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::RandomTimingsLoop *)new Piavca::RandomTimingsLoop(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomTimingsLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomTimingsLoop__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::RandomTimingsLoop *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RandomTimingsLoop",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::RandomTimingsLoop *)new Piavca::RandomTimingsLoop(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomTimingsLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomTimingsLoop__SWIG_5(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomTimingsLoop *arg1 = 0 ;
    Piavca::RandomTimingsLoop *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RandomTimingsLoop",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomTimingsLoop, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::RandomTimingsLoop");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::RandomTimingsLoop *)new Piavca::RandomTimingsLoop((Piavca::RandomTimingsLoop const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomTimingsLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomTimingsLoop(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomTimingsLoop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_RandomTimingsLoop__SWIG_5(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_RandomTimingsLoop__SWIG_4(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_RandomTimingsLoop__SWIG_3(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_RandomTimingsLoop__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        return _wrap_new_RandomTimingsLoop__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        _v = SWIG_Check_float(argv[4]);
                        if (_v) {
                            return _wrap_new_RandomTimingsLoop__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_RandomTimingsLoop'");
    return NULL;
}


static PyObject *_wrap_delete_RandomTimingsLoop(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomTimingsLoop *arg1 = (Piavca::RandomTimingsLoop *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_RandomTimingsLoop",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomTimingsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomTimingsLoop_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomTimingsLoop *arg1 = (Piavca::RandomTimingsLoop *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RandomTimingsLoop_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomTimingsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomTimingsLoop_setTimingParams(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomTimingsLoop *arg1 = (Piavca::RandomTimingsLoop *) 0 ;
    float arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:RandomTimingsLoop_setTimingParams",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomTimingsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->setTimingParams(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomTimingsLoop_reblend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomTimingsLoop *arg1 = (Piavca::RandomTimingsLoop *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomTimingsLoop_reblend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomTimingsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->reblend(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomTimingsLoop_setMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomTimingsLoop *arg1 = (Piavca::RandomTimingsLoop *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomTimingsLoop_setMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomTimingsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->setMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * RandomTimingsLoop_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__RandomTimingsLoop, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_AvatarPostureBlend__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    bool arg3 ;
    Piavca::AvatarPostureBlend *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_AvatarPostureBlend",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::AvatarPostureBlend *)new Piavca::AvatarPostureBlend(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarPostureBlend, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarPostureBlend__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    Piavca::AvatarPostureBlend *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_AvatarPostureBlend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::AvatarPostureBlend *)new Piavca::AvatarPostureBlend(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarPostureBlend, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarPostureBlend__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::AvatarPostureBlend *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_AvatarPostureBlend",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::AvatarPostureBlend *)new Piavca::AvatarPostureBlend(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarPostureBlend, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarPostureBlend__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarPostureBlend *arg1 = 0 ;
    Piavca::AvatarPostureBlend *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_AvatarPostureBlend",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::AvatarPostureBlend");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::AvatarPostureBlend *)new Piavca::AvatarPostureBlend((Piavca::AvatarPostureBlend const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarPostureBlend, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarPostureBlend(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__AvatarPostureBlend, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_AvatarPostureBlend__SWIG_3(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_AvatarPostureBlend__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_AvatarPostureBlend__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_bool(argv[2]);
                if (_v) {
                    return _wrap_new_AvatarPostureBlend__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_AvatarPostureBlend'");
    return NULL;
}


static PyObject *_wrap_AvatarPostureBlend_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarPostureBlend_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarPostureBlend_load(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarPostureBlend_load",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->load(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarPostureBlend_reblend__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarPostureBlend_reblend",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->reblend();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarPostureBlend_reblend__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarPostureBlend_reblend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->reblend(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarPostureBlend_reblend(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__AvatarPostureBlend, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_AvatarPostureBlend_reblend__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__AvatarPostureBlend, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_AvatarPostureBlend_reblend__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'AvatarPostureBlend_reblend'");
    return NULL;
}


static PyObject *_wrap_delete_AvatarPostureBlend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarPostureBlend *arg1 = (Piavca::AvatarPostureBlend *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_AvatarPostureBlend",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarPostureBlend, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * AvatarPostureBlend_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__AvatarPostureBlend, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_BlendBetween__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    float arg3 ;
    Piavca::BlendBetween *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_BlendBetween",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::BlendBetween *)new Piavca::BlendBetween(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__BlendBetween, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_BlendBetween__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::BlendBetween *arg1 = 0 ;
    Piavca::BlendBetween *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_BlendBetween",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::BlendBetween");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::BlendBetween *)new Piavca::BlendBetween((Piavca::BlendBetween const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__BlendBetween, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_BlendBetween(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__BlendBetween, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_BlendBetween__SWIG_1(self,args);
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_BlendBetween__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_BlendBetween'");
    return NULL;
}


static PyObject *_wrap_BlendBetween_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BlendBetween_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BlendBetween_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:BlendBetween_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BlendBetween_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:BlendBetween_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BlendBetween_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:BlendBetween_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BlendBetween_setBlendFactor(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BlendBetween_setBlendFactor",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setBlendFactor(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_BlendBetween(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::BlendBetween *arg1 = (Piavca::BlendBetween *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_BlendBetween",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__BlendBetween, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BlendBetween_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__BlendBetween, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MotionAdder__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    float arg3 ;
    Piavca::MotionAdder *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_MotionAdder",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::MotionAdder *)new Piavca::MotionAdder(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MotionAdder, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MotionAdder__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    Piavca::MotionAdder *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_MotionAdder",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    result = (Piavca::MotionAdder *)new Piavca::MotionAdder(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MotionAdder, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MotionAdder__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionAdder *arg1 = 0 ;
    Piavca::MotionAdder *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_MotionAdder",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionAdder, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionAdder");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::MotionAdder *)new Piavca::MotionAdder((Piavca::MotionAdder const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MotionAdder, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MotionAdder(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__MotionAdder, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_MotionAdder__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_MotionAdder__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_MotionAdder__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_MotionAdder'");
    return NULL;
}


static PyObject *_wrap_MotionAdder_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionAdder_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionAdder, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionAdder_setScaleSecond(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionAdder_setScaleSecond",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionAdder, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setScaleSecond(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionAdder_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:MotionAdder_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionAdder, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionAdder_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:MotionAdder_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionAdder, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionAdder_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:MotionAdder_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionAdder, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_MotionAdder(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionAdder *arg1 = (Piavca::MotionAdder *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_MotionAdder",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionAdder, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MotionAdder_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__MotionAdder, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MotionMask__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    bool arg1 ;
    Piavca::MotionMask *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_MotionMask",&obj0)) goto fail;
    {
        arg1 = static_cast<bool >(SWIG_As_bool(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::MotionMask *)new Piavca::MotionMask(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MotionMask, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MotionMask__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionMask *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_MotionMask")) goto fail;
    result = (Piavca::MotionMask *)new Piavca::MotionMask();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MotionMask, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MotionMask__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionMask *arg1 = 0 ;
    Piavca::MotionMask *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_MotionMask",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionMask");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::MotionMask *)new Piavca::MotionMask((Piavca::MotionMask const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MotionMask, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MotionMask(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_MotionMask__SWIG_1(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__MotionMask, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_MotionMask__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        _v = SWIG_Check_bool(argv[0]);
        if (_v) {
            return _wrap_new_MotionMask__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_MotionMask'");
    return NULL;
}


static PyObject *_wrap_MotionMask_setMask__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionMask *arg1 = (Piavca::MotionMask *) 0 ;
    int arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:MotionMask_setMask",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->setMask(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionMask_setMask__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionMask *arg1 = (Piavca::MotionMask *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionMask_setMask",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setMask(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionMask_setMask(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__MotionMask, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_MotionMask_setMask__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__MotionMask, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_bool(argv[2]);
                if (_v) {
                    return _wrap_MotionMask_setMask__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'MotionMask_setMask'");
    return NULL;
}


static PyObject *_wrap_MotionMask_getMask(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionMask *arg1 = (Piavca::MotionMask *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionMask_getMask",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::MotionMask const *)arg1)->getMask(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_MotionMask(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionMask *arg1 = (Piavca::MotionMask *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_MotionMask",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MotionMask_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__MotionMask, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MaskedMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_MaskedMotion")) goto fail;
    result = (Piavca::MaskedMotion *)new Piavca::MaskedMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MaskedMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MaskedMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::MotionMask *arg2 = 0 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    Piavca::MotionMask *arg4 = 0 ;
    bool arg5 ;
    Piavca::MaskedMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:new_MaskedMotion",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::MotionMask");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (arg4 == NULL) {
            SWIG_null_ref("Piavca::MotionMask");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    {
        arg5 = static_cast<bool >(SWIG_As_bool(obj4)); 
        if (SWIG_arg_fail(5)) SWIG_fail;
    }
    result = (Piavca::MaskedMotion *)new Piavca::MaskedMotion(arg1,(Piavca::MotionMask const &)*arg2,arg3,(Piavca::MotionMask const &)*arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MaskedMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MaskedMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::MotionMask *arg2 = 0 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    Piavca::MotionMask *arg4 = 0 ;
    Piavca::MaskedMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:new_MaskedMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::MotionMask");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (arg4 == NULL) {
            SWIG_null_ref("Piavca::MotionMask");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::MaskedMotion *)new Piavca::MaskedMotion(arg1,(Piavca::MotionMask const &)*arg2,arg3,(Piavca::MotionMask const &)*arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MaskedMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MaskedMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = 0 ;
    Piavca::MaskedMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_MaskedMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MaskedMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::MaskedMotion *)new Piavca::MaskedMotion((Piavca::MaskedMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MaskedMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MaskedMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_MaskedMotion__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__MaskedMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_MaskedMotion__SWIG_3(self,args);
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__MotionMask, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr = 0;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__MotionMask, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = (ptr != 0);
                        }
                    }
                    if (_v) {
                        return _wrap_new_MaskedMotion__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__MotionMask, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr = 0;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__MotionMask, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = (ptr != 0);
                        }
                    }
                    if (_v) {
                        _v = SWIG_Check_bool(argv[4]);
                        if (_v) {
                            return _wrap_new_MaskedMotion__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_MaskedMotion'");
    return NULL;
}


static PyObject *_wrap_MaskedMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MaskedMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MaskedMotion_setUseSecondary(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_setUseSecondary",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setUseSecondary(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MaskedMotion_setMask1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    Piavca::MotionMask *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_setMask1",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::MotionMask");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setMask1((Piavca::MotionMask const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MaskedMotion_setMask2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    Piavca::MotionMask *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_setMask2",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__MotionMask, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::MotionMask");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setMask2((Piavca::MotionMask const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MaskedMotion_addToMask1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_addToMask1",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->addToMask1(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MaskedMotion_removeFromMask1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_removeFromMask1",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->removeFromMask1(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MaskedMotion_addToMask2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_addToMask2",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->addToMask2(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MaskedMotion_removeFromMask2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MaskedMotion_removeFromMask2",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->removeFromMask2(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MaskedMotion_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:MaskedMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MaskedMotion_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:MaskedMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MaskedMotion_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:MaskedMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_MaskedMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MaskedMotion *arg1 = (Piavca::MaskedMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_MaskedMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MaskedMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MaskedMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__MaskedMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MultiMotionLoop__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    float arg2 ;
    float arg3 ;
    Piavca::MultiMotionLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_MultiMotionLoop",&obj0,&obj1,&obj2)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::MultiMotionLoop *)new Piavca::MultiMotionLoop((std::vector<Piavca::Motion * > const &)*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MultiMotionLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MultiMotionLoop__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    float arg2 ;
    Piavca::MultiMotionLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_MultiMotionLoop",&obj0,&obj1)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::MultiMotionLoop *)new Piavca::MultiMotionLoop((std::vector<Piavca::Motion * > const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MultiMotionLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MultiMotionLoop__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    Piavca::MultiMotionLoop *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_MultiMotionLoop",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::MultiMotionLoop *)new Piavca::MultiMotionLoop((std::vector<Piavca::Motion * > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MultiMotionLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MultiMotionLoop__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    float arg2 ;
    Piavca::MultiMotionLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_MultiMotionLoop",&obj0,&obj1)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::MultiMotionLoop *)new Piavca::MultiMotionLoop(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MultiMotionLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MultiMotionLoop__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    Piavca::MultiMotionLoop *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_MultiMotionLoop",&obj0)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::MultiMotionLoop *)new Piavca::MultiMotionLoop(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MultiMotionLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MultiMotionLoop__SWIG_5(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MultiMotionLoop *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_MultiMotionLoop")) goto fail;
    result = (Piavca::MultiMotionLoop *)new Piavca::MultiMotionLoop();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MultiMotionLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MultiMotionLoop__SWIG_6(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MultiMotionLoop *arg1 = 0 ;
    Piavca::MultiMotionLoop *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_MultiMotionLoop",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MultiMotionLoop, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MultiMotionLoop");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::MultiMotionLoop *)new Piavca::MultiMotionLoop((Piavca::MultiMotionLoop const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MultiMotionLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MultiMotionLoop(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_MultiMotionLoop__SWIG_5(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_MultiMotionLoop__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__MultiMotionLoop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_MultiMotionLoop__SWIG_6(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            return _wrap_new_MultiMotionLoop__SWIG_4(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_MultiMotionLoop__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_MultiMotionLoop__SWIG_3(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_MultiMotionLoop__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_MultiMotionLoop'");
    return NULL;
}


static PyObject *_wrap_delete_MultiMotionLoop(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MultiMotionLoop *arg1 = (Piavca::MultiMotionLoop *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_MultiMotionLoop",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MultiMotionLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MultiMotionLoop_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MultiMotionLoop *arg1 = (Piavca::MultiMotionLoop *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MultiMotionLoop_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MultiMotionLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MultiMotionLoop_printInfo(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MultiMotionLoop *arg1 = (Piavca::MultiMotionLoop *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MultiMotionLoop_printInfo",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MultiMotionLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->printInfo();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MultiMotionLoop_addMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MultiMotionLoop *arg1 = (Piavca::MultiMotionLoop *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MultiMotionLoop_addMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MultiMotionLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->addMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MultiMotionLoop_findSub(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MultiMotionLoop *arg1 = (Piavca::MultiMotionLoop *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MultiMotionLoop_findSub",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MultiMotionLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    result = (Piavca::Motion *)(arg1)->findSub(arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MultiMotionLoop_findSubByType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MultiMotionLoop *arg1 = (Piavca::MultiMotionLoop *) 0 ;
    type_info *arg2 = 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MultiMotionLoop_findSubByType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MultiMotionLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_type_info, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("type_info");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Motion *)(arg1)->findSubByType((type_info const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MultiMotionLoop_load(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MultiMotionLoop *arg1 = (Piavca::MultiMotionLoop *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MultiMotionLoop_load",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MultiMotionLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->load(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MultiMotionLoop_unload(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MultiMotionLoop *arg1 = (Piavca::MultiMotionLoop *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MultiMotionLoop_unload",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MultiMotionLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->unload();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MultiMotionLoop_loaded(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MultiMotionLoop *arg1 = (Piavca::MultiMotionLoop *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MultiMotionLoop_loaded",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MultiMotionLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    result = (bool)(arg1)->loaded(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MultiMotionLoop_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__MultiMotionLoop, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ChoiceLoopMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    float arg2 ;
    float arg3 ;
    Piavca::ChoiceLoopMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_ChoiceLoopMotion",&obj0,&obj1,&obj2)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::ChoiceLoopMotion *)new Piavca::ChoiceLoopMotion((std::vector<Piavca::Motion * > const &)*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ChoiceLoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ChoiceLoopMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    float arg2 ;
    Piavca::ChoiceLoopMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ChoiceLoopMotion",&obj0,&obj1)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::ChoiceLoopMotion *)new Piavca::ChoiceLoopMotion((std::vector<Piavca::Motion * > const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ChoiceLoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ChoiceLoopMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    Piavca::ChoiceLoopMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ChoiceLoopMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::ChoiceLoopMotion *)new Piavca::ChoiceLoopMotion((std::vector<Piavca::Motion * > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ChoiceLoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ChoiceLoopMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ChoiceLoopMotion *arg1 = 0 ;
    Piavca::ChoiceLoopMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ChoiceLoopMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ChoiceLoopMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::ChoiceLoopMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::ChoiceLoopMotion *)new Piavca::ChoiceLoopMotion((Piavca::ChoiceLoopMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ChoiceLoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ChoiceLoopMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_ChoiceLoopMotion__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__ChoiceLoopMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_ChoiceLoopMotion__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_ChoiceLoopMotion__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_ChoiceLoopMotion__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_ChoiceLoopMotion'");
    return NULL;
}


static PyObject *_wrap_delete_ChoiceLoopMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ChoiceLoopMotion *arg1 = (Piavca::ChoiceLoopMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ChoiceLoopMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ChoiceLoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ChoiceLoopMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ChoiceLoopMotion *arg1 = (Piavca::ChoiceLoopMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ChoiceLoopMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ChoiceLoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ChoiceLoopMotion_setCurrentChoice__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ChoiceLoopMotion *arg1 = (Piavca::ChoiceLoopMotion *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ChoiceLoopMotion_setCurrentChoice",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ChoiceLoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setCurrentChoice(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ChoiceLoopMotion_setCurrentChoice__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ChoiceLoopMotion *arg1 = (Piavca::ChoiceLoopMotion *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ChoiceLoopMotion_setCurrentChoice",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ChoiceLoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->setCurrentChoice(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ChoiceLoopMotion_setCurrentChoice(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__ChoiceLoopMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_ChoiceLoopMotion_setCurrentChoice__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__ChoiceLoopMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_ChoiceLoopMotion_setCurrentChoice__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'ChoiceLoopMotion_setCurrentChoice'");
    return NULL;
}


static PyObject *_wrap_ChoiceLoopMotion_reblend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ChoiceLoopMotion *arg1 = (Piavca::ChoiceLoopMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ChoiceLoopMotion_reblend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ChoiceLoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->reblend(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ChoiceLoopMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__ChoiceLoopMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_RandomLoopMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    vector<float > arg2 ;
    float arg3 ;
    float arg4 ;
    Piavca::RandomLoopMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:new_RandomLoopMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        vector<float > * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_vectorTfloat_t, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("vector<float >");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::RandomLoopMotion *)new Piavca::RandomLoopMotion((std::vector<Piavca::Motion * > const &)*arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomLoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomLoopMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    vector<float > arg2 ;
    float arg3 ;
    Piavca::RandomLoopMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_RandomLoopMotion",&obj0,&obj1,&obj2)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        vector<float > * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_vectorTfloat_t, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("vector<float >");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::RandomLoopMotion *)new Piavca::RandomLoopMotion((std::vector<Piavca::Motion * > const &)*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomLoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomLoopMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    vector<float > arg2 ;
    Piavca::RandomLoopMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_RandomLoopMotion",&obj0,&obj1)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        vector<float > * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_vectorTfloat_t, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("vector<float >");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    result = (Piavca::RandomLoopMotion *)new Piavca::RandomLoopMotion((std::vector<Piavca::Motion * > const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomLoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomLoopMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomLoopMotion *arg1 = 0 ;
    Piavca::RandomLoopMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RandomLoopMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomLoopMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::RandomLoopMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::RandomLoopMotion *)new Piavca::RandomLoopMotion((Piavca::RandomLoopMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomLoopMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomLoopMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomLoopMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_RandomLoopMotion__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_vectorTfloat_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_new_RandomLoopMotion__SWIG_2(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_vectorTfloat_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_RandomLoopMotion__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_vectorTfloat_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        return _wrap_new_RandomLoopMotion__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_RandomLoopMotion'");
    return NULL;
}


static PyObject *_wrap_delete_RandomLoopMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomLoopMotion *arg1 = (Piavca::RandomLoopMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_RandomLoopMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomLoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomLoopMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomLoopMotion *arg1 = (Piavca::RandomLoopMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RandomLoopMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomLoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomLoopMotion_convertTo(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::RandomLoopMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RandomLoopMotion_convertTo",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::RandomLoopMotion *)Piavca::RandomLoopMotion::convertTo(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomLoopMotion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomLoopMotion_addMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomLoopMotion *arg1 = (Piavca::RandomLoopMotion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomLoopMotion_addMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomLoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->addMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomLoopMotion_addMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomLoopMotion *arg1 = (Piavca::RandomLoopMotion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:RandomLoopMotion_addMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomLoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->addMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomLoopMotion_addMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomLoopMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_RandomLoopMotion_addMotion__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomLoopMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_RandomLoopMotion_addMotion__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'RandomLoopMotion_addMotion'");
    return NULL;
}


static PyObject *_wrap_RandomLoopMotion_setProbability(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomLoopMotion *arg1 = (Piavca::RandomLoopMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:RandomLoopMotion_setProbability",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomLoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->setProbability(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomLoopMotion_reblend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomLoopMotion *arg1 = (Piavca::RandomLoopMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomLoopMotion_reblend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomLoopMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->reblend(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * RandomLoopMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__RandomLoopMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_RandomBlendLoop__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    float arg2 ;
    float arg3 ;
    Piavca::RandomBlendLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_RandomBlendLoop",&obj0,&obj1,&obj2)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::RandomBlendLoop *)new Piavca::RandomBlendLoop((std::vector<Piavca::Motion * > const &)*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomBlendLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomBlendLoop__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    float arg2 ;
    Piavca::RandomBlendLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_RandomBlendLoop",&obj0,&obj1)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::RandomBlendLoop *)new Piavca::RandomBlendLoop((std::vector<Piavca::Motion * > const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomBlendLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomBlendLoop__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    Piavca::RandomBlendLoop *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RandomBlendLoop",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::RandomBlendLoop *)new Piavca::RandomBlendLoop((std::vector<Piavca::Motion * > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomBlendLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomBlendLoop__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    float arg2 ;
    Piavca::RandomBlendLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_RandomBlendLoop",&obj0,&obj1)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::RandomBlendLoop *)new Piavca::RandomBlendLoop(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomBlendLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomBlendLoop__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    Piavca::RandomBlendLoop *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RandomBlendLoop",&obj0)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::RandomBlendLoop *)new Piavca::RandomBlendLoop(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomBlendLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomBlendLoop__SWIG_5(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomBlendLoop *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_RandomBlendLoop")) goto fail;
    result = (Piavca::RandomBlendLoop *)new Piavca::RandomBlendLoop();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomBlendLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomBlendLoop__SWIG_6(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomBlendLoop *arg1 = 0 ;
    Piavca::RandomBlendLoop *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RandomBlendLoop",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomBlendLoop, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::RandomBlendLoop");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::RandomBlendLoop *)new Piavca::RandomBlendLoop((Piavca::RandomBlendLoop const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomBlendLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomBlendLoop(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_RandomBlendLoop__SWIG_5(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_RandomBlendLoop__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomBlendLoop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_RandomBlendLoop__SWIG_6(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            return _wrap_new_RandomBlendLoop__SWIG_4(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_RandomBlendLoop__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_RandomBlendLoop__SWIG_3(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_RandomBlendLoop__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_RandomBlendLoop'");
    return NULL;
}


static PyObject *_wrap_delete_RandomBlendLoop(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomBlendLoop *arg1 = (Piavca::RandomBlendLoop *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_RandomBlendLoop",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomBlendLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomBlendLoop_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomBlendLoop *arg1 = (Piavca::RandomBlendLoop *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RandomBlendLoop_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomBlendLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomBlendLoop_addMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomBlendLoop *arg1 = (Piavca::RandomBlendLoop *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomBlendLoop_addMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomBlendLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->addMotion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomBlendLoop_addMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomBlendLoop *arg1 = (Piavca::RandomBlendLoop *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:RandomBlendLoop_addMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomBlendLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->addMotion(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomBlendLoop_addMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomBlendLoop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_RandomBlendLoop_addMotion__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomBlendLoop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_RandomBlendLoop_addMotion__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'RandomBlendLoop_addMotion'");
    return NULL;
}


static PyObject *_wrap_RandomBlendLoop_setAutoShift(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomBlendLoop *arg1 = (Piavca::RandomBlendLoop *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomBlendLoop_setAutoShift",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomBlendLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setAutoShift(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomBlendLoop_shift(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomBlendLoop *arg1 = (Piavca::RandomBlendLoop *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RandomBlendLoop_shift",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomBlendLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->shift();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomBlendLoop_reblend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomBlendLoop *arg1 = (Piavca::RandomBlendLoop *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomBlendLoop_reblend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomBlendLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->reblend(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * RandomBlendLoop_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__RandomBlendLoop, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_RandomAddLoop__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    float arg2 ;
    float arg3 ;
    Piavca::RandomAddLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_RandomAddLoop",&obj0,&obj1,&obj2)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::RandomAddLoop *)new Piavca::RandomAddLoop((std::vector<Piavca::Motion * > const &)*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomAddLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomAddLoop__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    float arg2 ;
    Piavca::RandomAddLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_RandomAddLoop",&obj0,&obj1)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::RandomAddLoop *)new Piavca::RandomAddLoop((std::vector<Piavca::Motion * > const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomAddLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomAddLoop__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionVec *arg1 = 0 ;
    Piavca::RandomAddLoop *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RandomAddLoop",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionVec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::RandomAddLoop *)new Piavca::RandomAddLoop((std::vector<Piavca::Motion * > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomAddLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomAddLoop__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomAddLoop *arg1 = 0 ;
    Piavca::RandomAddLoop *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RandomAddLoop",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomAddLoop, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::RandomAddLoop");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::RandomAddLoop *)new Piavca::RandomAddLoop((Piavca::RandomAddLoop const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomAddLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomAddLoop(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_RandomAddLoop__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomAddLoop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_RandomAddLoop__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_RandomAddLoop__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__vectorTPiavca__Motion_p_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_RandomAddLoop__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_RandomAddLoop'");
    return NULL;
}


static PyObject *_wrap_delete_RandomAddLoop(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomAddLoop *arg1 = (Piavca::RandomAddLoop *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_RandomAddLoop",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomAddLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomAddLoop_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomAddLoop *arg1 = (Piavca::RandomAddLoop *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RandomAddLoop_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomAddLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomAddLoop_setAutoShift(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomAddLoop *arg1 = (Piavca::RandomAddLoop *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomAddLoop_setAutoShift",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomAddLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setAutoShift(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomAddLoop_shift(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomAddLoop *arg1 = (Piavca::RandomAddLoop *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RandomAddLoop_shift",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomAddLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->shift();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomAddLoop_reblend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomAddLoop *arg1 = (Piavca::RandomAddLoop *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomAddLoop_reblend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomAddLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->reblend(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * RandomAddLoop_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__RandomAddLoop, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ProxemicsLoop__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg4 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg5 = (Piavca::Motion *) 0 ;
    float arg6 ;
    float arg7 ;
    float arg8 ;
    Piavca::ProxemicsLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    PyObject * obj7 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_ProxemicsLoop",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(4)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(5)) SWIG_fail;
    {
        arg6 = static_cast<float >(SWIG_As_float(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        arg7 = static_cast<float >(SWIG_As_float(obj6)); 
        if (SWIG_arg_fail(7)) SWIG_fail;
    }
    {
        arg8 = static_cast<float >(SWIG_As_float(obj7)); 
        if (SWIG_arg_fail(8)) SWIG_fail;
    }
    result = (Piavca::ProxemicsLoop *)new Piavca::ProxemicsLoop(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ProxemicsLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ProxemicsLoop__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg4 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg5 = (Piavca::Motion *) 0 ;
    float arg6 ;
    float arg7 ;
    Piavca::ProxemicsLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    PyObject * obj6 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_ProxemicsLoop",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(4)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(5)) SWIG_fail;
    {
        arg6 = static_cast<float >(SWIG_As_float(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    {
        arg7 = static_cast<float >(SWIG_As_float(obj6)); 
        if (SWIG_arg_fail(7)) SWIG_fail;
    }
    result = (Piavca::ProxemicsLoop *)new Piavca::ProxemicsLoop(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ProxemicsLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ProxemicsLoop__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg4 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg5 = (Piavca::Motion *) 0 ;
    float arg6 ;
    Piavca::ProxemicsLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOO:new_ProxemicsLoop",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(4)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(5)) SWIG_fail;
    {
        arg6 = static_cast<float >(SWIG_As_float(obj5)); 
        if (SWIG_arg_fail(6)) SWIG_fail;
    }
    result = (Piavca::ProxemicsLoop *)new Piavca::ProxemicsLoop(arg1,arg2,arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ProxemicsLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ProxemicsLoop__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg2 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg3 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg4 = (Piavca::Motion *) 0 ;
    Piavca::Motion *arg5 = (Piavca::Motion *) 0 ;
    Piavca::ProxemicsLoop *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:new_ProxemicsLoop",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(4)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj4, (void **)&arg5, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(5)) SWIG_fail;
    result = (Piavca::ProxemicsLoop *)new Piavca::ProxemicsLoop(arg1,arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ProxemicsLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ProxemicsLoop__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ProxemicsLoop *arg1 = 0 ;
    Piavca::ProxemicsLoop *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ProxemicsLoop",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ProxemicsLoop, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::ProxemicsLoop");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::ProxemicsLoop *)new Piavca::ProxemicsLoop((Piavca::ProxemicsLoop const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ProxemicsLoop, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ProxemicsLoop(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[9];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 8); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__ProxemicsLoop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_ProxemicsLoop__SWIG_4(self,args);
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_new_ProxemicsLoop__SWIG_3(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            _v = SWIG_Check_float(argv[5]);
                            if (_v) {
                                return _wrap_new_ProxemicsLoop__SWIG_2(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            _v = SWIG_Check_float(argv[5]);
                            if (_v) {
                                _v = SWIG_Check_float(argv[6]);
                                if (_v) {
                                    return _wrap_new_ProxemicsLoop__SWIG_1(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 8) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            _v = SWIG_Check_float(argv[5]);
                            if (_v) {
                                _v = SWIG_Check_float(argv[6]);
                                if (_v) {
                                    _v = SWIG_Check_float(argv[7]);
                                    if (_v) {
                                        return _wrap_new_ProxemicsLoop__SWIG_0(self,args);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_ProxemicsLoop'");
    return NULL;
}


static PyObject *_wrap_delete_ProxemicsLoop(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ProxemicsLoop *arg1 = (Piavca::ProxemicsLoop *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ProxemicsLoop",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ProxemicsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ProxemicsLoop_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ProxemicsLoop *arg1 = (Piavca::ProxemicsLoop *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ProxemicsLoop_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ProxemicsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ProxemicsLoop_setDistance(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ProxemicsLoop *arg1 = (Piavca::ProxemicsLoop *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ProxemicsLoop_setDistance",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ProxemicsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setDistance(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ProxemicsLoop_setThreshold(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ProxemicsLoop *arg1 = (Piavca::ProxemicsLoop *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ProxemicsLoop_setThreshold",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ProxemicsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setThreshold(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ProxemicsLoop_setAngleThreshold(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ProxemicsLoop *arg1 = (Piavca::ProxemicsLoop *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ProxemicsLoop_setAngleThreshold",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ProxemicsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setAngleThreshold(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ProxemicsLoop_turnOff(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ProxemicsLoop *arg1 = (Piavca::ProxemicsLoop *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ProxemicsLoop_turnOff",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ProxemicsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->turnOff(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ProxemicsLoop_addAvatar(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ProxemicsLoop *arg1 = (Piavca::ProxemicsLoop *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ProxemicsLoop_addAvatar",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ProxemicsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->addAvatar(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ProxemicsLoop_removeAvatar(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ProxemicsLoop *arg1 = (Piavca::ProxemicsLoop *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ProxemicsLoop_removeAvatar",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ProxemicsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->removeAvatar(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ProxemicsLoop_removeAllAvatars(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ProxemicsLoop *arg1 = (Piavca::ProxemicsLoop *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ProxemicsLoop_removeAllAvatars",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ProxemicsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->removeAllAvatars();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ProxemicsLoop_reblend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ProxemicsLoop *arg1 = (Piavca::ProxemicsLoop *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ProxemicsLoop_reblend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ProxemicsLoop, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->reblend(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ProxemicsLoop_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__ProxemicsLoop, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_LookAtMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    float arg3 ;
    float arg4 ;
    Piavca::LookAtMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:new_LookAtMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::LookAtMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_LookAtMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    Piavca::LookAtMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_LookAtMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    float arg2 ;
    float arg3 ;
    Piavca::LookAtMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_LookAtMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtMotion__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    float arg2 ;
    Piavca::LookAtMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_LookAtMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtMotion__SWIG_5(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    Piavca::LookAtMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_LookAtMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtMotion__SWIG_6(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = 0 ;
    float arg2 ;
    bool arg3 ;
    float arg4 ;
    Piavca::LookAtMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:new_LookAtMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion((Piavca::Vec const &)*arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtMotion__SWIG_7(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = 0 ;
    float arg2 ;
    bool arg3 ;
    Piavca::LookAtMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_LookAtMotion",&obj0,&obj1,&obj2)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion((Piavca::Vec const &)*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtMotion__SWIG_8(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = 0 ;
    float arg2 ;
    Piavca::LookAtMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_LookAtMotion",&obj0,&obj1)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion((Piavca::Vec const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtMotion__SWIG_9(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Vec *arg1 = 0 ;
    Piavca::LookAtMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_LookAtMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion((Piavca::Vec const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtMotion__SWIG_10(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = 0 ;
    Piavca::LookAtMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_LookAtMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::LookAtMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::LookAtMotion *)new Piavca::LookAtMotion((Piavca::LookAtMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Object, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_LookAtMotion__SWIG_5(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_LookAtMotion__SWIG_9(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_LookAtMotion__SWIG_10(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_LookAtMotion__SWIG_8(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Object, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_LookAtMotion__SWIG_4(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                return _wrap_new_LookAtMotion__SWIG_2(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_LookAtMotion__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Object, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_LookAtMotion__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_bool(argv[2]);
                if (_v) {
                    return _wrap_new_LookAtMotion__SWIG_7(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        return _wrap_new_LookAtMotion__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_bool(argv[2]);
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        return _wrap_new_LookAtMotion__SWIG_6(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_LookAtMotion'");
    return NULL;
}


static PyObject *_wrap_LookAtMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_isFacial(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_isFacial",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isFacial();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_isRandomAccess(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_isRandomAccess",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isRandomAccess();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_load(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_load",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->load(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_reblend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_reblend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->reblend(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setTarget__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:LookAtMotion_setTarget",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->setTarget(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setTarget__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    Piavca::Object *arg2 = (Piavca::Object *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setTarget",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->setTarget(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setTarget__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    Piavca::Vec arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:LookAtMotion_setTarget",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        Piavca::Vec * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->setTarget(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setTarget__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    Piavca::Vec arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setTarget",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        Piavca::Vec * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    (arg1)->setTarget(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setTarget(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Object, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_LookAtMotion_setTarget__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_LookAtMotion_setTarget__SWIG_3(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                _v = SWIG_Check_bool(argv[2]);
                if (_v) {
                    return _wrap_LookAtMotion_setTarget__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_int(argv[2]);
                if (_v) {
                    return _wrap_LookAtMotion_setTarget__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'LookAtMotion_setTarget'");
    return NULL;
}


static PyObject *_wrap_LookAtMotion_getTargetName(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    Piavca::tstring result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_getTargetName",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->getTargetName();
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setHeadActive__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setHeadActive",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setHeadActive(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setHeadActive__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_setHeadActive",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->setHeadActive();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setHeadActive(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_LookAtMotion_setHeadActive__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_bool(argv[1]);
            if (_v) {
                return _wrap_LookAtMotion_setHeadActive__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'LookAtMotion_setHeadActive'");
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setBodyActive__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setBodyActive",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setBodyActive(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setBodyActive__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_setBodyActive",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->setBodyActive();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setBodyActive(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_LookAtMotion_setBodyActive__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_bool(argv[1]);
            if (_v) {
                return _wrap_LookAtMotion_setBodyActive__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'LookAtMotion_setBodyActive'");
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setTurnBodyVertical__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setTurnBodyVertical",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setTurnBodyVertical(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setTurnBodyVertical__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_setTurnBodyVertical",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->setTurnBodyVertical();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setTurnBodyVertical(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_LookAtMotion_setTurnBodyVertical__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_bool(argv[1]);
            if (_v) {
                return _wrap_LookAtMotion_setTurnBodyVertical__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'LookAtMotion_setTurnBodyVertical'");
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setTurnBodyFull__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setTurnBodyFull",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setTurnBodyFull(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setTurnBodyFull__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_setTurnBodyFull",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->setTurnBodyFull();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setTurnBodyFull(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_LookAtMotion_setTurnBodyFull__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_bool(argv[1]);
            if (_v) {
                return _wrap_LookAtMotion_setTurnBodyFull__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'LookAtMotion_setTurnBodyFull'");
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setLeanTowards__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setLeanTowards",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setLeanTowards(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setLeanTowards__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_setLeanTowards",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->setLeanTowards();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setLeanTowards(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_LookAtMotion_setLeanTowards__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_bool(argv[1]);
            if (_v) {
                return _wrap_LookAtMotion_setLeanTowards__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'LookAtMotion_setLeanTowards'");
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setEyesLimit(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setEyesLimit",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setEyesLimit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setHeadBodyLimit(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setHeadBodyLimit",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setHeadBodyLimit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setEyesMorphAngle(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setEyesMorphAngle",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setEyesMorphAngle(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_setEndTime(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_setEndTime",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setEndTime(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_getMotionLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtMotion_getMotionLength",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::LookAtMotion const *)arg1)->getMotionLength();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_isNull(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_isNull",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::LookAtMotion const *)arg1)->isNull(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_isNullFacial(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_isNullFacial",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::LookAtMotion const *)arg1)->isNullFacial(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_getTrackType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    int arg2 ;
    Piavca::trackType result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_getTrackType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::trackType)((Piavca::LookAtMotion const *)arg1)->getTrackType(arg2);
    
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_canLookAt(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    Piavca::Vec arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtMotion_canLookAt",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        Piavca::Vec * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    result = (bool)(arg1)->canLookAt(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:LookAtMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:LookAtMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtMotion_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:LookAtMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_LookAtMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_LookAtMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * LookAtMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__LookAtMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_LookAtToFacial__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtMotion *arg1 = (Piavca::LookAtMotion *) 0 ;
    Piavca::LookAtToFacial *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_LookAtToFacial",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::LookAtToFacial *)new Piavca::LookAtToFacial(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtToFacial, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtToFacial__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtToFacial *arg1 = 0 ;
    Piavca::LookAtToFacial *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_LookAtToFacial",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::LookAtToFacial");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::LookAtToFacial *)new Piavca::LookAtToFacial((Piavca::LookAtToFacial const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__LookAtToFacial, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_LookAtToFacial(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_LookAtToFacial__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__LookAtToFacial, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_LookAtToFacial__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_LookAtToFacial'");
    return NULL;
}


static PyObject *_wrap_LookAtToFacial_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtToFacial_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtToFacial_load(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtToFacial_load",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->load(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtToFacial_isFacial(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LookAtToFacial_isFacial",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isFacial();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtToFacial_isNull(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LookAtToFacial_isNull",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::LookAtToFacial const *)arg1)->isNull(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtToFacial_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:LookAtToFacial_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtToFacial_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:LookAtToFacial_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LookAtToFacial_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:LookAtToFacial_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_LookAtToFacial(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::LookAtToFacial *arg1 = (Piavca::LookAtToFacial *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_LookAtToFacial",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__LookAtToFacial, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * LookAtToFacial_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__LookAtToFacial, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_flagStruct_headActive_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:flagStruct_headActive_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (arg1) (arg1)->headActive = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_flagStruct_headActive_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:flagStruct_headActive_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool) ((arg1)->headActive);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_flagStruct_bodyActive_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:flagStruct_bodyActive_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (arg1) (arg1)->bodyActive = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_flagStruct_bodyActive_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:flagStruct_bodyActive_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool) ((arg1)->bodyActive);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_flagStruct_turnBodyVertical_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:flagStruct_turnBodyVertical_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (arg1) (arg1)->turnBodyVertical = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_flagStruct_turnBodyVertical_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:flagStruct_turnBodyVertical_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool) ((arg1)->turnBodyVertical);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_flagStruct_turnBodyFull_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:flagStruct_turnBodyFull_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (arg1) (arg1)->turnBodyFull = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_flagStruct_turnBodyFull_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:flagStruct_turnBodyFull_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool) ((arg1)->turnBodyFull);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_flagStruct_leanTowards_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:flagStruct_leanTowards_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<bool >(SWIG_As_bool(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (arg1) (arg1)->leanTowards = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_flagStruct_leanTowards_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:flagStruct_leanTowards_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool) ((arg1)->leanTowards);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_flagStruct__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_flagStruct")) goto fail;
    result = (Piavca::flagStruct *)new Piavca::flagStruct();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__flagStruct, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_flagStruct__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = 0 ;
    Piavca::flagStruct *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_flagStruct",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::flagStruct");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::flagStruct *)new Piavca::flagStruct((Piavca::flagStruct const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__flagStruct, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_flagStruct(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_flagStruct__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__flagStruct, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_flagStruct__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_flagStruct'");
    return NULL;
}


static PyObject *_wrap_delete_flagStruct(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::flagStruct *arg1 = (Piavca::flagStruct *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_flagStruct",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * flagStruct_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__flagStruct, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_AvatarTargetStruct_avatar_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarTargetStruct_avatar_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (arg1) (arg1)->avatar = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarTargetStruct_avatar_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
    Piavca::Avatar *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarTargetStruct_avatar_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Avatar *) ((arg1)->avatar);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Avatar, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarTargetStruct_joint_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarTargetStruct_joint_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    if (arg1) (arg1)->joint = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarTargetStruct_joint_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarTargetStruct_joint_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (int) ((arg1)->joint);
    
    {
        resultobj = SWIG_From_int(static_cast<int >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarTargetStruct_flags_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
    Piavca::flagStruct *arg2 = (Piavca::flagStruct *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:AvatarTargetStruct_flags_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (arg1) (arg1)->flags = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_AvatarTargetStruct_flags_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
    Piavca::flagStruct *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:AvatarTargetStruct_flags_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::flagStruct *)& ((arg1)->flags);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__flagStruct, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarTargetStruct__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Avatar *arg1 = (Piavca::Avatar *) 0 ;
    int arg2 ;
    Piavca::flagStruct arg3 ;
    Piavca::AvatarTargetStruct *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_AvatarTargetStruct",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        Piavca::flagStruct * argp;
        SWIG_Python_ConvertPtr(obj2, (void **)&argp, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::flagStruct");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
        arg3 = *argp;
    }
    result = (Piavca::AvatarTargetStruct *)new Piavca::AvatarTargetStruct(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarTargetStruct, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarTargetStruct__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTargetStruct *arg1 = 0 ;
    Piavca::AvatarTargetStruct *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_AvatarTargetStruct",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::AvatarTargetStruct");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::AvatarTargetStruct *)new Piavca::AvatarTargetStruct((Piavca::AvatarTargetStruct const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__AvatarTargetStruct, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_AvatarTargetStruct(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__AvatarTargetStruct, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_AvatarTargetStruct__SWIG_1(self,args);
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_int(argv[1]);
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__flagStruct, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    return _wrap_new_AvatarTargetStruct__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_AvatarTargetStruct'");
    return NULL;
}


static PyObject *_wrap_delete_AvatarTargetStruct(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::AvatarTargetStruct *arg1 = (Piavca::AvatarTargetStruct *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_AvatarTargetStruct",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__AvatarTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * AvatarTargetStruct_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__AvatarTargetStruct, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ObjectTargetStruct_object_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ObjectTargetStruct *arg1 = (Piavca::ObjectTargetStruct *) 0 ;
    Piavca::Object *arg2 = (Piavca::Object *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ObjectTargetStruct_object_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ObjectTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (arg1) (arg1)->object = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ObjectTargetStruct_object_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ObjectTargetStruct *arg1 = (Piavca::ObjectTargetStruct *) 0 ;
    Piavca::Object *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ObjectTargetStruct_object_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ObjectTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Object *) ((arg1)->object);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Object, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ObjectTargetStruct_flags_set(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ObjectTargetStruct *arg1 = (Piavca::ObjectTargetStruct *) 0 ;
    Piavca::flagStruct *arg2 = (Piavca::flagStruct *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ObjectTargetStruct_flags_set",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ObjectTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    if (arg1) (arg1)->flags = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ObjectTargetStruct_flags_get(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ObjectTargetStruct *arg1 = (Piavca::ObjectTargetStruct *) 0 ;
    Piavca::flagStruct *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ObjectTargetStruct_flags_get",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ObjectTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::flagStruct *)& ((arg1)->flags);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__flagStruct, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ObjectTargetStruct__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Object *arg1 = (Piavca::Object *) 0 ;
    Piavca::flagStruct arg2 ;
    Piavca::ObjectTargetStruct *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ObjectTargetStruct",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        Piavca::flagStruct * argp;
        SWIG_Python_ConvertPtr(obj1, (void **)&argp, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::flagStruct");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
        arg2 = *argp;
    }
    result = (Piavca::ObjectTargetStruct *)new Piavca::ObjectTargetStruct(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ObjectTargetStruct, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ObjectTargetStruct__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ObjectTargetStruct *arg1 = 0 ;
    Piavca::ObjectTargetStruct *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ObjectTargetStruct",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ObjectTargetStruct, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::ObjectTargetStruct");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::ObjectTargetStruct *)new Piavca::ObjectTargetStruct((Piavca::ObjectTargetStruct const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ObjectTargetStruct, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ObjectTargetStruct(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__ObjectTargetStruct, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_ObjectTargetStruct__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Object, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__flagStruct, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_new_ObjectTargetStruct__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_ObjectTargetStruct'");
    return NULL;
}


static PyObject *_wrap_delete_ObjectTargetStruct(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ObjectTargetStruct *arg1 = (Piavca::ObjectTargetStruct *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ObjectTargetStruct",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ObjectTargetStruct, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ObjectTargetStruct_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__ObjectTargetStruct, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_RandomGazeMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    float arg2 ;
    Piavca::RandomGazeMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_RandomGazeMotion",&obj0,&obj1)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::RandomGazeMotion *)new Piavca::RandomGazeMotion(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomGazeMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomGazeMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    float arg1 ;
    Piavca::RandomGazeMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RandomGazeMotion",&obj0)) goto fail;
    {
        arg1 = static_cast<float >(SWIG_As_float(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::RandomGazeMotion *)new Piavca::RandomGazeMotion(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomGazeMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomGazeMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_RandomGazeMotion")) goto fail;
    result = (Piavca::RandomGazeMotion *)new Piavca::RandomGazeMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomGazeMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomGazeMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = 0 ;
    Piavca::RandomGazeMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RandomGazeMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::RandomGazeMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::RandomGazeMotion *)new Piavca::RandomGazeMotion((Piavca::RandomGazeMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__RandomGazeMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RandomGazeMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_RandomGazeMotion__SWIG_2(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_RandomGazeMotion__SWIG_3(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            return _wrap_new_RandomGazeMotion__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        _v = SWIG_Check_float(argv[0]);
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_new_RandomGazeMotion__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_RandomGazeMotion'");
    return NULL;
}


static PyObject *_wrap_delete_RandomGazeMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_RandomGazeMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RandomGazeMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_clearDirectionTable(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RandomGazeMotion_clearDirectionTable",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->clearDirectionTable();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_addDirection(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    Piavca::Vec *arg2 = 0 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_addDirection",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Vec, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("Piavca::Vec");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->addDirection((Piavca::Vec const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_normaliseDirectionTable(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RandomGazeMotion_normaliseDirectionTable",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    (arg1)->normaliseDirectionTable();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_addAvatarTarget__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    int arg3 ;
    Piavca::flagStruct arg4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:RandomGazeMotion_addAvatarTarget",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        Piavca::flagStruct * argp;
        SWIG_Python_ConvertPtr(obj3, (void **)&argp, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::flagStruct");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
        arg4 = *argp;
    }
    (arg1)->addAvatarTarget(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_addAvatarTarget__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_addAvatarTarget",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<int >(SWIG_As_int(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->addAvatarTarget(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_addAvatarTarget(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_int(argv[2]);
                if (_v) {
                    return _wrap_RandomGazeMotion_addAvatarTarget__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Avatar, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                _v = SWIG_Check_int(argv[2]);
                if (_v) {
                    {
                        void *ptr = 0;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_Piavca__flagStruct, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = (ptr != 0);
                        }
                    }
                    if (_v) {
                        return _wrap_RandomGazeMotion_addAvatarTarget__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'RandomGazeMotion_addAvatarTarget'");
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_addObjectTarget__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    Piavca::Object *arg2 = (Piavca::Object *) 0 ;
    Piavca::flagStruct arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_addObjectTarget",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        Piavca::flagStruct * argp;
        SWIG_Python_ConvertPtr(obj2, (void **)&argp, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::flagStruct");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
        arg3 = *argp;
    }
    (arg1)->addObjectTarget(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_addObjectTarget__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    Piavca::Object *arg2 = (Piavca::Object *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_addObjectTarget",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Object, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    (arg1)->addObjectTarget(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_addObjectTarget(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Object, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_RandomGazeMotion_addObjectTarget__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_Piavca__Object, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_Piavca__flagStruct, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    return _wrap_RandomGazeMotion_addObjectTarget__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'RandomGazeMotion_addObjectTarget'");
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_setTargetFlags(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    Piavca::tstring arg2 ;
    Piavca::flagStruct arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_setTargetFlags",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    {
        Piavca::flagStruct * argp;
        SWIG_Python_ConvertPtr(obj2, (void **)&argp, SWIGTYPE_p_Piavca__flagStruct, SWIG_POINTER_EXCEPTION);
        if (SWIG_arg_fail(3)) SWIG_fail;
        if (argp == NULL) {
            SWIG_null_ref("Piavca::flagStruct");
        }
        if (SWIG_arg_fail(3)) SWIG_fail;
        arg3 = *argp;
    }
    (arg1)->setTargetFlags(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_setGazeParams(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    float arg2 ;
    float arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_setGazeParams",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    (arg1)->setGazeParams(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_setLookAtLocationProb(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_setLookAtLocationProb",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setLookAtLocationProb(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_setMeanGazeLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_setMeanGazeLength",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setMeanGazeLength(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_setEyesLimit(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_setEyesLimit",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setEyesLimit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_setHeadBodyLimit(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_setHeadBodyLimit",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setHeadBodyLimit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_setEyesMorphAngle(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_setEyesMorphAngle",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setEyesMorphAngle(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_randomLocation(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RandomGazeMotion_randomLocation",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (arg1)->randomLocation();
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_lookAt__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    Piavca::tstring arg2 ;
    bool arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:RandomGazeMotion_lookAt",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (bool)(arg1)->lookAt(arg2,arg3);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_lookAt__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    Piavca::tstring arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_lookAt",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    result = (bool)(arg1)->lookAt(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_lookAt(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                return _wrap_RandomGazeMotion_lookAt__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__RandomGazeMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                _v = SWIG_Check_bool(argv[2]);
                if (_v) {
                    return _wrap_RandomGazeMotion_lookAt__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'RandomGazeMotion_lookAt'");
    return NULL;
}


static PyObject *_wrap_RandomGazeMotion_reblend(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::RandomGazeMotion *arg1 = (Piavca::RandomGazeMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RandomGazeMotion_reblend",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__RandomGazeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->reblend(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * RandomGazeMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__RandomGazeMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ZeroMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    bool arg1 ;
    Piavca::ZeroMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ZeroMotion",&obj0)) goto fail;
    {
        arg1 = static_cast<bool >(SWIG_As_bool(obj0)); 
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::ZeroMotion *)new Piavca::ZeroMotion(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ZeroMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ZeroMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_ZeroMotion")) goto fail;
    result = (Piavca::ZeroMotion *)new Piavca::ZeroMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ZeroMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ZeroMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *arg1 = 0 ;
    Piavca::ZeroMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ZeroMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::ZeroMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::ZeroMotion *)new Piavca::ZeroMotion((Piavca::ZeroMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__ZeroMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ZeroMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_ZeroMotion__SWIG_1(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__ZeroMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_ZeroMotion__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        _v = SWIG_Check_bool(argv[0]);
        if (_v) {
            return _wrap_new_ZeroMotion__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_ZeroMotion'");
    return NULL;
}


static PyObject *_wrap_ZeroMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ZeroMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ZeroMotion_isFacial(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ZeroMotion_isFacial",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isFacial();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ZeroMotion_isRandomAccess(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ZeroMotion_isRandomAccess",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (bool)(arg1)->isRandomAccess();
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ZeroMotion_getMotionLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ZeroMotion_getMotionLength",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::ZeroMotion const *)arg1)->getMotionLength();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ZeroMotion_isNull(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
    int arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ZeroMotion_isNull",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (bool)((Piavca::ZeroMotion const *)arg1)->isNull(arg2);
    
    {
        resultobj = SWIG_From_bool(static_cast<bool >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ZeroMotion_getTrackType(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
    int arg2 ;
    Piavca::trackType result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ZeroMotion_getTrackType",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::trackType)((Piavca::ZeroMotion const *)arg1)->getTrackType(arg2);
    
    resultobj = SWIG_From_int((result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ZeroMotion_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ZeroMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ZeroMotion_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ZeroMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ZeroMotion_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ZeroMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ZeroMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::ZeroMotion *arg1 = (Piavca::ZeroMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ZeroMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__ZeroMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ZeroMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__ZeroMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_MotionSaver__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    Piavca::MotionSaver *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_MotionSaver",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::MotionSaver *)new Piavca::MotionSaver(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MotionSaver, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MotionSaver__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionSaver *arg1 = 0 ;
    Piavca::MotionSaver *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_MotionSaver",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::MotionSaver");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::MotionSaver *)new Piavca::MotionSaver((Piavca::MotionSaver const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MotionSaver, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_MotionSaver(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__MotionSaver, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_MotionSaver__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_MotionSaver__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_MotionSaver'");
    return NULL;
}


static PyObject *_wrap_MotionSaver_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionSaver_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionSaver_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:MotionSaver_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionSaver_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:MotionSaver_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionSaver_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:MotionSaver_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionSaver_collectFrames(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionSaver_collectFrames",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->collectFrames(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionSaver_save(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
    Piavca::tstring arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionSaver_save",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->save(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_MotionSaver(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionSaver *arg1 = (Piavca::MotionSaver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_MotionSaver",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionSaver, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MotionSaver_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__MotionSaver, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_MotionParser_parseMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionParser *arg1 = (Piavca::MotionParser *) 0 ;
    istringstream *arg2 = 0 ;
    std::string arg3 ;
    float arg4 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:MotionParser_parseMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionParser, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_istringstream, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("istringstream");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = PyString_AsString(obj2);
    }
    {
        arg4 = static_cast<float >(SWIG_As_float(obj3)); 
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    result = (Piavca::Motion *)(arg1)->parseMotion(*arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionParser_editMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionParser *arg1 = (Piavca::MotionParser *) 0 ;
    istringstream *arg2 = 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionParser_editMotion",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionParser, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_istringstream, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(2)) SWIG_fail;
        if (arg2 == NULL) {
            SWIG_null_ref("istringstream");
        }
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Motion *)(arg1)->editMotion(*arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionParser_editAvatarMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionParser *arg1 = (Piavca::MotionParser *) 0 ;
    Piavca::Avatar *arg2 = (Piavca::Avatar *) 0 ;
    bool arg3 ;
    istringstream *arg4 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:MotionParser_editAvatarMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionParser, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__Avatar, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    {
        arg3 = static_cast<bool >(SWIG_As_bool(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    {
        SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_istringstream, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(4)) SWIG_fail;
        if (arg4 == NULL) {
            SWIG_null_ref("istringstream");
        }
        if (SWIG_arg_fail(4)) SWIG_fail;
    }
    (arg1)->editAvatarMotion(arg2,arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionParser_parseMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    char *arg1 = (char *) 0 ;
    float arg2 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionParser_parseMotion",&obj0,&obj1)) goto fail;
    if (!SWIG_AsCharPtr(obj0, (char**)&arg1)) {
        SWIG_arg_fail(1);SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Motion *)Piavca::MotionParser::parseMotion((char const *)arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionParser_parseMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    char *arg1 = (char *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionParser_parseMotion",&obj0)) goto fail;
    if (!SWIG_AsCharPtr(obj0, (char**)&arg1)) {
        SWIG_arg_fail(1);SWIG_fail;
    }
    result = (Piavca::Motion *)Piavca::MotionParser::parseMotion((char const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionParser_parseMotion__SWIG_3(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    std::string arg1 ;
    float arg2 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionParser_parseMotion",&obj0,&obj1)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    result = (Piavca::Motion *)Piavca::MotionParser::parseMotion(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionParser_parseMotion__SWIG_4(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    std::string arg1 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionParser_parseMotion",&obj0)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    result = (Piavca::Motion *)Piavca::MotionParser::parseMotion(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionParser_parseMotion__SWIG_5(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    istringstream *arg1 = 0 ;
    float arg2 ;
    Piavca::MotionParser **arg3 = (Piavca::MotionParser **) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:MotionParser_parseMotion",&obj0,&obj1,&obj2)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_istringstream, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("istringstream");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj2, (void **)&arg3, SWIGTYPE_p_p_Piavca__MotionParser, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(3)) SWIG_fail;
    result = (Piavca::Motion *)Piavca::MotionParser::parseMotion(*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionParser_parseMotion__SWIG_6(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    istringstream *arg1 = 0 ;
    std::string arg2 ;
    float arg3 ;
    Piavca::MotionParser **arg4 = (Piavca::MotionParser **) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:MotionParser_parseMotion",&obj0,&obj1,&obj2,&obj3)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_istringstream, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("istringstream");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    {
        arg2 = PyString_AsString(obj1);
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    SWIG_Python_ConvertPtr(obj3, (void **)&arg4, SWIGTYPE_p_p_Piavca__MotionParser, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(4)) SWIG_fail;
    result = (Piavca::Motion *)Piavca::MotionParser::parseMotion(*arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionParser_parseMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_MotionParser_parseMotion__SWIG_4(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        _v = SWIG_AsCharPtr(argv[0], (char **)(0));
        if (_v) {
            return _wrap_MotionParser_parseMotion__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_MotionParser_parseMotion__SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        _v = SWIG_AsCharPtr(argv[0], (char **)(0));
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                return _wrap_MotionParser_parseMotion__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_istringstream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_p_Piavca__MotionParser, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_MotionParser_parseMotion__SWIG_5(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__MotionParser, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_istringstream, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                {
                    void *ptr = 0;
                    if (SWIG_ConvertPtr(argv[2], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = (ptr != 0);
                    }
                }
                if (_v) {
                    _v = SWIG_Check_float(argv[3]);
                    if (_v) {
                        return _wrap_MotionParser_parseMotion__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_istringstream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            {
                void *ptr = 0;
                if (SWIG_ConvertPtr(argv[1], &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = (ptr != 0);
                }
            }
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], &ptr, SWIGTYPE_p_p_Piavca__MotionParser, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_MotionParser_parseMotion__SWIG_6(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'MotionParser_parseMotion'");
    return NULL;
}


static PyObject *_wrap_MotionParser_addMotionCommand(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    Piavca::MotionParser *arg2 = (Piavca::MotionParser *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:MotionParser_addMotionCommand",&obj0,&obj1)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    SWIG_Python_ConvertPtr(obj1, (void **)&arg2, SWIGTYPE_p_Piavca__MotionParser, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(2)) SWIG_fail;
    Piavca::MotionParser::addMotionCommand(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionParser_getMotionCommand(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::tstring arg1 ;
    Piavca::MotionParser *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:MotionParser_getMotionCommand",&obj0)) goto fail;
    {
        arg1 = PyString_AsString(obj0);
    }
    result = (Piavca::MotionParser *)Piavca::MotionParser::getMotionCommand(arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__MotionParser, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MotionParser_setUpMotionCommands(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    
    if(!PyArg_ParseTuple(args,(char *)":MotionParser_setUpMotionCommands")) goto fail;
    Piavca::MotionParser::setUpMotionCommands();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_MotionParser(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::MotionParser *arg1 = (Piavca::MotionParser *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_MotionParser",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__MotionParser, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * MotionParser_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__MotionParser, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_SubMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SubMotion *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_SubMotion")) goto fail;
    result = (Piavca::SubMotion *)new Piavca::SubMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__SubMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SubMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    float arg3 ;
    Piavca::SubMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_SubMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::SubMotion *)new Piavca::SubMotion(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__SubMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SubMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SubMotion *arg1 = 0 ;
    Piavca::SubMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_SubMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::SubMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::SubMotion *)new Piavca::SubMotion((Piavca::SubMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__SubMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SubMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_SubMotion__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__SubMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_SubMotion__SWIG_2(self,args);
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_SubMotion__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_SubMotion'");
    return NULL;
}


static PyObject *_wrap_SubMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SubMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SubMotion_getMotionLength(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SubMotion_getMotionLength",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (float)((Piavca::SubMotion const *)arg1)->getMotionLength();
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SubMotion_setStart(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SubMotion_setStart",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setStart(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SubMotion_setEnd(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SubMotion_setEnd",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setEnd(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SubMotion_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:SubMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SubMotion_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:SubMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SubMotion_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:SubMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_SubMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::SubMotion *arg1 = (Piavca::SubMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_SubMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__SubMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SubMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__SubMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_TimeRangeMotion__SWIG_0(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeRangeMotion *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_TimeRangeMotion")) goto fail;
    result = (Piavca::TimeRangeMotion *)new Piavca::TimeRangeMotion();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TimeRangeMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TimeRangeMotion__SWIG_1(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::Motion *arg1 = (Piavca::Motion *) 0 ;
    float arg2 ;
    float arg3 ;
    Piavca::TimeRangeMotion *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_TimeRangeMotion",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__Motion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (Piavca::TimeRangeMotion *)new Piavca::TimeRangeMotion(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TimeRangeMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TimeRangeMotion__SWIG_2(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeRangeMotion *arg1 = 0 ;
    Piavca::TimeRangeMotion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_TimeRangeMotion",&obj0)) goto fail;
    {
        SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeRangeMotion, SWIG_POINTER_EXCEPTION | 0);
        if (SWIG_arg_fail(1)) SWIG_fail;
        if (arg1 == NULL) {
            SWIG_null_ref("Piavca::TimeRangeMotion");
        }
        if (SWIG_arg_fail(1)) SWIG_fail;
    }
    result = (Piavca::TimeRangeMotion *)new Piavca::TimeRangeMotion((Piavca::TimeRangeMotion const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__TimeRangeMotion, 1);
    result->Reference();
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_TimeRangeMotion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_TimeRangeMotion__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr = 0;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__TimeRangeMotion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = (ptr != 0);
            }
        }
        if (_v) {
            return _wrap_new_TimeRangeMotion__SWIG_2(self,args);
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], &ptr, SWIGTYPE_p_Piavca__Motion, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            _v = SWIG_Check_float(argv[1]);
            if (_v) {
                _v = SWIG_Check_float(argv[2]);
                if (_v) {
                    return _wrap_new_TimeRangeMotion__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_NotImplementedError,"No matching function for overloaded 'new_TimeRangeMotion'");
    return NULL;
}


static PyObject *_wrap_TimeRangeMotion_clone(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeRangeMotion *arg1 = (Piavca::TimeRangeMotion *) 0 ;
    Piavca::Motion *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:TimeRangeMotion_clone",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeRangeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    result = (Piavca::Motion *)(arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void*)(result), SWIGTYPE_p_Piavca__Motion, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeRangeMotion_setStart(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeRangeMotion *arg1 = (Piavca::TimeRangeMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TimeRangeMotion_setStart",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeRangeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setStart(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeRangeMotion_setEnd(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeRangeMotion *arg1 = (Piavca::TimeRangeMotion *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:TimeRangeMotion_setEnd",&obj0,&obj1)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeRangeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<float >(SWIG_As_float(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    (arg1)->setEnd(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeRangeMotion_getFloatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeRangeMotion *arg1 = (Piavca::TimeRangeMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    float result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TimeRangeMotion_getFloatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeRangeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (float)(arg1)->getFloatValueAtTimeInternal(arg2,arg3);
    
    {
        resultobj = SWIG_From_float(static_cast<float >(result)); 
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeRangeMotion_getVecValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeRangeMotion *arg1 = (Piavca::TimeRangeMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Vec result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TimeRangeMotion_getVecValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeRangeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getVecValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Vec * resultptr;
        resultptr = new Piavca::Vec(static_cast<Piavca::Vec & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Vec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TimeRangeMotion_getQuatValueAtTimeInternal(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeRangeMotion *arg1 = (Piavca::TimeRangeMotion *) 0 ;
    int arg2 ;
    float arg3 ;
    Piavca::Quat result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:TimeRangeMotion_getQuatValueAtTimeInternal",&obj0,&obj1,&obj2)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeRangeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    {
        arg2 = static_cast<int >(SWIG_As_int(obj1)); 
        if (SWIG_arg_fail(2)) SWIG_fail;
    }
    {
        arg3 = static_cast<float >(SWIG_As_float(obj2)); 
        if (SWIG_arg_fail(3)) SWIG_fail;
    }
    result = (arg1)->getQuatValueAtTimeInternal(arg2,arg3);
    
    {
        Piavca::Quat * resultptr;
        resultptr = new Piavca::Quat(static_cast<Piavca::Quat & >(result));
        resultobj = SWIG_NewPointerObj((void *)(resultptr), SWIGTYPE_p_Piavca__Quat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_TimeRangeMotion(PyObject *, PyObject *args) {
    PyObject *resultobj = NULL;
    Piavca::TimeRangeMotion *arg1 = (Piavca::TimeRangeMotion *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_TimeRangeMotion",&obj0)) goto fail;
    SWIG_Python_ConvertPtr(obj0, (void **)&arg1, SWIGTYPE_p_Piavca__TimeRangeMotion, SWIG_POINTER_EXCEPTION | 0);
    if (SWIG_arg_fail(1)) SWIG_fail;
    arg1->Dispose();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * TimeRangeMotion_swigregister(PyObject *, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Piavca__TimeRangeMotion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyMethodDef SwigMethods[] = {
	 { (char *)"GetAvatarPointer", _wrap_GetAvatarPointer, METH_VARARGS, NULL},
	 { (char *)"GetPiavcaCorePointer", _wrap_GetPiavcaCorePointer, METH_VARARGS, NULL},
	 { (char *)"new_Vec", _wrap_new_Vec, METH_VARARGS, NULL},
	 { (char *)"delete_Vec", _wrap_delete_Vec, METH_VARARGS, NULL},
	 { (char *)"Vec_X", _wrap_Vec_X, METH_VARARGS, NULL},
	 { (char *)"Vec_Y", _wrap_Vec_Y, METH_VARARGS, NULL},
	 { (char *)"Vec_Z", _wrap_Vec_Z, METH_VARARGS, NULL},
	 { (char *)"Vec_XAxis", _wrap_Vec_XAxis, METH_VARARGS, NULL},
	 { (char *)"Vec_YAxis", _wrap_Vec_YAxis, METH_VARARGS, NULL},
	 { (char *)"Vec_ZAxis", _wrap_Vec_ZAxis, METH_VARARGS, NULL},
	 { (char *)"Vec_mag", _wrap_Vec_mag, METH_VARARGS, NULL},
	 { (char *)"Vec___add__", _wrap_Vec___add__, METH_VARARGS, NULL},
	 { (char *)"Vec___iadd__", _wrap_Vec___iadd__, METH_VARARGS, NULL},
	 { (char *)"Vec___sub__", _wrap_Vec___sub__, METH_VARARGS, NULL},
	 { (char *)"Vec___isub__", _wrap_Vec___isub__, METH_VARARGS, NULL},
	 { (char *)"Vec___neg__", _wrap_Vec___neg__, METH_VARARGS, NULL},
	 { (char *)"Vec___mul__", _wrap_Vec___mul__, METH_VARARGS, NULL},
	 { (char *)"Vec___imul__", _wrap_Vec___imul__, METH_VARARGS, NULL},
	 { (char *)"Vec___div__", _wrap_Vec___div__, METH_VARARGS, NULL},
	 { (char *)"Vec___idiv__", _wrap_Vec___idiv__, METH_VARARGS, NULL},
	 { (char *)"Vec___eq__", _wrap_Vec___eq__, METH_VARARGS, NULL},
	 { (char *)"Vec___ne__", _wrap_Vec___ne__, METH_VARARGS, NULL},
	 { (char *)"Vec_inverse", _wrap_Vec_inverse, METH_VARARGS, NULL},
	 { (char *)"Vec_invert", _wrap_Vec_invert, METH_VARARGS, NULL},
	 { (char *)"Vec_dot", _wrap_Vec_dot, METH_VARARGS, NULL},
	 { (char *)"Vec_cross", _wrap_Vec_cross, METH_VARARGS, NULL},
	 { (char *)"Vec_crossinplace", _wrap_Vec_crossinplace, METH_VARARGS, NULL},
	 { (char *)"Vec_normalized", _wrap_Vec_normalized, METH_VARARGS, NULL},
	 { (char *)"Vec_normalize", _wrap_Vec_normalize, METH_VARARGS, NULL},
	 { (char *)"Vec___getitem__", _wrap_Vec___getitem__, METH_VARARGS, NULL},
	 { (char *)"Vec___setitem__", _wrap_Vec___setitem__, METH_VARARGS, NULL},
	 { (char *)"Vec___repr__", _wrap_Vec___repr__, METH_VARARGS, NULL},
	 { (char *)"Vec_swigregister", Vec_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Quat", _wrap_new_Quat, METH_VARARGS, NULL},
	 { (char *)"delete_Quat", _wrap_delete_Quat, METH_VARARGS, NULL},
	 { (char *)"Quat_S", _wrap_Quat_S, METH_VARARGS, NULL},
	 { (char *)"Quat_I", _wrap_Quat_I, METH_VARARGS, NULL},
	 { (char *)"Quat_J", _wrap_Quat_J, METH_VARARGS, NULL},
	 { (char *)"Quat_K", _wrap_Quat_K, METH_VARARGS, NULL},
	 { (char *)"Quat_setAngleAxis", _wrap_Quat_setAngleAxis, METH_VARARGS, NULL},
	 { (char *)"Quat_getAngleAxis", _wrap_Quat_getAngleAxis, METH_VARARGS, NULL},
	 { (char *)"Quat_getAngle", _wrap_Quat_getAngle, METH_VARARGS, NULL},
	 { (char *)"Quat_getAxis", _wrap_Quat_getAxis, METH_VARARGS, NULL},
	 { (char *)"Quat_getEulerAngles", _wrap_Quat_getEulerAngles, METH_VARARGS, NULL},
	 { (char *)"Quat_Xangle", _wrap_Quat_Xangle, METH_VARARGS, NULL},
	 { (char *)"Quat_Yangle", _wrap_Quat_Yangle, METH_VARARGS, NULL},
	 { (char *)"Quat_Zangle", _wrap_Quat_Zangle, METH_VARARGS, NULL},
	 { (char *)"Quat_pointAt", _wrap_Quat_pointAt, METH_VARARGS, NULL},
	 { (char *)"Quat___mul__", _wrap_Quat___mul__, METH_VARARGS, NULL},
	 { (char *)"Quat___imul__", _wrap_Quat___imul__, METH_VARARGS, NULL},
	 { (char *)"Quat___div__", _wrap_Quat___div__, METH_VARARGS, NULL},
	 { (char *)"Quat___idiv__", _wrap_Quat___idiv__, METH_VARARGS, NULL},
	 { (char *)"Quat___eq__", _wrap_Quat___eq__, METH_VARARGS, NULL},
	 { (char *)"Quat___ne__", _wrap_Quat___ne__, METH_VARARGS, NULL},
	 { (char *)"Quat_Scale", _wrap_Quat_Scale, METH_VARARGS, NULL},
	 { (char *)"Quat_inverse", _wrap_Quat_inverse, METH_VARARGS, NULL},
	 { (char *)"Quat_invert", _wrap_Quat_invert, METH_VARARGS, NULL},
	 { (char *)"Quat_normalise", _wrap_Quat_normalise, METH_VARARGS, NULL},
	 { (char *)"Quat_transform", _wrap_Quat_transform, METH_VARARGS, NULL},
	 { (char *)"Quat_transformInPlace", _wrap_Quat_transformInPlace, METH_VARARGS, NULL},
	 { (char *)"slerp", _wrap_slerp, METH_VARARGS, NULL},
	 { (char *)"Quat___getitem__", _wrap_Quat___getitem__, METH_VARARGS, NULL},
	 { (char *)"Quat___setitem__", _wrap_Quat___setitem__, METH_VARARGS, NULL},
	 { (char *)"Quat___repr__", _wrap_Quat___repr__, METH_VARARGS, NULL},
	 { (char *)"Quat_swigregister", Quat_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_TimeCallback", _wrap_delete_TimeCallback, METH_VARARGS, NULL},
	 { (char *)"TimeCallback_getName", _wrap_TimeCallback_getName, METH_VARARGS, NULL},
	 { (char *)"TimeCallback_init", _wrap_TimeCallback_init, METH_VARARGS, NULL},
	 { (char *)"TimeCallback_timeStep", _wrap_TimeCallback_timeStep, METH_VARARGS, NULL},
	 { (char *)"TimeCallback_swigregister", TimeCallback_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_AvatarTimeCallback", _wrap_delete_AvatarTimeCallback, METH_VARARGS, NULL},
	 { (char *)"AvatarTimeCallback_getName", _wrap_AvatarTimeCallback_getName, METH_VARARGS, NULL},
	 { (char *)"AvatarTimeCallback_init", _wrap_AvatarTimeCallback_init, METH_VARARGS, NULL},
	 { (char *)"AvatarTimeCallback_timeStep", _wrap_AvatarTimeCallback_timeStep, METH_VARARGS, NULL},
	 { (char *)"AvatarTimeCallback_swigregister", AvatarTimeCallback_swigregister, METH_VARARGS, NULL},
	 { (char *)"Core_dir_set", _wrap_Core_dir_set, METH_VARARGS, NULL},
	 { (char *)"Core_dir_get", _wrap_Core_dir_get, METH_VARARGS, NULL},
	 { (char *)"delete_Core", _wrap_delete_Core, METH_VARARGS, NULL},
	 { (char *)"Core_reset", _wrap_Core_reset, METH_VARARGS, NULL},
	 { (char *)"Core_getCore", _wrap_Core_getCore, METH_VARARGS, NULL},
	 { (char *)"Core_registerCallback", _wrap_Core_registerCallback, METH_VARARGS, NULL},
	 { (char *)"Core_timeStep", _wrap_Core_timeStep, METH_VARARGS, NULL},
	 { (char *)"Core_prerender", _wrap_Core_prerender, METH_VARARGS, NULL},
	 { (char *)"Core_render", _wrap_Core_render, METH_VARARGS, NULL},
	 { (char *)"Core_getJointId", _wrap_Core_getJointId, METH_VARARGS, NULL},
	 { (char *)"Core_getMaxJointId", _wrap_Core_getMaxJointId, METH_VARARGS, NULL},
	 { (char *)"Core_addJointNameSet", _wrap_Core_addJointNameSet, METH_VARARGS, NULL},
	 { (char *)"Core_getJointName", _wrap_Core_getJointName, METH_VARARGS, NULL},
	 { (char *)"Core_getJointNameAssociations", _wrap_Core_getJointNameAssociations, METH_VARARGS, NULL},
	 { (char *)"Core_getExpressionId", _wrap_Core_getExpressionId, METH_VARARGS, NULL},
	 { (char *)"Core_getMaxExpressionId", _wrap_Core_getMaxExpressionId, METH_VARARGS, NULL},
	 { (char *)"Core_addExpressionNameSet", _wrap_Core_addExpressionNameSet, METH_VARARGS, NULL},
	 { (char *)"Core_getExpressionName", _wrap_Core_getExpressionName, METH_VARARGS, NULL},
	 { (char *)"Core_getExpressionNameAssociations", _wrap_Core_getExpressionNameAssociations, METH_VARARGS, NULL},
	 { (char *)"Core_renameMotion", _wrap_Core_renameMotion, METH_VARARGS, NULL},
	 { (char *)"Core_unloadMotion", _wrap_Core_unloadMotion, METH_VARARGS, NULL},
	 { (char *)"Core_getMotionNames", _wrap_Core_getMotionNames, METH_VARARGS, NULL},
	 { (char *)"Core_getNumberOfMotions", _wrap_Core_getNumberOfMotions, METH_VARARGS, NULL},
	 { (char *)"Core_getAllmotions", _wrap_Core_getAllmotions, METH_VARARGS, NULL},
	 { (char *)"Core_getAvatarNames", _wrap_Core_getAvatarNames, METH_VARARGS, NULL},
	 { (char *)"Core_numAvatars", _wrap_Core_numAvatars, METH_VARARGS, NULL},
	 { (char *)"Core_getAvatar", _wrap_Core_getAvatar, METH_VARARGS, NULL},
	 { (char *)"Core_renameAvatar", _wrap_Core_renameAvatar, METH_VARARGS, NULL},
	 { (char *)"Core_removeAvatar", _wrap_Core_removeAvatar, METH_VARARGS, NULL},
	 { (char *)"Core_initAvatar", _wrap_Core_initAvatar, METH_VARARGS, NULL},
	 { (char *)"Core_numObjects", _wrap_Core_numObjects, METH_VARARGS, NULL},
	 { (char *)"Core_getObject", _wrap_Core_getObject, METH_VARARGS, NULL},
	 { (char *)"Core_renameObject", _wrap_Core_renameObject, METH_VARARGS, NULL},
	 { (char *)"Core_removeObject", _wrap_Core_removeObject, METH_VARARGS, NULL},
	 { (char *)"Core_initObject", _wrap_Core_initObject, METH_VARARGS, NULL},
	 { (char *)"Core_initMotion", _wrap_Core_initMotion, METH_VARARGS, NULL},
	 { (char *)"Core_setDir", _wrap_Core_setDir, METH_VARARGS, NULL},
	 { (char *)"Core_getTime", _wrap_Core_getTime, METH_VARARGS, NULL},
	 { (char *)"Core_getSystemTime", _wrap_Core_getSystemTime, METH_VARARGS, NULL},
	 { (char *)"Core_setAutoTimeOff", _wrap_Core_setAutoTimeOff, METH_VARARGS, NULL},
	 { (char *)"Core_setAutoTimeOn", _wrap_Core_setAutoTimeOn, METH_VARARGS, NULL},
	 { (char *)"Core_setCurrentTime", _wrap_Core_setCurrentTime, METH_VARARGS, NULL},
	 { (char *)"Core_addError", _wrap_Core_addError, METH_VARARGS, NULL},
	 { (char *)"Core_error", _wrap_Core_error, METH_VARARGS, NULL},
	 { (char *)"Core_clearErrors", _wrap_Core_clearErrors, METH_VARARGS, NULL},
	 { (char *)"Core_getErrors", _wrap_Core_getErrors, METH_VARARGS, NULL},
	 { (char *)"Core_errorsPresent", _wrap_Core_errorsPresent, METH_VARARGS, NULL},
	 { (char *)"Core_addWarning", _wrap_Core_addWarning, METH_VARARGS, NULL},
	 { (char *)"Core_Warning", _wrap_Core_Warning, METH_VARARGS, NULL},
	 { (char *)"Core_clearWarnings", _wrap_Core_clearWarnings, METH_VARARGS, NULL},
	 { (char *)"Core_getWarnings", _wrap_Core_getWarnings, METH_VARARGS, NULL},
	 { (char *)"Core_warningsPresent", _wrap_Core_warningsPresent, METH_VARARGS, NULL},
	 { (char *)"Core_exceptionsOn", _wrap_Core_exceptionsOn, METH_VARARGS, NULL},
	 { (char *)"Core_setExceptionsOn", _wrap_Core_setExceptionsOn, METH_VARARGS, NULL},
	 { (char *)"Core_setExceptionsOff", _wrap_Core_setExceptionsOff, METH_VARARGS, NULL},
	 { (char *)"Core_log", _wrap_Core_log, METH_VARARGS, NULL},
	 { (char *)"Core_loadMotion", _wrap_Core_loadMotion, METH_VARARGS, NULL},
	 { (char *)"Core_getMotion", _wrap_Core_getMotion, METH_VARARGS, NULL},
	 { (char *)"Core_swigregister", Core_swigregister, METH_VARARGS, NULL},
	 { (char *)"StringToWString", _wrap_StringToWString, METH_VARARGS, NULL},
	 { (char *)"WStringToString", _wrap_WStringToString, METH_VARARGS, NULL},
	 { (char *)"delete_Motion", _wrap_delete_Motion, METH_VARARGS, NULL},
	 { (char *)"Motion_clone", _wrap_Motion_clone, METH_VARARGS, NULL},
	 { (char *)"Motion_printInfo", _wrap_Motion_printInfo, METH_VARARGS, NULL},
	 { (char *)"Motion_load", _wrap_Motion_load, METH_VARARGS, NULL},
	 { (char *)"Motion_unload", _wrap_Motion_unload, METH_VARARGS, NULL},
	 { (char *)"Motion_loaded", _wrap_Motion_loaded, METH_VARARGS, NULL},
	 { (char *)"Motion_setStartTime", _wrap_Motion_setStartTime, METH_VARARGS, NULL},
	 { (char *)"Motion_getStartTime", _wrap_Motion_getStartTime, METH_VARARGS, NULL},
	 { (char *)"Motion_getEndTime", _wrap_Motion_getEndTime, METH_VARARGS, NULL},
	 { (char *)"Motion_reset", _wrap_Motion_reset, METH_VARARGS, NULL},
	 { (char *)"Motion_Reference", _wrap_Motion_Reference, METH_VARARGS, NULL},
	 { (char *)"Motion_Dispose", _wrap_Motion_Dispose, METH_VARARGS, NULL},
	 { (char *)"Motion_makeTemp", _wrap_Motion_makeTemp, METH_VARARGS, NULL},
	 { (char *)"Motion_setName", _wrap_Motion_setName, METH_VARARGS, NULL},
	 { (char *)"Motion_getName", _wrap_Motion_getName, METH_VARARGS, NULL},
	 { (char *)"Motion_findSub", _wrap_Motion_findSub, METH_VARARGS, NULL},
	 { (char *)"Motion_findSubByType", _wrap_Motion_findSubByType, METH_VARARGS, NULL},
	 { (char *)"Motion_saveMotion", _wrap_Motion_saveMotion, METH_VARARGS, NULL},
	 { (char *)"Motion_getMotionLength", _wrap_Motion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"Motion_isFacial", _wrap_Motion_isFacial, METH_VARARGS, NULL},
	 { (char *)"Motion_isRandomAccess", _wrap_Motion_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"Motion_begin", _wrap_Motion_begin, METH_VARARGS, NULL},
	 { (char *)"Motion_end", _wrap_Motion_end, METH_VARARGS, NULL},
	 { (char *)"Motion_next", _wrap_Motion_next, METH_VARARGS, NULL},
	 { (char *)"Motion_isNull", _wrap_Motion_isNull, METH_VARARGS, NULL},
	 { (char *)"Motion_getTrackType", _wrap_Motion_getTrackType, METH_VARARGS, NULL},
	 { (char *)"Motion_pause", _wrap_Motion_pause, METH_VARARGS, NULL},
	 { (char *)"Motion_unpause", _wrap_Motion_unpause, METH_VARARGS, NULL},
	 { (char *)"Motion_getFloatValueAtTime", _wrap_Motion_getFloatValueAtTime, METH_VARARGS, NULL},
	 { (char *)"Motion_getVecValueAtTime", _wrap_Motion_getVecValueAtTime, METH_VARARGS, NULL},
	 { (char *)"Motion_getQuatValueAtTime", _wrap_Motion_getQuatValueAtTime, METH_VARARGS, NULL},
	 { (char *)"Motion_getFloatValueAtTimeInternal", _wrap_Motion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"Motion_getVecValueAtTimeInternal", _wrap_Motion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"Motion_getQuatValueAtTimeInternal", _wrap_Motion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"Motion_swigregister", Motion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TrackMotion", _wrap_new_TrackMotion, METH_VARARGS, NULL},
	 { (char *)"delete_TrackMotion", _wrap_delete_TrackMotion, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_clone", _wrap_TrackMotion_clone, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_getMotionLength", _wrap_TrackMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_isFacial", _wrap_TrackMotion_isFacial, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_isRandomAccess", _wrap_TrackMotion_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_isNull", _wrap_TrackMotion_isNull, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_getTrackType", _wrap_TrackMotion_getTrackType, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_addFloatTrack", _wrap_TrackMotion_addFloatTrack, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_addVecTrack", _wrap_TrackMotion_addVecTrack, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_addQuatTrack", _wrap_TrackMotion_addQuatTrack, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_setFloatKeyframe", _wrap_TrackMotion_setFloatKeyframe, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_setVecKeyframe", _wrap_TrackMotion_setVecKeyframe, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_setQuatKeyframe", _wrap_TrackMotion_setQuatKeyframe, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_getNumKeyframes", _wrap_TrackMotion_getNumKeyframes, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_getKeyframeTime", _wrap_TrackMotion_getKeyframeTime, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_getFloatValueAtTimeInternal", _wrap_TrackMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_getVecValueAtTimeInternal", _wrap_TrackMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_getQuatValueAtTimeInternal", _wrap_TrackMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_deleteAllTracks", _wrap_TrackMotion_deleteAllTracks, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_clearTrack", _wrap_TrackMotion_clearTrack, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_clearAllTracks", _wrap_TrackMotion_clearAllTracks, METH_VARARGS, NULL},
	 { (char *)"TrackMotion_swigregister", TrackMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"copyMotionPosture", _wrap_copyMotionPosture, METH_VARARGS, NULL},
	 { (char *)"new_Avatar", _wrap_new_Avatar, METH_VARARGS, NULL},
	 { (char *)"Avatar_isValid", _wrap_Avatar_isValid, METH_VARARGS, NULL},
	 { (char *)"Avatar_activate", _wrap_Avatar_activate, METH_VARARGS, NULL},
	 { (char *)"Avatar_deactivate", _wrap_Avatar_deactivate, METH_VARARGS, NULL},
	 { (char *)"Avatar_getName", _wrap_Avatar_getName, METH_VARARGS, NULL},
	 { (char *)"Avatar_setName", _wrap_Avatar_setName, METH_VARARGS, NULL},
	 { (char *)"Avatar_getForwardDirection", _wrap_Avatar_getForwardDirection, METH_VARARGS, NULL},
	 { (char *)"Avatar_setForwardDirection", _wrap_Avatar_setForwardDirection, METH_VARARGS, NULL},
	 { (char *)"Avatar_clearFacialExpressionWeights", _wrap_Avatar_clearFacialExpressionWeights, METH_VARARGS, NULL},
	 { (char *)"Avatar_beginExpression", _wrap_Avatar_beginExpression, METH_VARARGS, NULL},
	 { (char *)"Avatar_endExpression", _wrap_Avatar_endExpression, METH_VARARGS, NULL},
	 { (char *)"Avatar_nextExpression", _wrap_Avatar_nextExpression, METH_VARARGS, NULL},
	 { (char *)"Avatar_isExpressionNull", _wrap_Avatar_isExpressionNull, METH_VARARGS, NULL},
	 { (char *)"Avatar_setRootPosition", _wrap_Avatar_setRootPosition, METH_VARARGS, NULL},
	 { (char *)"Avatar_getRootPosition", _wrap_Avatar_getRootPosition, METH_VARARGS, NULL},
	 { (char *)"Avatar_setRootOrientation", _wrap_Avatar_setRootOrientation, METH_VARARGS, NULL},
	 { (char *)"Avatar_setRootAngle", _wrap_Avatar_setRootAngle, METH_VARARGS, NULL},
	 { (char *)"Avatar_setRootAngleDeg", _wrap_Avatar_setRootAngleDeg, METH_VARARGS, NULL},
	 { (char *)"Avatar_getRootOrientation", _wrap_Avatar_getRootOrientation, METH_VARARGS, NULL},
	 { (char *)"Avatar_createJoint", _wrap_Avatar_createJoint, METH_VARARGS, NULL},
	 { (char *)"Avatar_begin", _wrap_Avatar_begin, METH_VARARGS, NULL},
	 { (char *)"Avatar_end", _wrap_Avatar_end, METH_VARARGS, NULL},
	 { (char *)"Avatar_next", _wrap_Avatar_next, METH_VARARGS, NULL},
	 { (char *)"Avatar_getParent", _wrap_Avatar_getParent, METH_VARARGS, NULL},
	 { (char *)"Avatar_getJointName", _wrap_Avatar_getJointName, METH_VARARGS, NULL},
	 { (char *)"Avatar_isNull", _wrap_Avatar_isNull, METH_VARARGS, NULL},
	 { (char *)"Avatar_hasChanged", _wrap_Avatar_hasChanged, METH_VARARGS, NULL},
	 { (char *)"Avatar_clearChange", _wrap_Avatar_clearChange, METH_VARARGS, NULL},
	 { (char *)"Avatar_scaleRoot", _wrap_Avatar_scaleRoot, METH_VARARGS, NULL},
	 { (char *)"Avatar_scaleJoint", _wrap_Avatar_scaleJoint, METH_VARARGS, NULL},
	 { (char *)"Avatar_timeStep", _wrap_Avatar_timeStep, METH_VARARGS, NULL},
	 { (char *)"Avatar_loadMotion", _wrap_Avatar_loadMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_unloadMotion", _wrap_Avatar_unloadMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_getMotion", _wrap_Avatar_getMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_playMotion", _wrap_Avatar_playMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_playMotionDirect", _wrap_Avatar_playMotionDirect, METH_VARARGS, NULL},
	 { (char *)"Avatar_stopMotion", _wrap_Avatar_stopMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_restartMotion", _wrap_Avatar_restartMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_setMotionStartTime", _wrap_Avatar_setMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getMotionStartTime", _wrap_Avatar_getMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getMotionEndTime", _wrap_Avatar_getMotionEndTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_showMotionAtTime", _wrap_Avatar_showMotionAtTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_loadFacialMotion", _wrap_Avatar_loadFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_unloadFacialMotion", _wrap_Avatar_unloadFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_getFacialMotion", _wrap_Avatar_getFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_playFacialMotion", _wrap_Avatar_playFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_stopFacialMotion", _wrap_Avatar_stopFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_restartFacialMotion", _wrap_Avatar_restartFacialMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_setFacialMotionStartTime", _wrap_Avatar_setFacialMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getFacialMotionStartTime", _wrap_Avatar_getFacialMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getFacialMotionEndTime", _wrap_Avatar_getFacialMotionEndTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_showFacialMotionAtTime", _wrap_Avatar_showFacialMotionAtTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_loadScaleMotion", _wrap_Avatar_loadScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_unloadScaleMotion", _wrap_Avatar_unloadScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_getScaleMotion", _wrap_Avatar_getScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_playScaleMotion", _wrap_Avatar_playScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_stopScaleMotion", _wrap_Avatar_stopScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_restartScaleMotion", _wrap_Avatar_restartScaleMotion, METH_VARARGS, NULL},
	 { (char *)"Avatar_setScaleMotionStartTime", _wrap_Avatar_setScaleMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getScaleMotionStartTime", _wrap_Avatar_getScaleMotionStartTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_getScaleMotionEndTime", _wrap_Avatar_getScaleMotionEndTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_showScaleMotionAtTime", _wrap_Avatar_showScaleMotionAtTime, METH_VARARGS, NULL},
	 { (char *)"Avatar_registerCallback", _wrap_Avatar_registerCallback, METH_VARARGS, NULL},
	 { (char *)"Avatar_removeCallback", _wrap_Avatar_removeCallback, METH_VARARGS, NULL},
	 { (char *)"Avatar_getNumCallbacks", _wrap_Avatar_getNumCallbacks, METH_VARARGS, NULL},
	 { (char *)"Avatar_getCallback", _wrap_Avatar_getCallback, METH_VARARGS, NULL},
	 { (char *)"Avatar_setFacialExpressionWeight", _wrap_Avatar_setFacialExpressionWeight, METH_VARARGS, NULL},
	 { (char *)"Avatar_getFacialExpressionWeight", _wrap_Avatar_getFacialExpressionWeight, METH_VARARGS, NULL},
	 { (char *)"Avatar_setJointOrientation", _wrap_Avatar_setJointOrientation, METH_VARARGS, NULL},
	 { (char *)"Avatar_getJointOrientation", _wrap_Avatar_getJointOrientation, METH_VARARGS, NULL},
	 { (char *)"Avatar_getJointBasePosition", _wrap_Avatar_getJointBasePosition, METH_VARARGS, NULL},
	 { (char *)"Avatar_play_motion", _wrap_Avatar_play_motion, METH_VARARGS, NULL},
	 { (char *)"Avatar_add_background_motion", _wrap_Avatar_add_background_motion, METH_VARARGS, NULL},
	 { (char *)"Avatar_swigregister", Avatar_swigregister, METH_VARARGS, NULL},
	 { (char *)"queueElement_mot_set", _wrap_queueElement_mot_set, METH_VARARGS, NULL},
	 { (char *)"queueElement_mot_get", _wrap_queueElement_mot_get, METH_VARARGS, NULL},
	 { (char *)"queueElement_name_set", _wrap_queueElement_name_set, METH_VARARGS, NULL},
	 { (char *)"queueElement_name_get", _wrap_queueElement_name_get, METH_VARARGS, NULL},
	 { (char *)"queueElement_atTime_set", _wrap_queueElement_atTime_set, METH_VARARGS, NULL},
	 { (char *)"queueElement_atTime_get", _wrap_queueElement_atTime_get, METH_VARARGS, NULL},
	 { (char *)"queueElement_background_set", _wrap_queueElement_background_set, METH_VARARGS, NULL},
	 { (char *)"queueElement_background_get", _wrap_queueElement_background_get, METH_VARARGS, NULL},
	 { (char *)"new_queueElement", _wrap_new_queueElement, METH_VARARGS, NULL},
	 { (char *)"delete_queueElement", _wrap_delete_queueElement, METH_VARARGS, NULL},
	 { (char *)"queueElement_swigregister", queueElement_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AvatarMotionQueue", _wrap_new_AvatarMotionQueue, METH_VARARGS, NULL},
	 { (char *)"delete_AvatarMotionQueue", _wrap_delete_AvatarMotionQueue, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_init", _wrap_AvatarMotionQueue_init, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_timeStep", _wrap_AvatarMotionQueue_timeStep, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_isFacial", _wrap_AvatarMotionQueue_isFacial, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_getCurrentMotionStart", _wrap_AvatarMotionQueue_getCurrentMotionStart, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_reblend", _wrap_AvatarMotionQueue_reblend, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_setBlendInterval", _wrap_AvatarMotionQueue_setBlendInterval, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_enqueueMotion", _wrap_AvatarMotionQueue_enqueueMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_enqueueRandomMotions", _wrap_AvatarMotionQueue_enqueueRandomMotions, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_queueTopIsBackground", _wrap_AvatarMotionQueue_queueTopIsBackground, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_queueTopTime", _wrap_AvatarMotionQueue_queueTopTime, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_dequeueMotion", _wrap_AvatarMotionQueue_dequeueMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_getQueueSize", _wrap_AvatarMotionQueue_getQueueSize, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_updateDelay", _wrap_AvatarMotionQueue_updateDelay, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_clearQueue", _wrap_AvatarMotionQueue_clearQueue, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_removeMotion", _wrap_AvatarMotionQueue_removeMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_pauseMotion", _wrap_AvatarMotionQueue_pauseMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_unpauseMotion", _wrap_AvatarMotionQueue_unpauseMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_clearAllBackgroundMotions", _wrap_AvatarMotionQueue_clearAllBackgroundMotions, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_clearFinishedBackgroundMotions", _wrap_AvatarMotionQueue_clearFinishedBackgroundMotions, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_removeBackgroundMotion", _wrap_AvatarMotionQueue_removeBackgroundMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_removeBackgroundMotionByType", _wrap_AvatarMotionQueue_removeBackgroundMotionByType, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_pauseBackgroundMotion", _wrap_AvatarMotionQueue_pauseBackgroundMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_unpauseBackgroundMotion", _wrap_AvatarMotionQueue_unpauseBackgroundMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_interrupt", _wrap_AvatarMotionQueue_interrupt, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_getMotion", _wrap_AvatarMotionQueue_getMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_blendMotion", _wrap_AvatarMotionQueue_blendMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_addBackgroundMotion", _wrap_AvatarMotionQueue_addBackgroundMotion, METH_VARARGS, NULL},
	 { (char *)"AvatarMotionQueue_swigregister", AvatarMotionQueue_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Object", _wrap_new_Object, METH_VARARGS, NULL},
	 { (char *)"Object_getName", _wrap_Object_getName, METH_VARARGS, NULL},
	 { (char *)"Object_setName", _wrap_Object_setName, METH_VARARGS, NULL},
	 { (char *)"Object_setPosition", _wrap_Object_setPosition, METH_VARARGS, NULL},
	 { (char *)"Object_getPosition", _wrap_Object_getPosition, METH_VARARGS, NULL},
	 { (char *)"Object_setOrientation", _wrap_Object_setOrientation, METH_VARARGS, NULL},
	 { (char *)"Object_setAngle", _wrap_Object_setAngle, METH_VARARGS, NULL},
	 { (char *)"Object_setAngleDeg", _wrap_Object_setAngleDeg, METH_VARARGS, NULL},
	 { (char *)"Object_getOrientation", _wrap_Object_getOrientation, METH_VARARGS, NULL},
	 { (char *)"Object_scale", _wrap_Object_scale, METH_VARARGS, NULL},
	 { (char *)"Object_swigregister", Object_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyTimeCallback", _wrap_new_PyTimeCallback, METH_VARARGS, NULL},
	 { (char *)"delete_PyTimeCallback", _wrap_delete_PyTimeCallback, METH_VARARGS, NULL},
	 { (char *)"PyTimeCallback_init", _wrap_PyTimeCallback_init, METH_VARARGS, NULL},
	 { (char *)"PyTimeCallback_timeStep", _wrap_PyTimeCallback_timeStep, METH_VARARGS, NULL},
	 { (char *)"PyTimeCallback_swigregister", PyTimeCallback_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyAvatarTimeCallback", _wrap_new_PyAvatarTimeCallback, METH_VARARGS, NULL},
	 { (char *)"delete_PyAvatarTimeCallback", _wrap_delete_PyAvatarTimeCallback, METH_VARARGS, NULL},
	 { (char *)"PyAvatarTimeCallback_init", _wrap_PyAvatarTimeCallback_init, METH_VARARGS, NULL},
	 { (char *)"PyAvatarTimeCallback_timeStep", _wrap_PyAvatarTimeCallback_timeStep, METH_VARARGS, NULL},
	 { (char *)"PyAvatarTimeCallback_swigregister", PyAvatarTimeCallback_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PyMotion", _wrap_new_PyMotion, METH_VARARGS, NULL},
	 { (char *)"PyMotion_clone", _wrap_PyMotion_clone, METH_VARARGS, NULL},
	 { (char *)"delete_PyMotion", _wrap_delete_PyMotion, METH_VARARGS, NULL},
	 { (char *)"PyMotion_setPyObj", _wrap_PyMotion_setPyObj, METH_VARARGS, NULL},
	 { (char *)"PyMotion_getMotionPtr", _wrap_PyMotion_getMotionPtr, METH_VARARGS, NULL},
	 { (char *)"PyMotion_getMotionLength", _wrap_PyMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"PyMotion_isNull", _wrap_PyMotion_isNull, METH_VARARGS, NULL},
	 { (char *)"PyMotion_getTrackType", _wrap_PyMotion_getTrackType, METH_VARARGS, NULL},
	 { (char *)"PyMotion_getFloatValueAtTimeInternal", _wrap_PyMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"PyMotion_getVecValueAtTimeInternal", _wrap_PyMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"PyMotion_getQuatValueAtTimeInternal", _wrap_PyMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"PyMotion_swigregister", PyMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"degToRad", _wrap_degToRad, METH_VARARGS, NULL},
	 { (char *)"radToDeg", _wrap_radToDeg, METH_VARARGS, NULL},
	 { (char *)"delete_MotionFilter", _wrap_delete_MotionFilter, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_printInfo", _wrap_MotionFilter_printInfo, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_findSub", _wrap_MotionFilter_findSub, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_findSubByType", _wrap_MotionFilter_findSubByType, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_load", _wrap_MotionFilter_load, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_unload", _wrap_MotionFilter_unload, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_loaded", _wrap_MotionFilter_loaded, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_setStartTime", _wrap_MotionFilter_setStartTime, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_reset", _wrap_MotionFilter_reset, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_setMotion", _wrap_MotionFilter_setMotion, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_getMotionLength", _wrap_MotionFilter_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_isFacial", _wrap_MotionFilter_isFacial, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_isRandomAccess", _wrap_MotionFilter_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_isNull", _wrap_MotionFilter_isNull, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_getTrackType", _wrap_MotionFilter_getTrackType, METH_VARARGS, NULL},
	 { (char *)"MotionFilter_swigregister", MotionFilter_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_TwoMotionCombiner", _wrap_delete_TwoMotionCombiner, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_printInfo", _wrap_TwoMotionCombiner_printInfo, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_findSub", _wrap_TwoMotionCombiner_findSub, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_findSubByType", _wrap_TwoMotionCombiner_findSubByType, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_load", _wrap_TwoMotionCombiner_load, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_unload", _wrap_TwoMotionCombiner_unload, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_loaded", _wrap_TwoMotionCombiner_loaded, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_setStartTime", _wrap_TwoMotionCombiner_setStartTime, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_reset", _wrap_TwoMotionCombiner_reset, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_getMotionLength", _wrap_TwoMotionCombiner_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_isFacial", _wrap_TwoMotionCombiner_isFacial, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_isRandomAccess", _wrap_TwoMotionCombiner_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_isNull", _wrap_TwoMotionCombiner_isNull, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_getTrackType", _wrap_TwoMotionCombiner_getTrackType, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_setMotion1", _wrap_TwoMotionCombiner_setMotion1, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_setMotion2", _wrap_TwoMotionCombiner_setMotion2, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_getMotion1", _wrap_TwoMotionCombiner_getMotion1, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_getMotion2", _wrap_TwoMotionCombiner_getMotion2, METH_VARARGS, NULL},
	 { (char *)"TwoMotionCombiner_swigregister", TwoMotionCombiner_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ScaleMotion", _wrap_new_ScaleMotion, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_clone", _wrap_ScaleMotion_clone, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_getFloatValueAtTimeInternal", _wrap_ScaleMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_getVecValueAtTimeInternal", _wrap_ScaleMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_getQuatValueAtTimeInternal", _wrap_ScaleMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_setScaleFactor", _wrap_ScaleMotion_setScaleFactor, METH_VARARGS, NULL},
	 { (char *)"delete_ScaleMotion", _wrap_delete_ScaleMotion, METH_VARARGS, NULL},
	 { (char *)"ScaleMotion_swigregister", ScaleMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ScaleMotionSpeed", _wrap_new_ScaleMotionSpeed, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_clone", _wrap_ScaleMotionSpeed_clone, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_getMotionLength", _wrap_ScaleMotionSpeed_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_getFloatValueAtTimeInternal", _wrap_ScaleMotionSpeed_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_getVecValueAtTimeInternal", _wrap_ScaleMotionSpeed_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_getQuatValueAtTimeInternal", _wrap_ScaleMotionSpeed_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_setScaleFactor", _wrap_ScaleMotionSpeed_setScaleFactor, METH_VARARGS, NULL},
	 { (char *)"delete_ScaleMotionSpeed", _wrap_delete_ScaleMotionSpeed, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionSpeed_swigregister", ScaleMotionSpeed_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ScaleMotionRoot", _wrap_new_ScaleMotionRoot, METH_VARARGS, NULL},
	 { (char *)"delete_ScaleMotionRoot", _wrap_delete_ScaleMotionRoot, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_clone", _wrap_ScaleMotionRoot_clone, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_getFloatValueAtTimeInternal", _wrap_ScaleMotionRoot_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_getVecValueAtTimeInternal", _wrap_ScaleMotionRoot_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_getQuatValueAtTimeInternal", _wrap_ScaleMotionRoot_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_setScaleFactor", _wrap_ScaleMotionRoot_setScaleFactor, METH_VARARGS, NULL},
	 { (char *)"ScaleMotionRoot_swigregister", ScaleMotionRoot_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TimeOffset", _wrap_new_TimeOffset, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_clone", _wrap_TimeOffset_clone, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_setStartTime", _wrap_TimeOffset_setStartTime, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_getFloatValueAtTimeInternal", _wrap_TimeOffset_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_getVecValueAtTimeInternal", _wrap_TimeOffset_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_getQuatValueAtTimeInternal", _wrap_TimeOffset_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_setOffset", _wrap_TimeOffset_setOffset, METH_VARARGS, NULL},
	 { (char *)"delete_TimeOffset", _wrap_delete_TimeOffset, METH_VARARGS, NULL},
	 { (char *)"TimeOffset_swigregister", TimeOffset_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TurnMotion", _wrap_new_TurnMotion, METH_VARARGS, NULL},
	 { (char *)"TurnMotion_clone", _wrap_TurnMotion_clone, METH_VARARGS, NULL},
	 { (char *)"TurnMotion_getFloatValueAtTimeInternal", _wrap_TurnMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TurnMotion_getVecValueAtTimeInternal", _wrap_TurnMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TurnMotion_getQuatValueAtTimeInternal", _wrap_TurnMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TurnMotion_setRotation", _wrap_TurnMotion_setRotation, METH_VARARGS, NULL},
	 { (char *)"delete_TurnMotion", _wrap_delete_TurnMotion, METH_VARARGS, NULL},
	 { (char *)"TurnMotion_swigregister", TurnMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SequentialBlend", _wrap_new_SequentialBlend, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_clone", _wrap_SequentialBlend_clone, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_setMaintainY", _wrap_SequentialBlend_setMaintainY, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_setStartTime", _wrap_SequentialBlend_setStartTime, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_getMotionLength", _wrap_SequentialBlend_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_getFloatValueAtTimeInternal", _wrap_SequentialBlend_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_getVecValueAtTimeInternal", _wrap_SequentialBlend_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_getQuatValueAtTimeInternal", _wrap_SequentialBlend_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_setBlendStart", _wrap_SequentialBlend_setBlendStart, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_setBlendInterval", _wrap_SequentialBlend_setBlendInterval, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_getBlendStart", _wrap_SequentialBlend_getBlendStart, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_getBlendInterval", _wrap_SequentialBlend_getBlendInterval, METH_VARARGS, NULL},
	 { (char *)"delete_SequentialBlend", _wrap_delete_SequentialBlend, METH_VARARGS, NULL},
	 { (char *)"SequentialBlend_swigregister", SequentialBlend_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SelfBlend", _wrap_new_SelfBlend, METH_VARARGS, NULL},
	 { (char *)"SelfBlend_clone", _wrap_SelfBlend_clone, METH_VARARGS, NULL},
	 { (char *)"SelfBlend_reset", _wrap_SelfBlend_reset, METH_VARARGS, NULL},
	 { (char *)"SelfBlend_reblend", _wrap_SelfBlend_reblend, METH_VARARGS, NULL},
	 { (char *)"SelfBlend_setMotion", _wrap_SelfBlend_setMotion, METH_VARARGS, NULL},
	 { (char *)"delete_SelfBlend", _wrap_delete_SelfBlend, METH_VARARGS, NULL},
	 { (char *)"SelfBlend_swigregister", SelfBlend_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LoopMotion", _wrap_new_LoopMotion, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_clone", _wrap_LoopMotion_clone, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_getMotionLength", _wrap_LoopMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_setEndTime", _wrap_LoopMotion_setEndTime, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_getFloatValueAtTimeInternal", _wrap_LoopMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_getVecValueAtTimeInternal", _wrap_LoopMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_getQuatValueAtTimeInternal", _wrap_LoopMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_LoopMotion", _wrap_delete_LoopMotion, METH_VARARGS, NULL},
	 { (char *)"LoopMotion_swigregister", LoopMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RandomTimingsLoop", _wrap_new_RandomTimingsLoop, METH_VARARGS, NULL},
	 { (char *)"delete_RandomTimingsLoop", _wrap_delete_RandomTimingsLoop, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsLoop_clone", _wrap_RandomTimingsLoop_clone, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsLoop_setTimingParams", _wrap_RandomTimingsLoop_setTimingParams, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsLoop_reblend", _wrap_RandomTimingsLoop_reblend, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsLoop_setMotion", _wrap_RandomTimingsLoop_setMotion, METH_VARARGS, NULL},
	 { (char *)"RandomTimingsLoop_swigregister", RandomTimingsLoop_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AvatarPostureBlend", _wrap_new_AvatarPostureBlend, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_clone", _wrap_AvatarPostureBlend_clone, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_load", _wrap_AvatarPostureBlend_load, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_reblend", _wrap_AvatarPostureBlend_reblend, METH_VARARGS, NULL},
	 { (char *)"delete_AvatarPostureBlend", _wrap_delete_AvatarPostureBlend, METH_VARARGS, NULL},
	 { (char *)"AvatarPostureBlend_swigregister", AvatarPostureBlend_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_BlendBetween", _wrap_new_BlendBetween, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_clone", _wrap_BlendBetween_clone, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_getFloatValueAtTimeInternal", _wrap_BlendBetween_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_getVecValueAtTimeInternal", _wrap_BlendBetween_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_getQuatValueAtTimeInternal", _wrap_BlendBetween_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_setBlendFactor", _wrap_BlendBetween_setBlendFactor, METH_VARARGS, NULL},
	 { (char *)"delete_BlendBetween", _wrap_delete_BlendBetween, METH_VARARGS, NULL},
	 { (char *)"BlendBetween_swigregister", BlendBetween_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MotionAdder", _wrap_new_MotionAdder, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_clone", _wrap_MotionAdder_clone, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_setScaleSecond", _wrap_MotionAdder_setScaleSecond, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_getFloatValueAtTimeInternal", _wrap_MotionAdder_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_getVecValueAtTimeInternal", _wrap_MotionAdder_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_getQuatValueAtTimeInternal", _wrap_MotionAdder_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_MotionAdder", _wrap_delete_MotionAdder, METH_VARARGS, NULL},
	 { (char *)"MotionAdder_swigregister", MotionAdder_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MotionMask", _wrap_new_MotionMask, METH_VARARGS, NULL},
	 { (char *)"MotionMask_setMask", _wrap_MotionMask_setMask, METH_VARARGS, NULL},
	 { (char *)"MotionMask_getMask", _wrap_MotionMask_getMask, METH_VARARGS, NULL},
	 { (char *)"delete_MotionMask", _wrap_delete_MotionMask, METH_VARARGS, NULL},
	 { (char *)"MotionMask_swigregister", MotionMask_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MaskedMotion", _wrap_new_MaskedMotion, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_clone", _wrap_MaskedMotion_clone, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_setUseSecondary", _wrap_MaskedMotion_setUseSecondary, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_setMask1", _wrap_MaskedMotion_setMask1, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_setMask2", _wrap_MaskedMotion_setMask2, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_addToMask1", _wrap_MaskedMotion_addToMask1, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_removeFromMask1", _wrap_MaskedMotion_removeFromMask1, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_addToMask2", _wrap_MaskedMotion_addToMask2, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_removeFromMask2", _wrap_MaskedMotion_removeFromMask2, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_getFloatValueAtTimeInternal", _wrap_MaskedMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_getVecValueAtTimeInternal", _wrap_MaskedMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_getQuatValueAtTimeInternal", _wrap_MaskedMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_MaskedMotion", _wrap_delete_MaskedMotion, METH_VARARGS, NULL},
	 { (char *)"MaskedMotion_swigregister", MaskedMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MultiMotionLoop", _wrap_new_MultiMotionLoop, METH_VARARGS, NULL},
	 { (char *)"delete_MultiMotionLoop", _wrap_delete_MultiMotionLoop, METH_VARARGS, NULL},
	 { (char *)"MultiMotionLoop_clone", _wrap_MultiMotionLoop_clone, METH_VARARGS, NULL},
	 { (char *)"MultiMotionLoop_printInfo", _wrap_MultiMotionLoop_printInfo, METH_VARARGS, NULL},
	 { (char *)"MultiMotionLoop_addMotion", _wrap_MultiMotionLoop_addMotion, METH_VARARGS, NULL},
	 { (char *)"MultiMotionLoop_findSub", _wrap_MultiMotionLoop_findSub, METH_VARARGS, NULL},
	 { (char *)"MultiMotionLoop_findSubByType", _wrap_MultiMotionLoop_findSubByType, METH_VARARGS, NULL},
	 { (char *)"MultiMotionLoop_load", _wrap_MultiMotionLoop_load, METH_VARARGS, NULL},
	 { (char *)"MultiMotionLoop_unload", _wrap_MultiMotionLoop_unload, METH_VARARGS, NULL},
	 { (char *)"MultiMotionLoop_loaded", _wrap_MultiMotionLoop_loaded, METH_VARARGS, NULL},
	 { (char *)"MultiMotionLoop_swigregister", MultiMotionLoop_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ChoiceLoopMotion", _wrap_new_ChoiceLoopMotion, METH_VARARGS, NULL},
	 { (char *)"delete_ChoiceLoopMotion", _wrap_delete_ChoiceLoopMotion, METH_VARARGS, NULL},
	 { (char *)"ChoiceLoopMotion_clone", _wrap_ChoiceLoopMotion_clone, METH_VARARGS, NULL},
	 { (char *)"ChoiceLoopMotion_setCurrentChoice", _wrap_ChoiceLoopMotion_setCurrentChoice, METH_VARARGS, NULL},
	 { (char *)"ChoiceLoopMotion_reblend", _wrap_ChoiceLoopMotion_reblend, METH_VARARGS, NULL},
	 { (char *)"ChoiceLoopMotion_swigregister", ChoiceLoopMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RandomLoopMotion", _wrap_new_RandomLoopMotion, METH_VARARGS, NULL},
	 { (char *)"delete_RandomLoopMotion", _wrap_delete_RandomLoopMotion, METH_VARARGS, NULL},
	 { (char *)"RandomLoopMotion_clone", _wrap_RandomLoopMotion_clone, METH_VARARGS, NULL},
	 { (char *)"RandomLoopMotion_convertTo", _wrap_RandomLoopMotion_convertTo, METH_VARARGS, NULL},
	 { (char *)"RandomLoopMotion_addMotion", _wrap_RandomLoopMotion_addMotion, METH_VARARGS, NULL},
	 { (char *)"RandomLoopMotion_setProbability", _wrap_RandomLoopMotion_setProbability, METH_VARARGS, NULL},
	 { (char *)"RandomLoopMotion_reblend", _wrap_RandomLoopMotion_reblend, METH_VARARGS, NULL},
	 { (char *)"RandomLoopMotion_swigregister", RandomLoopMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RandomBlendLoop", _wrap_new_RandomBlendLoop, METH_VARARGS, NULL},
	 { (char *)"delete_RandomBlendLoop", _wrap_delete_RandomBlendLoop, METH_VARARGS, NULL},
	 { (char *)"RandomBlendLoop_clone", _wrap_RandomBlendLoop_clone, METH_VARARGS, NULL},
	 { (char *)"RandomBlendLoop_addMotion", _wrap_RandomBlendLoop_addMotion, METH_VARARGS, NULL},
	 { (char *)"RandomBlendLoop_setAutoShift", _wrap_RandomBlendLoop_setAutoShift, METH_VARARGS, NULL},
	 { (char *)"RandomBlendLoop_shift", _wrap_RandomBlendLoop_shift, METH_VARARGS, NULL},
	 { (char *)"RandomBlendLoop_reblend", _wrap_RandomBlendLoop_reblend, METH_VARARGS, NULL},
	 { (char *)"RandomBlendLoop_swigregister", RandomBlendLoop_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RandomAddLoop", _wrap_new_RandomAddLoop, METH_VARARGS, NULL},
	 { (char *)"delete_RandomAddLoop", _wrap_delete_RandomAddLoop, METH_VARARGS, NULL},
	 { (char *)"RandomAddLoop_clone", _wrap_RandomAddLoop_clone, METH_VARARGS, NULL},
	 { (char *)"RandomAddLoop_setAutoShift", _wrap_RandomAddLoop_setAutoShift, METH_VARARGS, NULL},
	 { (char *)"RandomAddLoop_shift", _wrap_RandomAddLoop_shift, METH_VARARGS, NULL},
	 { (char *)"RandomAddLoop_reblend", _wrap_RandomAddLoop_reblend, METH_VARARGS, NULL},
	 { (char *)"RandomAddLoop_swigregister", RandomAddLoop_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ProxemicsLoop", _wrap_new_ProxemicsLoop, METH_VARARGS, NULL},
	 { (char *)"delete_ProxemicsLoop", _wrap_delete_ProxemicsLoop, METH_VARARGS, NULL},
	 { (char *)"ProxemicsLoop_clone", _wrap_ProxemicsLoop_clone, METH_VARARGS, NULL},
	 { (char *)"ProxemicsLoop_setDistance", _wrap_ProxemicsLoop_setDistance, METH_VARARGS, NULL},
	 { (char *)"ProxemicsLoop_setThreshold", _wrap_ProxemicsLoop_setThreshold, METH_VARARGS, NULL},
	 { (char *)"ProxemicsLoop_setAngleThreshold", _wrap_ProxemicsLoop_setAngleThreshold, METH_VARARGS, NULL},
	 { (char *)"ProxemicsLoop_turnOff", _wrap_ProxemicsLoop_turnOff, METH_VARARGS, NULL},
	 { (char *)"ProxemicsLoop_addAvatar", _wrap_ProxemicsLoop_addAvatar, METH_VARARGS, NULL},
	 { (char *)"ProxemicsLoop_removeAvatar", _wrap_ProxemicsLoop_removeAvatar, METH_VARARGS, NULL},
	 { (char *)"ProxemicsLoop_removeAllAvatars", _wrap_ProxemicsLoop_removeAllAvatars, METH_VARARGS, NULL},
	 { (char *)"ProxemicsLoop_reblend", _wrap_ProxemicsLoop_reblend, METH_VARARGS, NULL},
	 { (char *)"ProxemicsLoop_swigregister", ProxemicsLoop_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LookAtMotion", _wrap_new_LookAtMotion, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_clone", _wrap_LookAtMotion_clone, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_isFacial", _wrap_LookAtMotion_isFacial, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_isRandomAccess", _wrap_LookAtMotion_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_load", _wrap_LookAtMotion_load, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_reblend", _wrap_LookAtMotion_reblend, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setTarget", _wrap_LookAtMotion_setTarget, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getTargetName", _wrap_LookAtMotion_getTargetName, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setHeadActive", _wrap_LookAtMotion_setHeadActive, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setBodyActive", _wrap_LookAtMotion_setBodyActive, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setTurnBodyVertical", _wrap_LookAtMotion_setTurnBodyVertical, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setTurnBodyFull", _wrap_LookAtMotion_setTurnBodyFull, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setLeanTowards", _wrap_LookAtMotion_setLeanTowards, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setEyesLimit", _wrap_LookAtMotion_setEyesLimit, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setHeadBodyLimit", _wrap_LookAtMotion_setHeadBodyLimit, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setEyesMorphAngle", _wrap_LookAtMotion_setEyesMorphAngle, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_setEndTime", _wrap_LookAtMotion_setEndTime, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getMotionLength", _wrap_LookAtMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_isNull", _wrap_LookAtMotion_isNull, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_isNullFacial", _wrap_LookAtMotion_isNullFacial, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getTrackType", _wrap_LookAtMotion_getTrackType, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_canLookAt", _wrap_LookAtMotion_canLookAt, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getFloatValueAtTimeInternal", _wrap_LookAtMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getVecValueAtTimeInternal", _wrap_LookAtMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_getQuatValueAtTimeInternal", _wrap_LookAtMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_LookAtMotion", _wrap_delete_LookAtMotion, METH_VARARGS, NULL},
	 { (char *)"LookAtMotion_swigregister", LookAtMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LookAtToFacial", _wrap_new_LookAtToFacial, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_clone", _wrap_LookAtToFacial_clone, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_load", _wrap_LookAtToFacial_load, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_isFacial", _wrap_LookAtToFacial_isFacial, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_isNull", _wrap_LookAtToFacial_isNull, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_getFloatValueAtTimeInternal", _wrap_LookAtToFacial_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_getVecValueAtTimeInternal", _wrap_LookAtToFacial_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_getQuatValueAtTimeInternal", _wrap_LookAtToFacial_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_LookAtToFacial", _wrap_delete_LookAtToFacial, METH_VARARGS, NULL},
	 { (char *)"LookAtToFacial_swigregister", LookAtToFacial_swigregister, METH_VARARGS, NULL},
	 { (char *)"flagStruct_headActive_set", _wrap_flagStruct_headActive_set, METH_VARARGS, NULL},
	 { (char *)"flagStruct_headActive_get", _wrap_flagStruct_headActive_get, METH_VARARGS, NULL},
	 { (char *)"flagStruct_bodyActive_set", _wrap_flagStruct_bodyActive_set, METH_VARARGS, NULL},
	 { (char *)"flagStruct_bodyActive_get", _wrap_flagStruct_bodyActive_get, METH_VARARGS, NULL},
	 { (char *)"flagStruct_turnBodyVertical_set", _wrap_flagStruct_turnBodyVertical_set, METH_VARARGS, NULL},
	 { (char *)"flagStruct_turnBodyVertical_get", _wrap_flagStruct_turnBodyVertical_get, METH_VARARGS, NULL},
	 { (char *)"flagStruct_turnBodyFull_set", _wrap_flagStruct_turnBodyFull_set, METH_VARARGS, NULL},
	 { (char *)"flagStruct_turnBodyFull_get", _wrap_flagStruct_turnBodyFull_get, METH_VARARGS, NULL},
	 { (char *)"flagStruct_leanTowards_set", _wrap_flagStruct_leanTowards_set, METH_VARARGS, NULL},
	 { (char *)"flagStruct_leanTowards_get", _wrap_flagStruct_leanTowards_get, METH_VARARGS, NULL},
	 { (char *)"new_flagStruct", _wrap_new_flagStruct, METH_VARARGS, NULL},
	 { (char *)"delete_flagStruct", _wrap_delete_flagStruct, METH_VARARGS, NULL},
	 { (char *)"flagStruct_swigregister", flagStruct_swigregister, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_avatar_set", _wrap_AvatarTargetStruct_avatar_set, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_avatar_get", _wrap_AvatarTargetStruct_avatar_get, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_joint_set", _wrap_AvatarTargetStruct_joint_set, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_joint_get", _wrap_AvatarTargetStruct_joint_get, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_flags_set", _wrap_AvatarTargetStruct_flags_set, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_flags_get", _wrap_AvatarTargetStruct_flags_get, METH_VARARGS, NULL},
	 { (char *)"new_AvatarTargetStruct", _wrap_new_AvatarTargetStruct, METH_VARARGS, NULL},
	 { (char *)"delete_AvatarTargetStruct", _wrap_delete_AvatarTargetStruct, METH_VARARGS, NULL},
	 { (char *)"AvatarTargetStruct_swigregister", AvatarTargetStruct_swigregister, METH_VARARGS, NULL},
	 { (char *)"ObjectTargetStruct_object_set", _wrap_ObjectTargetStruct_object_set, METH_VARARGS, NULL},
	 { (char *)"ObjectTargetStruct_object_get", _wrap_ObjectTargetStruct_object_get, METH_VARARGS, NULL},
	 { (char *)"ObjectTargetStruct_flags_set", _wrap_ObjectTargetStruct_flags_set, METH_VARARGS, NULL},
	 { (char *)"ObjectTargetStruct_flags_get", _wrap_ObjectTargetStruct_flags_get, METH_VARARGS, NULL},
	 { (char *)"new_ObjectTargetStruct", _wrap_new_ObjectTargetStruct, METH_VARARGS, NULL},
	 { (char *)"delete_ObjectTargetStruct", _wrap_delete_ObjectTargetStruct, METH_VARARGS, NULL},
	 { (char *)"ObjectTargetStruct_swigregister", ObjectTargetStruct_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RandomGazeMotion", _wrap_new_RandomGazeMotion, METH_VARARGS, NULL},
	 { (char *)"delete_RandomGazeMotion", _wrap_delete_RandomGazeMotion, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_clone", _wrap_RandomGazeMotion_clone, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_clearDirectionTable", _wrap_RandomGazeMotion_clearDirectionTable, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_addDirection", _wrap_RandomGazeMotion_addDirection, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_normaliseDirectionTable", _wrap_RandomGazeMotion_normaliseDirectionTable, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_addAvatarTarget", _wrap_RandomGazeMotion_addAvatarTarget, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_addObjectTarget", _wrap_RandomGazeMotion_addObjectTarget, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setTargetFlags", _wrap_RandomGazeMotion_setTargetFlags, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setGazeParams", _wrap_RandomGazeMotion_setGazeParams, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setLookAtLocationProb", _wrap_RandomGazeMotion_setLookAtLocationProb, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setMeanGazeLength", _wrap_RandomGazeMotion_setMeanGazeLength, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setEyesLimit", _wrap_RandomGazeMotion_setEyesLimit, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setHeadBodyLimit", _wrap_RandomGazeMotion_setHeadBodyLimit, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_setEyesMorphAngle", _wrap_RandomGazeMotion_setEyesMorphAngle, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_randomLocation", _wrap_RandomGazeMotion_randomLocation, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_lookAt", _wrap_RandomGazeMotion_lookAt, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_reblend", _wrap_RandomGazeMotion_reblend, METH_VARARGS, NULL},
	 { (char *)"RandomGazeMotion_swigregister", RandomGazeMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ZeroMotion", _wrap_new_ZeroMotion, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_clone", _wrap_ZeroMotion_clone, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_isFacial", _wrap_ZeroMotion_isFacial, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_isRandomAccess", _wrap_ZeroMotion_isRandomAccess, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_getMotionLength", _wrap_ZeroMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_isNull", _wrap_ZeroMotion_isNull, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_getTrackType", _wrap_ZeroMotion_getTrackType, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_getFloatValueAtTimeInternal", _wrap_ZeroMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_getVecValueAtTimeInternal", _wrap_ZeroMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_getQuatValueAtTimeInternal", _wrap_ZeroMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_ZeroMotion", _wrap_delete_ZeroMotion, METH_VARARGS, NULL},
	 { (char *)"ZeroMotion_swigregister", ZeroMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MotionSaver", _wrap_new_MotionSaver, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_clone", _wrap_MotionSaver_clone, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_getFloatValueAtTimeInternal", _wrap_MotionSaver_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_getVecValueAtTimeInternal", _wrap_MotionSaver_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_getQuatValueAtTimeInternal", _wrap_MotionSaver_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_collectFrames", _wrap_MotionSaver_collectFrames, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_save", _wrap_MotionSaver_save, METH_VARARGS, NULL},
	 { (char *)"delete_MotionSaver", _wrap_delete_MotionSaver, METH_VARARGS, NULL},
	 { (char *)"MotionSaver_swigregister", MotionSaver_swigregister, METH_VARARGS, NULL},
	 { (char *)"MotionParser_editMotion", _wrap_MotionParser_editMotion, METH_VARARGS, NULL},
	 { (char *)"MotionParser_editAvatarMotion", _wrap_MotionParser_editAvatarMotion, METH_VARARGS, NULL},
	 { (char *)"MotionParser_parseMotion", _wrap_MotionParser_parseMotion, METH_VARARGS, NULL},
	 { (char *)"MotionParser_addMotionCommand", _wrap_MotionParser_addMotionCommand, METH_VARARGS, NULL},
	 { (char *)"MotionParser_getMotionCommand", _wrap_MotionParser_getMotionCommand, METH_VARARGS, NULL},
	 { (char *)"MotionParser_setUpMotionCommands", _wrap_MotionParser_setUpMotionCommands, METH_VARARGS, NULL},
	 { (char *)"delete_MotionParser", _wrap_delete_MotionParser, METH_VARARGS, NULL},
	 { (char *)"MotionParser_swigregister", MotionParser_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SubMotion", _wrap_new_SubMotion, METH_VARARGS, NULL},
	 { (char *)"SubMotion_clone", _wrap_SubMotion_clone, METH_VARARGS, NULL},
	 { (char *)"SubMotion_getMotionLength", _wrap_SubMotion_getMotionLength, METH_VARARGS, NULL},
	 { (char *)"SubMotion_setStart", _wrap_SubMotion_setStart, METH_VARARGS, NULL},
	 { (char *)"SubMotion_setEnd", _wrap_SubMotion_setEnd, METH_VARARGS, NULL},
	 { (char *)"SubMotion_getFloatValueAtTimeInternal", _wrap_SubMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"SubMotion_getVecValueAtTimeInternal", _wrap_SubMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"SubMotion_getQuatValueAtTimeInternal", _wrap_SubMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_SubMotion", _wrap_delete_SubMotion, METH_VARARGS, NULL},
	 { (char *)"SubMotion_swigregister", SubMotion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TimeRangeMotion", _wrap_new_TimeRangeMotion, METH_VARARGS, NULL},
	 { (char *)"TimeRangeMotion_clone", _wrap_TimeRangeMotion_clone, METH_VARARGS, NULL},
	 { (char *)"TimeRangeMotion_setStart", _wrap_TimeRangeMotion_setStart, METH_VARARGS, NULL},
	 { (char *)"TimeRangeMotion_setEnd", _wrap_TimeRangeMotion_setEnd, METH_VARARGS, NULL},
	 { (char *)"TimeRangeMotion_getFloatValueAtTimeInternal", _wrap_TimeRangeMotion_getFloatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TimeRangeMotion_getVecValueAtTimeInternal", _wrap_TimeRangeMotion_getVecValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"TimeRangeMotion_getQuatValueAtTimeInternal", _wrap_TimeRangeMotion_getQuatValueAtTimeInternal, METH_VARARGS, NULL},
	 { (char *)"delete_TimeRangeMotion", _wrap_delete_TimeRangeMotion, METH_VARARGS, NULL},
	 { (char *)"TimeRangeMotion_swigregister", TimeRangeMotion_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_Piavca__SelfBlendTo_p_Piavca__SequentialBlend(void *x) {
    return (void *)((Piavca::SequentialBlend *)  ((Piavca::SelfBlend *) x));
}
static void *_p_Piavca__RandomGazeMotionTo_p_Piavca__SequentialBlend(void *x) {
    return (void *)((Piavca::SequentialBlend *) (Piavca::SelfBlend *)(Piavca::LoopMotion *) ((Piavca::RandomGazeMotion *) x));
}
static void *_p_Piavca__MultiMotionLoopTo_p_Piavca__SequentialBlend(void *x) {
    return (void *)((Piavca::SequentialBlend *) (Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *) ((Piavca::MultiMotionLoop *) x));
}
static void *_p_Piavca__RandomBlendLoopTo_p_Piavca__SequentialBlend(void *x) {
    return (void *)((Piavca::SequentialBlend *) (Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::RandomBlendLoop *) x));
}
static void *_p_Piavca__RandomAddLoopTo_p_Piavca__SequentialBlend(void *x) {
    return (void *)((Piavca::SequentialBlend *) (Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::RandomAddLoop *) x));
}
static void *_p_Piavca__ProxemicsLoopTo_p_Piavca__SequentialBlend(void *x) {
    return (void *)((Piavca::SequentialBlend *) (Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::ProxemicsLoop *) x));
}
static void *_p_Piavca__AvatarPostureBlendTo_p_Piavca__SequentialBlend(void *x) {
    return (void *)((Piavca::SequentialBlend *)  ((Piavca::AvatarPostureBlend *) x));
}
static void *_p_Piavca__LoopMotionTo_p_Piavca__SequentialBlend(void *x) {
    return (void *)((Piavca::SequentialBlend *) (Piavca::SelfBlend *) ((Piavca::LoopMotion *) x));
}
static void *_p_Piavca__RandomTimingsLoopTo_p_Piavca__SequentialBlend(void *x) {
    return (void *)((Piavca::SequentialBlend *) (Piavca::SelfBlend *)(Piavca::LoopMotion *) ((Piavca::RandomTimingsLoop *) x));
}
static void *_p_Piavca__ChoiceLoopMotionTo_p_Piavca__SequentialBlend(void *x) {
    return (void *)((Piavca::SequentialBlend *) (Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::ChoiceLoopMotion *) x));
}
static void *_p_Piavca__RandomLoopMotionTo_p_Piavca__SequentialBlend(void *x) {
    return (void *)((Piavca::SequentialBlend *) (Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *)(Piavca::ChoiceLoopMotion *) ((Piavca::RandomLoopMotion *) x));
}
static void *_p_Piavca__RandomBlendLoopTo_p_Piavca__MultiMotionLoop(void *x) {
    return (void *)((Piavca::MultiMotionLoop *)  ((Piavca::RandomBlendLoop *) x));
}
static void *_p_Piavca__RandomAddLoopTo_p_Piavca__MultiMotionLoop(void *x) {
    return (void *)((Piavca::MultiMotionLoop *)  ((Piavca::RandomAddLoop *) x));
}
static void *_p_Piavca__ProxemicsLoopTo_p_Piavca__MultiMotionLoop(void *x) {
    return (void *)((Piavca::MultiMotionLoop *)  ((Piavca::ProxemicsLoop *) x));
}
static void *_p_Piavca__ChoiceLoopMotionTo_p_Piavca__MultiMotionLoop(void *x) {
    return (void *)((Piavca::MultiMotionLoop *)  ((Piavca::ChoiceLoopMotion *) x));
}
static void *_p_Piavca__RandomLoopMotionTo_p_Piavca__MultiMotionLoop(void *x) {
    return (void *)((Piavca::MultiMotionLoop *) (Piavca::ChoiceLoopMotion *) ((Piavca::RandomLoopMotion *) x));
}
static void *_p_Piavca__MultiMotionLoopTo_p_Piavca__RandomTimingsLoop(void *x) {
    return (void *)((Piavca::RandomTimingsLoop *)  ((Piavca::MultiMotionLoop *) x));
}
static void *_p_Piavca__RandomBlendLoopTo_p_Piavca__RandomTimingsLoop(void *x) {
    return (void *)((Piavca::RandomTimingsLoop *) (Piavca::MultiMotionLoop *) ((Piavca::RandomBlendLoop *) x));
}
static void *_p_Piavca__RandomAddLoopTo_p_Piavca__RandomTimingsLoop(void *x) {
    return (void *)((Piavca::RandomTimingsLoop *) (Piavca::MultiMotionLoop *) ((Piavca::RandomAddLoop *) x));
}
static void *_p_Piavca__ProxemicsLoopTo_p_Piavca__RandomTimingsLoop(void *x) {
    return (void *)((Piavca::RandomTimingsLoop *) (Piavca::MultiMotionLoop *) ((Piavca::ProxemicsLoop *) x));
}
static void *_p_Piavca__ChoiceLoopMotionTo_p_Piavca__RandomTimingsLoop(void *x) {
    return (void *)((Piavca::RandomTimingsLoop *) (Piavca::MultiMotionLoop *) ((Piavca::ChoiceLoopMotion *) x));
}
static void *_p_Piavca__RandomLoopMotionTo_p_Piavca__RandomTimingsLoop(void *x) {
    return (void *)((Piavca::RandomTimingsLoop *) (Piavca::MultiMotionLoop *)(Piavca::ChoiceLoopMotion *) ((Piavca::RandomLoopMotion *) x));
}
static void *_p_Piavca__MotionAdderTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *)  ((Piavca::MotionAdder *) x));
}
static void *_p_Piavca__MultiMotionLoopTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *) ((Piavca::MultiMotionLoop *) x));
}
static void *_p_Piavca__RandomGazeMotionTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *) ((Piavca::RandomGazeMotion *) x));
}
static void *_p_Piavca__AvatarPostureBlendTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::SequentialBlend *) ((Piavca::AvatarPostureBlend *) x));
}
static void *_p_Piavca__SequentialBlendTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *)  ((Piavca::SequentialBlend *) x));
}
static void *_p_Piavca__ProxemicsLoopTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::ProxemicsLoop *) x));
}
static void *_p_Piavca__RandomAddLoopTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::RandomAddLoop *) x));
}
static void *_p_Piavca__SelfBlendTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::SequentialBlend *) ((Piavca::SelfBlend *) x));
}
static void *_p_Piavca__RandomLoopMotionTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *)(Piavca::ChoiceLoopMotion *) ((Piavca::RandomLoopMotion *) x));
}
static void *_p_Piavca__ChoiceLoopMotionTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::ChoiceLoopMotion *) x));
}
static void *_p_Piavca__MaskedMotionTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *)  ((Piavca::MaskedMotion *) x));
}
static void *_p_Piavca__LoopMotionTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::SequentialBlend *)(Piavca::SelfBlend *) ((Piavca::LoopMotion *) x));
}
static void *_p_Piavca__RandomBlendLoopTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::RandomBlendLoop *) x));
}
static void *_p_Piavca__RandomTimingsLoopTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *) (Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *) ((Piavca::RandomTimingsLoop *) x));
}
static void *_p_Piavca__BlendBetweenTo_p_Piavca__TwoMotionCombiner(void *x) {
    return (void *)((Piavca::TwoMotionCombiner *)  ((Piavca::BlendBetween *) x));
}
static void *_p_Piavca__TwoMotionCombinerTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *)  ((Piavca::TwoMotionCombiner *) x));
}
static void *_p_Piavca__MotionAdderTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *) ((Piavca::MotionAdder *) x));
}
static void *_p_Piavca__MultiMotionLoopTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *) ((Piavca::MultiMotionLoop *) x));
}
static void *_p_Piavca__ScaleMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::ScaleMotion *) x));
}
static void *_p_Piavca__PyMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *)  ((Piavca::PyMotion *) x));
}
static void *_p_Piavca__TrackMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *)  ((Piavca::TrackMotion *) x));
}
static void *_p_Piavca__RandomGazeMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *) ((Piavca::RandomGazeMotion *) x));
}
static void *_p_Piavca__ZeroMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *)  ((Piavca::ZeroMotion *) x));
}
static void *_p_Piavca__TimeRangeMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::TimeRangeMotion *) x));
}
static void *_p_Piavca__AvatarPostureBlendTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::SequentialBlend *) ((Piavca::AvatarPostureBlend *) x));
}
static void *_p_Piavca__SequentialBlendTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *) ((Piavca::SequentialBlend *) x));
}
static void *_p_Piavca__SelfBlendTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::SequentialBlend *) ((Piavca::SelfBlend *) x));
}
static void *_p_Piavca__RandomAddLoopTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::RandomAddLoop *) x));
}
static void *_p_Piavca__ProxemicsLoopTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::ProxemicsLoop *) x));
}
static void *_p_Piavca__LoopMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::SequentialBlend *)(Piavca::SelfBlend *) ((Piavca::LoopMotion *) x));
}
static void *_p_Piavca__TurnMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::TurnMotion *) x));
}
static void *_p_Piavca__TimeOffsetTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::TimeOffset *) x));
}
static void *_p_Piavca__MaskedMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *) ((Piavca::MaskedMotion *) x));
}
static void *_p_Piavca__ChoiceLoopMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::ChoiceLoopMotion *) x));
}
static void *_p_Piavca__RandomLoopMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *)(Piavca::ChoiceLoopMotion *) ((Piavca::RandomLoopMotion *) x));
}
static void *_p_Piavca__LookAtMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *)  ((Piavca::LookAtMotion *) x));
}
static void *_p_Piavca__SubMotionTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::SubMotion *) x));
}
static void *_p_Piavca__ScaleMotionRootTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::ScaleMotionRoot *) x));
}
static void *_p_Piavca__RandomBlendLoopTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::RandomBlendLoop *) x));
}
static void *_p_Piavca__RandomTimingsLoopTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *)(Piavca::SequentialBlend *)(Piavca::SelfBlend *)(Piavca::LoopMotion *) ((Piavca::RandomTimingsLoop *) x));
}
static void *_p_Piavca__MotionSaverTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::MotionSaver *) x));
}
static void *_p_Piavca__ScaleMotionSpeedTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::ScaleMotionSpeed *) x));
}
static void *_p_Piavca__MotionFilterTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *)  ((Piavca::MotionFilter *) x));
}
static void *_p_Piavca__LookAtToFacialTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::MotionFilter *) ((Piavca::LookAtToFacial *) x));
}
static void *_p_Piavca__BlendBetweenTo_p_Piavca__Motion(void *x) {
    return (void *)((Piavca::Motion *) (Piavca::TwoMotionCombiner *) ((Piavca::BlendBetween *) x));
}
static void *_p_Piavca__RandomLoopMotionTo_p_Piavca__ChoiceLoopMotion(void *x) {
    return (void *)((Piavca::ChoiceLoopMotion *)  ((Piavca::RandomLoopMotion *) x));
}
static void *_p_Piavca__RandomGazeMotionTo_p_Piavca__LoopMotion(void *x) {
    return (void *)((Piavca::LoopMotion *)  ((Piavca::RandomGazeMotion *) x));
}
static void *_p_Piavca__MultiMotionLoopTo_p_Piavca__LoopMotion(void *x) {
    return (void *)((Piavca::LoopMotion *) (Piavca::RandomTimingsLoop *) ((Piavca::MultiMotionLoop *) x));
}
static void *_p_Piavca__RandomBlendLoopTo_p_Piavca__LoopMotion(void *x) {
    return (void *)((Piavca::LoopMotion *) (Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::RandomBlendLoop *) x));
}
static void *_p_Piavca__RandomAddLoopTo_p_Piavca__LoopMotion(void *x) {
    return (void *)((Piavca::LoopMotion *) (Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::RandomAddLoop *) x));
}
static void *_p_Piavca__ProxemicsLoopTo_p_Piavca__LoopMotion(void *x) {
    return (void *)((Piavca::LoopMotion *) (Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::ProxemicsLoop *) x));
}
static void *_p_Piavca__RandomTimingsLoopTo_p_Piavca__LoopMotion(void *x) {
    return (void *)((Piavca::LoopMotion *)  ((Piavca::RandomTimingsLoop *) x));
}
static void *_p_Piavca__ChoiceLoopMotionTo_p_Piavca__LoopMotion(void *x) {
    return (void *)((Piavca::LoopMotion *) (Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::ChoiceLoopMotion *) x));
}
static void *_p_Piavca__RandomLoopMotionTo_p_Piavca__LoopMotion(void *x) {
    return (void *)((Piavca::LoopMotion *) (Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *)(Piavca::ChoiceLoopMotion *) ((Piavca::RandomLoopMotion *) x));
}
static void *_p_Piavca__ScaleMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::ScaleMotion *) x));
}
static void *_p_Piavca__MotionSaverTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::MotionSaver *) x));
}
static void *_p_Piavca__TimeRangeMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::TimeRangeMotion *) x));
}
static void *_p_Piavca__ScaleMotionSpeedTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::ScaleMotionSpeed *) x));
}
static void *_p_Piavca__LookAtToFacialTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::LookAtToFacial *) x));
}
static void *_p_Piavca__TimeOffsetTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::TimeOffset *) x));
}
static void *_p_Piavca__ScaleMotionRootTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::ScaleMotionRoot *) x));
}
static void *_p_Piavca__TurnMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::TurnMotion *) x));
}
static void *_p_Piavca__SubMotionTo_p_Piavca__MotionFilter(void *x) {
    return (void *)((Piavca::MotionFilter *)  ((Piavca::SubMotion *) x));
}
static void *_p_Piavca__PyTimeCallbackTo_p_Piavca__TimeCallback(void *x) {
    return (void *)((Piavca::TimeCallback *)  ((Piavca::PyTimeCallback *) x));
}
static void *_p_Piavca__AvatarMotionQueueTo_p_Piavca__AvatarTimeCallback(void *x) {
    return (void *)((Piavca::AvatarTimeCallback *)  ((Piavca::AvatarMotionQueue *) x));
}
static void *_p_Piavca__PyAvatarTimeCallbackTo_p_Piavca__AvatarTimeCallback(void *x) {
    return (void *)((Piavca::AvatarTimeCallback *)  ((Piavca::PyAvatarTimeCallback *) x));
}
static void *_p_Piavca__RandomGazeMotionTo_p_Piavca__SelfBlend(void *x) {
    return (void *)((Piavca::SelfBlend *) (Piavca::LoopMotion *) ((Piavca::RandomGazeMotion *) x));
}
static void *_p_Piavca__MultiMotionLoopTo_p_Piavca__SelfBlend(void *x) {
    return (void *)((Piavca::SelfBlend *) (Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *) ((Piavca::MultiMotionLoop *) x));
}
static void *_p_Piavca__RandomBlendLoopTo_p_Piavca__SelfBlend(void *x) {
    return (void *)((Piavca::SelfBlend *) (Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::RandomBlendLoop *) x));
}
static void *_p_Piavca__RandomAddLoopTo_p_Piavca__SelfBlend(void *x) {
    return (void *)((Piavca::SelfBlend *) (Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::RandomAddLoop *) x));
}
static void *_p_Piavca__ProxemicsLoopTo_p_Piavca__SelfBlend(void *x) {
    return (void *)((Piavca::SelfBlend *) (Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::ProxemicsLoop *) x));
}
static void *_p_Piavca__LoopMotionTo_p_Piavca__SelfBlend(void *x) {
    return (void *)((Piavca::SelfBlend *)  ((Piavca::LoopMotion *) x));
}
static void *_p_Piavca__RandomTimingsLoopTo_p_Piavca__SelfBlend(void *x) {
    return (void *)((Piavca::SelfBlend *) (Piavca::LoopMotion *) ((Piavca::RandomTimingsLoop *) x));
}
static void *_p_Piavca__ChoiceLoopMotionTo_p_Piavca__SelfBlend(void *x) {
    return (void *)((Piavca::SelfBlend *) (Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *) ((Piavca::ChoiceLoopMotion *) x));
}
static void *_p_Piavca__RandomLoopMotionTo_p_Piavca__SelfBlend(void *x) {
    return (void *)((Piavca::SelfBlend *) (Piavca::LoopMotion *)(Piavca::RandomTimingsLoop *)(Piavca::MultiMotionLoop *)(Piavca::ChoiceLoopMotion *) ((Piavca::RandomLoopMotion *) x));
}
static swig_type_info _swigt__p_Piavca__Avatar = {"_p_Piavca__Avatar", "Piavca::Avatar *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__AvatarMotionQueue = {"_p_Piavca__AvatarMotionQueue", "Piavca::AvatarMotionQueue *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__AvatarPostureBlend = {"_p_Piavca__AvatarPostureBlend", "Piavca::AvatarPostureBlend *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__AvatarTargetStruct = {"_p_Piavca__AvatarTargetStruct", "Piavca::AvatarTargetStruct *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__AvatarTimeCallback = {"_p_Piavca__AvatarTimeCallback", "Piavca::AvatarTimeCallback *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__BlendBetween = {"_p_Piavca__BlendBetween", "Piavca::BlendBetween *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__ChoiceLoopMotion = {"_p_Piavca__ChoiceLoopMotion", "Piavca::ChoiceLoopMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__Core = {"_p_Piavca__Core", "Piavca::Core *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__LookAtMotion = {"_p_Piavca__LookAtMotion", "Piavca::LookAtMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__LookAtToFacial = {"_p_Piavca__LookAtToFacial", "Piavca::LookAtToFacial *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__LoopMotion = {"_p_Piavca__LoopMotion", "Piavca::LoopMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__MaskedMotion = {"_p_Piavca__MaskedMotion", "Piavca::MaskedMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__Motion = {"_p_Piavca__Motion", "Piavca::Motion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__MotionAdder = {"_p_Piavca__MotionAdder", "Piavca::MotionAdder *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__MotionFilter = {"_p_Piavca__MotionFilter", "Piavca::MotionFilter *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__MotionImp = {"_p_Piavca__MotionImp", "Piavca::MotionImp *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__MotionMask = {"_p_Piavca__MotionMask", "Piavca::MotionMask *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__MotionParser = {"_p_Piavca__MotionParser", "Piavca::MotionParser *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__MotionSaver = {"_p_Piavca__MotionSaver", "Piavca::MotionSaver *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__MultiMotionLoop = {"_p_Piavca__MultiMotionLoop", "Piavca::MultiMotionLoop *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__Object = {"_p_Piavca__Object", "Piavca::Object *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__ObjectTargetStruct = {"_p_Piavca__ObjectTargetStruct", "Piavca::ObjectTargetStruct *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__ProxemicsLoop = {"_p_Piavca__ProxemicsLoop", "Piavca::ProxemicsLoop *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__PyAvatarTimeCallback = {"_p_Piavca__PyAvatarTimeCallback", "Piavca::PyAvatarTimeCallback *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__PyMotion = {"_p_Piavca__PyMotion", "Piavca::PyMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__PyTimeCallback = {"_p_Piavca__PyTimeCallback", "Piavca::PyTimeCallback *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__Quat = {"_p_Piavca__Quat", "Piavca::Quat *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__RandomAddLoop = {"_p_Piavca__RandomAddLoop", "Piavca::RandomAddLoop *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__RandomBlendLoop = {"_p_Piavca__RandomBlendLoop", "Piavca::RandomBlendLoop *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__RandomGazeMotion = {"_p_Piavca__RandomGazeMotion", "Piavca::RandomGazeMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__RandomLoopMotion = {"_p_Piavca__RandomLoopMotion", "Piavca::RandomLoopMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__RandomTimingsLoop = {"_p_Piavca__RandomTimingsLoop", "Piavca::RandomTimingsLoop *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__ScaleMotion = {"_p_Piavca__ScaleMotion", "Piavca::ScaleMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__ScaleMotionRoot = {"_p_Piavca__ScaleMotionRoot", "Piavca::ScaleMotionRoot *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__ScaleMotionSpeed = {"_p_Piavca__ScaleMotionSpeed", "Piavca::ScaleMotionSpeed *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__SelfBlend = {"_p_Piavca__SelfBlend", "Piavca::SelfBlend *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__SequentialBlend = {"_p_Piavca__SequentialBlend", "Piavca::SequentialBlend *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__SubMotion = {"_p_Piavca__SubMotion", "Piavca::SubMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__TimeCallback = {"_p_Piavca__TimeCallback", "Piavca::TimeCallback *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__TimeOffset = {"_p_Piavca__TimeOffset", "Piavca::TimeOffset *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__TimeRangeMotion = {"_p_Piavca__TimeRangeMotion", "Piavca::TimeRangeMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__TrackMotion = {"_p_Piavca__TrackMotion", "Piavca::TrackMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__TurnMotion = {"_p_Piavca__TurnMotion", "Piavca::TurnMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__TwoMotionCombiner = {"_p_Piavca__TwoMotionCombiner", "Piavca::TwoMotionCombiner *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__Vec = {"_p_Piavca__Vec", "Piavca::Vec *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__ZeroMotion = {"_p_Piavca__ZeroMotion", "Piavca::ZeroMotion *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__flagStruct = {"_p_Piavca__flagStruct", "Piavca::flagStruct *", 0, 0, 0};
static swig_type_info _swigt__p_Piavca__queueElement = {"_p_Piavca__queueElement", "Piavca::queueElement *", 0, 0, 0};
static swig_type_info _swigt__p_StringVector = {"_p_StringVector", "StringVector *", 0, 0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *|_TCHAR *", 0, 0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, 0};
static swig_type_info _swigt__p_istringstream = {"_p_istringstream", "istringstream *", 0, 0, 0};
static swig_type_info _swigt__p_p_Piavca__MotionParser = {"_p_p_Piavca__MotionParser", "Piavca::MotionParser **", 0, 0, 0};
static swig_type_info _swigt__p_std__fstream = {"_p_std__fstream", "std::fstream *|Piavca::tfstream *", 0, 0, 0};
static swig_type_info _swigt__p_std__ifstream = {"_p_std__ifstream", "std::ifstream *|Piavca::tifstream *", 0, 0, 0};
static swig_type_info _swigt__p_std__istringstream = {"_p_std__istringstream", "std::istringstream *|Piavca::tistringstream *", 0, 0, 0};
static swig_type_info _swigt__p_std__listTtstring_t = {"_p_std__listTtstring_t", "std::list<tstring > *", 0, 0, 0};
static swig_type_info _swigt__p_std__ofstream = {"_p_std__ofstream", "std::ofstream *|Piavca::tofstream *", 0, 0, 0};
static swig_type_info _swigt__p_std__ostream = {"_p_std__ostream", "std::ostream *", 0, 0, 0};
static swig_type_info _swigt__p_std__ostringstream = {"_p_std__ostringstream", "std::ostringstream *|Piavca::tostringstream *", 0, 0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *|Piavca::tstring *", 0, 0, 0};
static swig_type_info _swigt__p_std__stringstream = {"_p_std__stringstream", "std::stringstream *|Piavca::tstringstream *", 0, 0, 0};
static swig_type_info _swigt__p_std__vectorTPiavca__AvatarTargetStruct_t = {"_p_std__vectorTPiavca__AvatarTargetStruct_t", "std::vector<Piavca::AvatarTargetStruct > *|Piavca::AvatarTargetVec *", 0, 0, 0};
static swig_type_info _swigt__p_std__vectorTPiavca__Motion_p_t = {"_p_std__vectorTPiavca__Motion_p_t", "std::vector<Piavca::Motion * > *|Piavca::MotionVec *", 0, 0, 0};
static swig_type_info _swigt__p_std__vectorTPiavca__ObjectTargetStruct_t = {"_p_std__vectorTPiavca__ObjectTargetStruct_t", "std::vector<Piavca::ObjectTargetStruct > *|Piavca::ObjectTargetVec *", 0, 0, 0};
static swig_type_info _swigt__p_std__vectorTstd__pairTint_Piavca__Quat_t_t = {"_p_std__vectorTstd__pairTint_Piavca__Quat_t_t", "std::vector<std::pair<int,Piavca::Quat > > *", 0, 0, 0};
static swig_type_info _swigt__p_std__vectorTstd__pairTtstring_int_t_t = {"_p_std__vectorTstd__pairTtstring_int_t_t", "std::vector<std::pair<tstring,int > > *", 0, 0, 0};
static swig_type_info _swigt__p_std__vectorTstd__string_t = {"_p_std__vectorTstd__string_t", "std::vector<std::string > *|Piavca::StringVector *", 0, 0, 0};
static swig_type_info _swigt__p_std__vectorTtstring_t = {"_p_std__vectorTtstring_t", "std::vector<tstring > *", 0, 0, 0};
static swig_type_info _swigt__p_std__wstring = {"_p_std__wstring", "std::wstring *", 0, 0, 0};
static swig_type_info _swigt__p_tostringstream = {"_p_tostringstream", "tostringstream *", 0, 0, 0};
static swig_type_info _swigt__p_tstring = {"_p_tstring", "tstring *", 0, 0, 0};
static swig_type_info _swigt__p_type_info = {"_p_type_info", "type_info *", 0, 0, 0};
static swig_type_info _swigt__p_vectorTfloat_t = {"_p_vectorTfloat_t", "vector<float > *", 0, 0, 0};
static swig_type_info _swigt__ptrdiff_t = {"_ptrdiff_t", "ptrdiff_t", 0, 0, 0};
static swig_type_info _swigt__size_t = {"_size_t", "size_t", 0, 0, 0};
static swig_type_info _swigt__std__ptrdiff_t = {"_std__ptrdiff_t", "std::ptrdiff_t", 0, 0, 0};
static swig_type_info _swigt__std__size_t = {"_std__size_t", "std::size_t", 0, 0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_Piavca__Avatar,
  &_swigt__p_Piavca__AvatarMotionQueue,
  &_swigt__p_Piavca__AvatarPostureBlend,
  &_swigt__p_Piavca__AvatarTargetStruct,
  &_swigt__p_Piavca__AvatarTimeCallback,
  &_swigt__p_Piavca__BlendBetween,
  &_swigt__p_Piavca__ChoiceLoopMotion,
  &_swigt__p_Piavca__Core,
  &_swigt__p_Piavca__LookAtMotion,
  &_swigt__p_Piavca__LookAtToFacial,
  &_swigt__p_Piavca__LoopMotion,
  &_swigt__p_Piavca__MaskedMotion,
  &_swigt__p_Piavca__Motion,
  &_swigt__p_Piavca__MotionAdder,
  &_swigt__p_Piavca__MotionFilter,
  &_swigt__p_Piavca__MotionImp,
  &_swigt__p_Piavca__MotionMask,
  &_swigt__p_Piavca__MotionParser,
  &_swigt__p_Piavca__MotionSaver,
  &_swigt__p_Piavca__MultiMotionLoop,
  &_swigt__p_Piavca__Object,
  &_swigt__p_Piavca__ObjectTargetStruct,
  &_swigt__p_Piavca__ProxemicsLoop,
  &_swigt__p_Piavca__PyAvatarTimeCallback,
  &_swigt__p_Piavca__PyMotion,
  &_swigt__p_Piavca__PyTimeCallback,
  &_swigt__p_Piavca__Quat,
  &_swigt__p_Piavca__RandomAddLoop,
  &_swigt__p_Piavca__RandomBlendLoop,
  &_swigt__p_Piavca__RandomGazeMotion,
  &_swigt__p_Piavca__RandomLoopMotion,
  &_swigt__p_Piavca__RandomTimingsLoop,
  &_swigt__p_Piavca__ScaleMotion,
  &_swigt__p_Piavca__ScaleMotionRoot,
  &_swigt__p_Piavca__ScaleMotionSpeed,
  &_swigt__p_Piavca__SelfBlend,
  &_swigt__p_Piavca__SequentialBlend,
  &_swigt__p_Piavca__SubMotion,
  &_swigt__p_Piavca__TimeCallback,
  &_swigt__p_Piavca__TimeOffset,
  &_swigt__p_Piavca__TimeRangeMotion,
  &_swigt__p_Piavca__TrackMotion,
  &_swigt__p_Piavca__TurnMotion,
  &_swigt__p_Piavca__TwoMotionCombiner,
  &_swigt__p_Piavca__Vec,
  &_swigt__p_Piavca__ZeroMotion,
  &_swigt__p_Piavca__flagStruct,
  &_swigt__p_Piavca__queueElement,
  &_swigt__p_StringVector,
  &_swigt__p_char,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_istringstream,
  &_swigt__p_p_Piavca__MotionParser,
  &_swigt__p_std__fstream,
  &_swigt__p_std__ifstream,
  &_swigt__p_std__istringstream,
  &_swigt__p_std__listTtstring_t,
  &_swigt__p_std__ofstream,
  &_swigt__p_std__ostream,
  &_swigt__p_std__ostringstream,
  &_swigt__p_std__string,
  &_swigt__p_std__stringstream,
  &_swigt__p_std__vectorTPiavca__AvatarTargetStruct_t,
  &_swigt__p_std__vectorTPiavca__Motion_p_t,
  &_swigt__p_std__vectorTPiavca__ObjectTargetStruct_t,
  &_swigt__p_std__vectorTstd__pairTint_Piavca__Quat_t_t,
  &_swigt__p_std__vectorTstd__pairTtstring_int_t_t,
  &_swigt__p_std__vectorTstd__string_t,
  &_swigt__p_std__vectorTtstring_t,
  &_swigt__p_std__wstring,
  &_swigt__p_tostringstream,
  &_swigt__p_tstring,
  &_swigt__p_type_info,
  &_swigt__p_vectorTfloat_t,
  &_swigt__ptrdiff_t,
  &_swigt__size_t,
  &_swigt__std__ptrdiff_t,
  &_swigt__std__size_t,
};

static swig_cast_info _swigc__p_Piavca__Avatar[] = {  {&_swigt__p_Piavca__Avatar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__AvatarMotionQueue[] = {  {&_swigt__p_Piavca__AvatarMotionQueue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__AvatarPostureBlend[] = {  {&_swigt__p_Piavca__AvatarPostureBlend, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__AvatarTargetStruct[] = {  {&_swigt__p_Piavca__AvatarTargetStruct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__AvatarTimeCallback[] = {  {&_swigt__p_Piavca__AvatarMotionQueue, _p_Piavca__AvatarMotionQueueTo_p_Piavca__AvatarTimeCallback, 0, 0},  {&_swigt__p_Piavca__AvatarTimeCallback, 0, 0, 0},  {&_swigt__p_Piavca__PyAvatarTimeCallback, _p_Piavca__PyAvatarTimeCallbackTo_p_Piavca__AvatarTimeCallback, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__BlendBetween[] = {  {&_swigt__p_Piavca__BlendBetween, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ChoiceLoopMotion[] = {  {&_swigt__p_Piavca__ChoiceLoopMotion, 0, 0, 0},  {&_swigt__p_Piavca__RandomLoopMotion, _p_Piavca__RandomLoopMotionTo_p_Piavca__ChoiceLoopMotion, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Core[] = {  {&_swigt__p_Piavca__Core, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__LookAtMotion[] = {  {&_swigt__p_Piavca__LookAtMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__LookAtToFacial[] = {  {&_swigt__p_Piavca__LookAtToFacial, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__LoopMotion[] = {  {&_swigt__p_Piavca__RandomGazeMotion, _p_Piavca__RandomGazeMotionTo_p_Piavca__LoopMotion, 0, 0},  {&_swigt__p_Piavca__MultiMotionLoop, _p_Piavca__MultiMotionLoopTo_p_Piavca__LoopMotion, 0, 0},  {&_swigt__p_Piavca__RandomBlendLoop, _p_Piavca__RandomBlendLoopTo_p_Piavca__LoopMotion, 0, 0},  {&_swigt__p_Piavca__RandomAddLoop, _p_Piavca__RandomAddLoopTo_p_Piavca__LoopMotion, 0, 0},  {&_swigt__p_Piavca__ProxemicsLoop, _p_Piavca__ProxemicsLoopTo_p_Piavca__LoopMotion, 0, 0},  {&_swigt__p_Piavca__LoopMotion, 0, 0, 0},  {&_swigt__p_Piavca__ChoiceLoopMotion, _p_Piavca__ChoiceLoopMotionTo_p_Piavca__LoopMotion, 0, 0},  {&_swigt__p_Piavca__RandomLoopMotion, _p_Piavca__RandomLoopMotionTo_p_Piavca__LoopMotion, 0, 0},  {&_swigt__p_Piavca__RandomTimingsLoop, _p_Piavca__RandomTimingsLoopTo_p_Piavca__LoopMotion, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MaskedMotion[] = {  {&_swigt__p_Piavca__MaskedMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Motion[] = {  {&_swigt__p_Piavca__TwoMotionCombiner, _p_Piavca__TwoMotionCombinerTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MotionAdder, _p_Piavca__MotionAdderTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MultiMotionLoop, _p_Piavca__MultiMotionLoopTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__RandomGazeMotion, _p_Piavca__RandomGazeMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__Motion, 0, 0, 0},  {&_swigt__p_Piavca__TimeRangeMotion, _p_Piavca__TimeRangeMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ZeroMotion, _p_Piavca__ZeroMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__TrackMotion, _p_Piavca__TrackMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__PyMotion, _p_Piavca__PyMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ScaleMotion, _p_Piavca__ScaleMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__AvatarPostureBlend, _p_Piavca__AvatarPostureBlendTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__SequentialBlend, _p_Piavca__SequentialBlendTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ProxemicsLoop, _p_Piavca__ProxemicsLoopTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__RandomAddLoop, _p_Piavca__RandomAddLoopTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__SelfBlend, _p_Piavca__SelfBlendTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__LoopMotion, _p_Piavca__LoopMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__RandomLoopMotion, _p_Piavca__RandomLoopMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ChoiceLoopMotion, _p_Piavca__ChoiceLoopMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MaskedMotion, _p_Piavca__MaskedMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__TurnMotion, _p_Piavca__TurnMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__TimeOffset, _p_Piavca__TimeOffsetTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__LookAtMotion, _p_Piavca__LookAtMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__SubMotion, _p_Piavca__SubMotionTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ScaleMotionRoot, _p_Piavca__ScaleMotionRootTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__RandomBlendLoop, _p_Piavca__RandomBlendLoopTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__RandomTimingsLoop, _p_Piavca__RandomTimingsLoopTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MotionSaver, _p_Piavca__MotionSaverTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__ScaleMotionSpeed, _p_Piavca__ScaleMotionSpeedTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__MotionFilter, _p_Piavca__MotionFilterTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__LookAtToFacial, _p_Piavca__LookAtToFacialTo_p_Piavca__Motion, 0, 0},  {&_swigt__p_Piavca__BlendBetween, _p_Piavca__BlendBetweenTo_p_Piavca__Motion, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionAdder[] = {  {&_swigt__p_Piavca__MotionAdder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionFilter[] = {  {&_swigt__p_Piavca__ScaleMotion, _p_Piavca__ScaleMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__MotionSaver, _p_Piavca__MotionSaverTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__TimeRangeMotion, _p_Piavca__TimeRangeMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__MotionFilter, 0, 0, 0},  {&_swigt__p_Piavca__ScaleMotionSpeed, _p_Piavca__ScaleMotionSpeedTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__LookAtToFacial, _p_Piavca__LookAtToFacialTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__TimeOffset, _p_Piavca__TimeOffsetTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__ScaleMotionRoot, _p_Piavca__ScaleMotionRootTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__TurnMotion, _p_Piavca__TurnMotionTo_p_Piavca__MotionFilter, 0, 0},  {&_swigt__p_Piavca__SubMotion, _p_Piavca__SubMotionTo_p_Piavca__MotionFilter, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionImp[] = {  {&_swigt__p_Piavca__MotionImp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionMask[] = {  {&_swigt__p_Piavca__MotionMask, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionParser[] = {  {&_swigt__p_Piavca__MotionParser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MotionSaver[] = {  {&_swigt__p_Piavca__MotionSaver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__MultiMotionLoop[] = {  {&_swigt__p_Piavca__MultiMotionLoop, 0, 0, 0},  {&_swigt__p_Piavca__RandomBlendLoop, _p_Piavca__RandomBlendLoopTo_p_Piavca__MultiMotionLoop, 0, 0},  {&_swigt__p_Piavca__RandomAddLoop, _p_Piavca__RandomAddLoopTo_p_Piavca__MultiMotionLoop, 0, 0},  {&_swigt__p_Piavca__ProxemicsLoop, _p_Piavca__ProxemicsLoopTo_p_Piavca__MultiMotionLoop, 0, 0},  {&_swigt__p_Piavca__ChoiceLoopMotion, _p_Piavca__ChoiceLoopMotionTo_p_Piavca__MultiMotionLoop, 0, 0},  {&_swigt__p_Piavca__RandomLoopMotion, _p_Piavca__RandomLoopMotionTo_p_Piavca__MultiMotionLoop, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Object[] = {  {&_swigt__p_Piavca__Object, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ObjectTargetStruct[] = {  {&_swigt__p_Piavca__ObjectTargetStruct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ProxemicsLoop[] = {  {&_swigt__p_Piavca__ProxemicsLoop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__PyAvatarTimeCallback[] = {  {&_swigt__p_Piavca__PyAvatarTimeCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__PyMotion[] = {  {&_swigt__p_Piavca__PyMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__PyTimeCallback[] = {  {&_swigt__p_Piavca__PyTimeCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Quat[] = {  {&_swigt__p_Piavca__Quat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__RandomAddLoop[] = {  {&_swigt__p_Piavca__RandomAddLoop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__RandomBlendLoop[] = {  {&_swigt__p_Piavca__RandomBlendLoop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__RandomGazeMotion[] = {  {&_swigt__p_Piavca__RandomGazeMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__RandomLoopMotion[] = {  {&_swigt__p_Piavca__RandomLoopMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__RandomTimingsLoop[] = {  {&_swigt__p_Piavca__MultiMotionLoop, _p_Piavca__MultiMotionLoopTo_p_Piavca__RandomTimingsLoop, 0, 0},  {&_swigt__p_Piavca__RandomBlendLoop, _p_Piavca__RandomBlendLoopTo_p_Piavca__RandomTimingsLoop, 0, 0},  {&_swigt__p_Piavca__RandomAddLoop, _p_Piavca__RandomAddLoopTo_p_Piavca__RandomTimingsLoop, 0, 0},  {&_swigt__p_Piavca__ProxemicsLoop, _p_Piavca__ProxemicsLoopTo_p_Piavca__RandomTimingsLoop, 0, 0},  {&_swigt__p_Piavca__RandomTimingsLoop, 0, 0, 0},  {&_swigt__p_Piavca__ChoiceLoopMotion, _p_Piavca__ChoiceLoopMotionTo_p_Piavca__RandomTimingsLoop, 0, 0},  {&_swigt__p_Piavca__RandomLoopMotion, _p_Piavca__RandomLoopMotionTo_p_Piavca__RandomTimingsLoop, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ScaleMotion[] = {  {&_swigt__p_Piavca__ScaleMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ScaleMotionRoot[] = {  {&_swigt__p_Piavca__ScaleMotionRoot, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ScaleMotionSpeed[] = {  {&_swigt__p_Piavca__ScaleMotionSpeed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__SelfBlend[] = {  {&_swigt__p_Piavca__SelfBlend, 0, 0, 0},  {&_swigt__p_Piavca__RandomGazeMotion, _p_Piavca__RandomGazeMotionTo_p_Piavca__SelfBlend, 0, 0},  {&_swigt__p_Piavca__MultiMotionLoop, _p_Piavca__MultiMotionLoopTo_p_Piavca__SelfBlend, 0, 0},  {&_swigt__p_Piavca__RandomBlendLoop, _p_Piavca__RandomBlendLoopTo_p_Piavca__SelfBlend, 0, 0},  {&_swigt__p_Piavca__RandomAddLoop, _p_Piavca__RandomAddLoopTo_p_Piavca__SelfBlend, 0, 0},  {&_swigt__p_Piavca__ProxemicsLoop, _p_Piavca__ProxemicsLoopTo_p_Piavca__SelfBlend, 0, 0},  {&_swigt__p_Piavca__ChoiceLoopMotion, _p_Piavca__ChoiceLoopMotionTo_p_Piavca__SelfBlend, 0, 0},  {&_swigt__p_Piavca__RandomLoopMotion, _p_Piavca__RandomLoopMotionTo_p_Piavca__SelfBlend, 0, 0},  {&_swigt__p_Piavca__LoopMotion, _p_Piavca__LoopMotionTo_p_Piavca__SelfBlend, 0, 0},  {&_swigt__p_Piavca__RandomTimingsLoop, _p_Piavca__RandomTimingsLoopTo_p_Piavca__SelfBlend, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__SequentialBlend[] = {  {&_swigt__p_Piavca__SelfBlend, _p_Piavca__SelfBlendTo_p_Piavca__SequentialBlend, 0, 0},  {&_swigt__p_Piavca__RandomGazeMotion, _p_Piavca__RandomGazeMotionTo_p_Piavca__SequentialBlend, 0, 0},  {&_swigt__p_Piavca__MultiMotionLoop, _p_Piavca__MultiMotionLoopTo_p_Piavca__SequentialBlend, 0, 0},  {&_swigt__p_Piavca__RandomBlendLoop, _p_Piavca__RandomBlendLoopTo_p_Piavca__SequentialBlend, 0, 0},  {&_swigt__p_Piavca__RandomAddLoop, _p_Piavca__RandomAddLoopTo_p_Piavca__SequentialBlend, 0, 0},  {&_swigt__p_Piavca__SequentialBlend, 0, 0, 0},  {&_swigt__p_Piavca__ProxemicsLoop, _p_Piavca__ProxemicsLoopTo_p_Piavca__SequentialBlend, 0, 0},  {&_swigt__p_Piavca__AvatarPostureBlend, _p_Piavca__AvatarPostureBlendTo_p_Piavca__SequentialBlend, 0, 0},  {&_swigt__p_Piavca__ChoiceLoopMotion, _p_Piavca__ChoiceLoopMotionTo_p_Piavca__SequentialBlend, 0, 0},  {&_swigt__p_Piavca__RandomLoopMotion, _p_Piavca__RandomLoopMotionTo_p_Piavca__SequentialBlend, 0, 0},  {&_swigt__p_Piavca__LoopMotion, _p_Piavca__LoopMotionTo_p_Piavca__SequentialBlend, 0, 0},  {&_swigt__p_Piavca__RandomTimingsLoop, _p_Piavca__RandomTimingsLoopTo_p_Piavca__SequentialBlend, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__SubMotion[] = {  {&_swigt__p_Piavca__SubMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__TimeCallback[] = {  {&_swigt__p_Piavca__TimeCallback, 0, 0, 0},  {&_swigt__p_Piavca__PyTimeCallback, _p_Piavca__PyTimeCallbackTo_p_Piavca__TimeCallback, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__TimeOffset[] = {  {&_swigt__p_Piavca__TimeOffset, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__TimeRangeMotion[] = {  {&_swigt__p_Piavca__TimeRangeMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__TrackMotion[] = {  {&_swigt__p_Piavca__TrackMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__TurnMotion[] = {  {&_swigt__p_Piavca__TurnMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__TwoMotionCombiner[] = {  {&_swigt__p_Piavca__TwoMotionCombiner, 0, 0, 0},  {&_swigt__p_Piavca__MotionAdder, _p_Piavca__MotionAdderTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__MultiMotionLoop, _p_Piavca__MultiMotionLoopTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__RandomGazeMotion, _p_Piavca__RandomGazeMotionTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__AvatarPostureBlend, _p_Piavca__AvatarPostureBlendTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__SequentialBlend, _p_Piavca__SequentialBlendTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__ProxemicsLoop, _p_Piavca__ProxemicsLoopTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__RandomAddLoop, _p_Piavca__RandomAddLoopTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__SelfBlend, _p_Piavca__SelfBlendTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__LoopMotion, _p_Piavca__LoopMotionTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__RandomLoopMotion, _p_Piavca__RandomLoopMotionTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__ChoiceLoopMotion, _p_Piavca__ChoiceLoopMotionTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__MaskedMotion, _p_Piavca__MaskedMotionTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__RandomBlendLoop, _p_Piavca__RandomBlendLoopTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__RandomTimingsLoop, _p_Piavca__RandomTimingsLoopTo_p_Piavca__TwoMotionCombiner, 0, 0},  {&_swigt__p_Piavca__BlendBetween, _p_Piavca__BlendBetweenTo_p_Piavca__TwoMotionCombiner, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__Vec[] = {  {&_swigt__p_Piavca__Vec, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__ZeroMotion[] = {  {&_swigt__p_Piavca__ZeroMotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__flagStruct[] = {  {&_swigt__p_Piavca__flagStruct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Piavca__queueElement[] = {  {&_swigt__p_Piavca__queueElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_StringVector[] = {  {&_swigt__p_StringVector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_istringstream[] = {  {&_swigt__p_istringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_Piavca__MotionParser[] = {  {&_swigt__p_p_Piavca__MotionParser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__fstream[] = {  {&_swigt__p_std__fstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ifstream[] = {  {&_swigt__p_std__ifstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__istringstream[] = {  {&_swigt__p_std__istringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listTtstring_t[] = {  {&_swigt__p_std__listTtstring_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ofstream[] = {  {&_swigt__p_std__ofstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostream[] = {  {&_swigt__p_std__ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostringstream[] = {  {&_swigt__p_std__ostringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__stringstream[] = {  {&_swigt__p_std__stringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTPiavca__AvatarTargetStruct_t[] = {  {&_swigt__p_std__vectorTPiavca__AvatarTargetStruct_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTPiavca__Motion_p_t[] = {  {&_swigt__p_std__vectorTPiavca__Motion_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTPiavca__ObjectTargetStruct_t[] = {  {&_swigt__p_std__vectorTPiavca__ObjectTargetStruct_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__pairTint_Piavca__Quat_t_t[] = {  {&_swigt__p_std__vectorTstd__pairTint_Piavca__Quat_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__pairTtstring_int_t_t[] = {  {&_swigt__p_std__vectorTstd__pairTtstring_int_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__string_t[] = {  {&_swigt__p_std__vectorTstd__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTtstring_t[] = {  {&_swigt__p_std__vectorTtstring_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__wstring[] = {  {&_swigt__p_std__wstring, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tostringstream[] = {  {&_swigt__p_tostringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tstring[] = {  {&_swigt__p_tstring, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_type_info[] = {  {&_swigt__p_type_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vectorTfloat_t[] = {  {&_swigt__p_vectorTfloat_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__ptrdiff_t[] = {  {&_swigt__ptrdiff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__size_t[] = {  {&_swigt__size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__std__ptrdiff_t[] = {  {&_swigt__std__ptrdiff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__std__size_t[] = {  {&_swigt__std__size_t, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_Piavca__Avatar,
  _swigc__p_Piavca__AvatarMotionQueue,
  _swigc__p_Piavca__AvatarPostureBlend,
  _swigc__p_Piavca__AvatarTargetStruct,
  _swigc__p_Piavca__AvatarTimeCallback,
  _swigc__p_Piavca__BlendBetween,
  _swigc__p_Piavca__ChoiceLoopMotion,
  _swigc__p_Piavca__Core,
  _swigc__p_Piavca__LookAtMotion,
  _swigc__p_Piavca__LookAtToFacial,
  _swigc__p_Piavca__LoopMotion,
  _swigc__p_Piavca__MaskedMotion,
  _swigc__p_Piavca__Motion,
  _swigc__p_Piavca__MotionAdder,
  _swigc__p_Piavca__MotionFilter,
  _swigc__p_Piavca__MotionImp,
  _swigc__p_Piavca__MotionMask,
  _swigc__p_Piavca__MotionParser,
  _swigc__p_Piavca__MotionSaver,
  _swigc__p_Piavca__MultiMotionLoop,
  _swigc__p_Piavca__Object,
  _swigc__p_Piavca__ObjectTargetStruct,
  _swigc__p_Piavca__ProxemicsLoop,
  _swigc__p_Piavca__PyAvatarTimeCallback,
  _swigc__p_Piavca__PyMotion,
  _swigc__p_Piavca__PyTimeCallback,
  _swigc__p_Piavca__Quat,
  _swigc__p_Piavca__RandomAddLoop,
  _swigc__p_Piavca__RandomBlendLoop,
  _swigc__p_Piavca__RandomGazeMotion,
  _swigc__p_Piavca__RandomLoopMotion,
  _swigc__p_Piavca__RandomTimingsLoop,
  _swigc__p_Piavca__ScaleMotion,
  _swigc__p_Piavca__ScaleMotionRoot,
  _swigc__p_Piavca__ScaleMotionSpeed,
  _swigc__p_Piavca__SelfBlend,
  _swigc__p_Piavca__SequentialBlend,
  _swigc__p_Piavca__SubMotion,
  _swigc__p_Piavca__TimeCallback,
  _swigc__p_Piavca__TimeOffset,
  _swigc__p_Piavca__TimeRangeMotion,
  _swigc__p_Piavca__TrackMotion,
  _swigc__p_Piavca__TurnMotion,
  _swigc__p_Piavca__TwoMotionCombiner,
  _swigc__p_Piavca__Vec,
  _swigc__p_Piavca__ZeroMotion,
  _swigc__p_Piavca__flagStruct,
  _swigc__p_Piavca__queueElement,
  _swigc__p_StringVector,
  _swigc__p_char,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_istringstream,
  _swigc__p_p_Piavca__MotionParser,
  _swigc__p_std__fstream,
  _swigc__p_std__ifstream,
  _swigc__p_std__istringstream,
  _swigc__p_std__listTtstring_t,
  _swigc__p_std__ofstream,
  _swigc__p_std__ostream,
  _swigc__p_std__ostringstream,
  _swigc__p_std__string,
  _swigc__p_std__stringstream,
  _swigc__p_std__vectorTPiavca__AvatarTargetStruct_t,
  _swigc__p_std__vectorTPiavca__Motion_p_t,
  _swigc__p_std__vectorTPiavca__ObjectTargetStruct_t,
  _swigc__p_std__vectorTstd__pairTint_Piavca__Quat_t_t,
  _swigc__p_std__vectorTstd__pairTtstring_int_t_t,
  _swigc__p_std__vectorTstd__string_t,
  _swigc__p_std__vectorTtstring_t,
  _swigc__p_std__wstring,
  _swigc__p_tostringstream,
  _swigc__p_tstring,
  _swigc__p_type_info,
  _swigc__p_vectorTfloat_t,
  _swigc__ptrdiff_t,
  _swigc__size_t,
  _swigc__std__ptrdiff_t,
  _swigc__std__size_t,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/*************************************************************************
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.

 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop though that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.

 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
**/

#ifdef __cplusplus
extern "C" {
#endif
    
    SWIGRUNTIME void
    SWIG_InitializeModule(void *clientdata) {
        swig_type_info *type, *ret;
        swig_cast_info *cast;
        size_t i;
        swig_module_info *module_head;
        static int init_run = 0;
        
        clientdata = clientdata;
        
        if (init_run) return;
        init_run = 1;
        
        /* Initialize the swig_module */
        swig_module.type_initial = swig_type_initial;
        swig_module.cast_initial = swig_cast_initial;
        
        /* Try and load any already created modules */
        module_head = SWIG_GetModule(clientdata);
        if (module_head) {
            swig_module.next = module_head->next;
            module_head->next = &swig_module;
        } else {
            /* This is the first module loaded */
            swig_module.next = &swig_module;
            SWIG_SetModule(clientdata, &swig_module);
        }
        
        /* Now work on filling in swig_module.types */
        for (i = 0; i < swig_module.size; ++i) {
            type = 0;
            
            /* if there is another module already loaded */
            if (swig_module.next != &swig_module) {
                type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
            }
            if (type) {
                /* Overwrite clientdata field */
                if (swig_module.type_initial[i]->clientdata) type->clientdata = swig_module.type_initial[i]->clientdata;
            } else {
                type = swig_module.type_initial[i];
            }
            
            /* Insert casting types */
            cast = swig_module.cast_initial[i];
            while (cast->type) {
                /* Don't need to add information already in the list */
                ret = 0;
                if (swig_module.next != &swig_module) {
                    ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
                }
                if (ret && type == swig_module.type_initial[i]) {
                    cast->type = ret;
                    ret = 0;
                }
                
                if (!ret) {
                    if (type->cast) {
                        type->cast->prev = cast;
                        cast->next = type->cast;
                    }
                    type->cast = cast;
                }
                
                cast++;
            }
            
            /* Set entry in modules->types array equal to the type */
            swig_module.types[i] = type;
        }
        swig_module.types[i] = 0;
    }
    
    /* This function will propagate the clientdata field of type to
    * any new swig_type_info structures that have been added into the list
    * of equivalent types.  It is like calling
    * SWIG_TypeClientData(type, clientdata) a second time.
    */
    SWIGRUNTIME void
    SWIG_PropagateClientData(void) {
        size_t i;
        swig_cast_info *equiv;
        static int init_run = 0;
        
        if (init_run) return;
        init_run = 1;
        
        for (i = 0; i < swig_module.size; i++) {
            if (swig_module.types[i]->clientdata) {
                equiv = swig_module.types[i]->cast;
                while (equiv) {
                    if (!equiv->converter) {
                        if (equiv->type && !equiv->type->clientdata)
                        SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
                    }
                    equiv = equiv->next;
                }
            }
        }
    }
    
#ifdef __cplusplus
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
    
    /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
    
    /* -----------------------------------------------------------------------------
     * global variable support code.
     * ----------------------------------------------------------------------------- */
    
    typedef struct swig_globalvar {
        char       *name;                  /* Name of global variable */
        PyObject *(*get_attr)(void);       /* Return the current value */
        int       (*set_attr)(PyObject *); /* Set the value */
        struct swig_globalvar *next;
    } swig_globalvar;
    
    typedef struct swig_varlinkobject {
        PyObject_HEAD
        swig_globalvar *vars;
    } swig_varlinkobject;
    
    SWIGINTERN PyObject *
    swig_varlink_repr(swig_varlinkobject *v) {
        v = v;
        return PyString_FromString("<Swig global variables>");
    }
    
    SWIGINTERN int
    swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
        swig_globalvar  *var;
        flags = flags;
        fprintf(fp,"Swig global variables { ");
        for (var = v->vars; var; var=var->next) {
            fprintf(fp,"%s", var->name);
            if (var->next) fprintf(fp,", ");
        }
        fprintf(fp," }\n");
        return 0;
    }
    
    SWIGINTERN PyObject *
    swig_varlink_getattr(swig_varlinkobject *v, char *n) {
        swig_globalvar *var = v->vars;
        while (var) {
            if (strcmp(var->name,n) == 0) {
                return (*var->get_attr)();
            }
            var = var->next;
        }
        PyErr_SetString(PyExc_NameError,"Unknown C global variable");
        return NULL;
    }
    
    SWIGINTERN int
    swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
        swig_globalvar *var = v->vars;
        while (var) {
            if (strcmp(var->name,n) == 0) {
                return (*var->set_attr)(p);
            }
            var = var->next;
        }
        PyErr_SetString(PyExc_NameError,"Unknown C global variable");
        return 1;
    }
    
    SWIGINTERN PyTypeObject*
    swig_varlink_type(void) {
        static char varlink__doc__[] = "Swig var link object";
        static PyTypeObject varlink_type
#if !defined(__cplusplus)
        ;
        static int type_init = 0;  
        if (!type_init) {
            PyTypeObject tmp
#endif
            = {
                PyObject_HEAD_INIT(&PyType_Type)
                0,                                  /* Number of items in variable part (ob_size) */
                (char *)"swigvarlink",              /* Type name (tp_name) */
                sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
                0,                                  /* Itemsize (tp_itemsize) */
                0,                                  /* Deallocator (tp_dealloc) */ 
                (printfunc) swig_varlink_print,     /* Print (tp_print) */
                (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
                (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
                0,                                  /* tp_compare */
                (reprfunc) swig_varlink_repr,       /* tp_repr */
                0,                                  /* tp_as_number */
                0,                                  /* tp_as_sequence */
                0,                                  /* tp_as_mapping */
                0,                                  /* tp_hash */
                0,                                  /* tp_call */
                0,                                  /* tp_str */
                0,                                  /* tp_getattro */
                0,                                  /* tp_setattro */
                0,                                  /* tp_as_buffer */
                0,                                  /* tp_flags */
                varlink__doc__,                     /* tp_doc */
#if PY_VERSION_HEX >= 0x02000000
                0,                                  /* tp_traverse */
                0,                                  /* tp_clear */
#endif
#if PY_VERSION_HEX >= 0x02010000
                0,                                  /* tp_richcompare */
                0,                                  /* tp_weaklistoffset */
#endif
#if PY_VERSION_HEX >= 0x02020000
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
                0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
                0,0,0,0                             /* tp_alloc -> tp_next */
#endif
            };
#if !defined(__cplusplus)
            varlink_type = tmp;
            type_init = 1;
        }
#endif
        return &varlink_type;
    }
    
    /* Create a variable linking object for use later */
    SWIGINTERN PyObject *
    SWIG_Python_newvarlink(void) {
        swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
        if (result) {
            result->vars = 0;
        }
        return ((PyObject*) result);
    }
    
    SWIGINTERN void 
    SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
        swig_varlinkobject *v = (swig_varlinkobject *) p;
        swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
        if (gv) {
            size_t size = strlen(name)+1;
            gv->name = (char *)malloc(size);
            if (gv->name) {
                strncpy(gv->name,name,size);
                gv->get_attr = get_attr;
                gv->set_attr = set_attr;
                gv->next = v->vars;
            }
        }
        v->vars = gv;
    }
    
    /* -----------------------------------------------------------------------------
     * constants/methods manipulation
     * ----------------------------------------------------------------------------- */
    
    /* Install Constants */
    SWIGINTERN void
    SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
        PyObject *obj = 0;
        size_t i;
        for (i = 0; constants[i].type; ++i) {
            switch(constants[i].type) {
                case SWIG_PY_INT:
                obj = PyInt_FromLong(constants[i].lvalue);
                break;
                case SWIG_PY_FLOAT:
                obj = PyFloat_FromDouble(constants[i].dvalue);
                break;
                case SWIG_PY_STRING:
                if (constants[i].pvalue) {
                    obj = PyString_FromString((char *) constants[i].pvalue);
                } else {
                    Py_INCREF(Py_None);
                    obj = Py_None;
                }
                break;
                case SWIG_PY_POINTER:
                obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
                break;
                case SWIG_PY_BINARY:
                obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
                break;
                default:
                obj = 0;
                break;
            }
            if (obj) {
                PyDict_SetItemString(d,constants[i].name,obj);
                Py_DECREF(obj);
            }
        }
    }
    
    /* -----------------------------------------------------------------------------*/
    /* Fix SwigMethods to carry the callback ptrs when needed */
    /* -----------------------------------------------------------------------------*/
    
    SWIGINTERN void
    SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
        size_t i;
        for (i = 0; methods[i].ml_name; ++i) {
            char *c = methods[i].ml_doc;
            if (c && (c = strstr(c, "swig_ptr: "))) {
                int j;
                swig_const_info *ci = 0;
                char *name = c + 10;
                for (j = 0; const_table[j].type; ++j) {
                    if (strncmp(const_table[j].name, name, 
                    strlen(const_table[j].name)) == 0) {
                        ci = &(const_table[j]);
                        break;
                    }
                }
                if (ci) {
                    size_t shift = (ci->ptype) - types;
                    swig_type_info *ty = types_initial[shift];
                    size_t ldoc = (c - methods[i].ml_doc);
                    size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
                    char *ndoc = (char*)malloc(ldoc + lptr + 10);
                    if (ndoc) {
                        char *buff = ndoc;
                        void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
                        if (ptr) {
                            strncpy(buff, methods[i].ml_doc, ldoc);
                            buff += ldoc;
                            strncpy(buff, "swig_ptr: ", 10);
                            buff += 10;
                            SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
                            methods[i].ml_doc = ndoc;
                        }
                    }
                }
            }
        }
    }
    
    /* -----------------------------------------------------------------------------*
     *  Initialize type list
     * -----------------------------------------------------------------------------*/
    
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    PyObject *m, *d;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    
    /* Fix SwigMethods to carry the callback ptrs when needed */
    SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
    
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    SWIG_InitializeModule(0);
    SWIG_InstallConstants(d,swig_const_table);
    
    {
        PyDict_SetItemString(d,"LOCAL_COORD", SWIG_From_int(static_cast<int >(Piavca::LOCAL_COORD))); 
    }
    {
        PyDict_SetItemString(d,"JOINTLOCAL_COORD", SWIG_From_int(static_cast<int >(Piavca::JOINTLOCAL_COORD))); 
    }
    {
        PyDict_SetItemString(d,"BASE_COORD", SWIG_From_int(static_cast<int >(Piavca::BASE_COORD))); 
    }
    {
        PyDict_SetItemString(d,"INCLUDINGBASE_COORD", SWIG_From_int(static_cast<int >(Piavca::INCLUDINGBASE_COORD))); 
    }
    {
        PyDict_SetItemString(d,"WORLD_COORD", SWIG_From_int(static_cast<int >(Piavca::WORLD_COORD))); 
    }
    {
        PyDict_SetItemString(d,"root_position_id", SWIG_From_int(static_cast<int >(Piavca::root_position_id))); 
    }
    {
        PyDict_SetItemString(d,"root_orientation_id", SWIG_From_int(static_cast<int >(Piavca::root_orientation_id))); 
    }
    {
        PyDict_SetItemString(d,"NULL_TYPE", SWIG_From_int(static_cast<int >(Piavca::NULL_TYPE))); 
    }
    {
        PyDict_SetItemString(d,"FLOAT_TYPE", SWIG_From_int(static_cast<int >(Piavca::FLOAT_TYPE))); 
    }
    {
        PyDict_SetItemString(d,"VEC_TYPE", SWIG_From_int(static_cast<int >(Piavca::VEC_TYPE))); 
    }
    {
        PyDict_SetItemString(d,"QUAT_TYPE", SWIG_From_int(static_cast<int >(Piavca::QUAT_TYPE))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_NONE", SWIG_From_int(static_cast<int >(Piavca::TRANS_NONE))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_SWAP_XZ", SWIG_From_int(static_cast<int >(Piavca::TRANS_SWAP_XZ))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_SWAP_XY", SWIG_From_int(static_cast<int >(Piavca::TRANS_SWAP_XY))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_SWAP_YZ", SWIG_From_int(static_cast<int >(Piavca::TRANS_SWAP_YZ))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_CYCLE_YZX", SWIG_From_int(static_cast<int >(Piavca::TRANS_CYCLE_YZX))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_CYCLE_ZXY", SWIG_From_int(static_cast<int >(Piavca::TRANS_CYCLE_ZXY))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_NEG_X", SWIG_From_int(static_cast<int >(Piavca::TRANS_NEG_X))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_NEG_Y", SWIG_From_int(static_cast<int >(Piavca::TRANS_NEG_Y))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_NEG_Z", SWIG_From_int(static_cast<int >(Piavca::TRANS_NEG_Z))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_ARM_UP", SWIG_From_int(static_cast<int >(Piavca::TRANS_ARM_UP))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_ARM_DOWN", SWIG_From_int(static_cast<int >(Piavca::TRANS_ARM_DOWN))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_REVERSE_ORDER", SWIG_From_int(static_cast<int >(Piavca::TRANS_REVERSE_ORDER))); 
    }
    {
        PyDict_SetItemString(d,"TRANS_SKIP_FIRST_FRAME", SWIG_From_int(static_cast<int >(Piavca::TRANS_SKIP_FIRST_FRAME))); 
    }
    PyDict_SetItemString(d,(char*)"cvar", SWIG_globals);
    SWIG_addvarlink(SWIG_globals,(char*)"Pi",_wrap_Pi_get, _wrap_Pi_set);
}

